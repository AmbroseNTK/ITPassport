var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AccountPage.html",[0,0.761,1,1.683]],["body/components/AccountPage.html",[0,1.191,1,2.634,2,2.247,3,0.083,4,0.074,5,1.618,6,1.666,7,1.618,8,1.618,9,0.066,10,3.373,11,0.786,12,3.161,13,1.618,14,3.773,15,3.466,16,4.885,17,2.383,18,6.378,19,2.313,20,5.464,21,0.235,22,0.533,23,5.63,24,2.048,25,2.218,26,1.699,27,1.961,28,3.45,29,4.476,30,6.96,31,6.96,32,1.905,33,0.361,34,3.078,35,4.389,36,5.897,37,3.839,38,4.189,39,6.352,40,4.545,41,3.909,42,5.897,43,3.659,44,4.199,45,0.776,46,3.821,47,0.703,48,0.009,49,0.809,50,0.393,51,0.703,52,3.446,53,3.821,54,2.498,55,2.55,56,3.821,57,5.464,58,2.713,59,5.464,60,3.821,61,5.464,62,5.464,63,5.464,64,4.823,65,4.823,66,4.823,67,5.464,68,4.823,69,5.464,70,5.464,71,4.823,72,3.821,73,5.464,74,5.464,75,3.821,76,3.821,77,3.821,78,2.623,79,3.821,80,0.284,81,0.654,82,2.3,83,1.239,84,2.414,85,2.707,86,2.535,87,2.858,88,2.202,89,1.962,90,0.593,91,2.708,92,1.528,93,2.535,94,2.535,95,2.682,96,2.535,97,2.41,98,3.078,99,2.858,100,1.071,101,0.074,102,0.165,103,1.408,104,3.136,105,2.682,106,3.373,107,3.149,108,3.373,109,3.821,110,1.151,111,3.373,112,3.821,113,4.086,114,0.482,115,3.835,116,3.821,117,1.894,118,3.821,119,3.821,120,0.72,121,3.373,122,2.202,123,3.373,124,3.373,125,3.821,126,3.821,127,3.821,128,3.078,129,1.532,130,5.464,131,5.464,132,5.464,133,6.144,134,3.821,135,5.464,136,4.823,137,5.464,138,0.998,139,2.313,140,2.313,141,1.618,142,2.947,143,1.618,144,3.821,145,1.618,146,1.446,147,1.528,148,1.618,149,1.446,150,1.618,151,1.446,152,1.486,153,1.618,154,1.446,155,1.239,156,2.313,157,1.446,158,1.618,159,1.446,160,1.618,161,1.446,162,0.737,163,1.618,164,1.446,165,1.618,166,1.446,167,1.618,168,1.446,169,1.618,170,1.408,171,1.618,172,1.446,173,1.961,174,1.618,175,1.446,176,1.618,177,1.446,178,1.618,179,1.446,180,1.528,181,1.618,182,1.446,183,1.528,184,1.618,185,1.618,186,0.004,187,0.005,188,0.004]],["title/modules/AccountPageModule.html",[189,1.108,190,3.325]],["body/modules/AccountPageModule.html",[0,1.072,1,3.371,3,0.095,4,0.122,9,0.108,48,0.009,80,0.287,81,1.072,83,2.029,100,1.755,101,0.122,102,0.27,114,0.79,120,1.179,138,1.635,186,0.006,187,0.007,188,0.006,189,1.56,190,6.585,191,2.306,192,2.434,193,3.349,194,2.574,195,2.574,196,2.434,197,5.526,198,5.526,199,3.115,200,2.574,201,6.26,202,3.028,203,3.303,204,2.65,205,3.303,206,2.65,207,3.447,208,2.502,209,3.206,210,6.26,211,2.65,212,2.502,213,3]],["title/components/AdPagePage.html",[0,0.761,146,1.683]],["body/components/AdPagePage.html",[0,1.136,1,1.555,2,2.366,3,0.087,4,0.08,5,1.74,6,1.793,7,1.74,8,1.74,9,0.071,11,0.828,12,3.29,13,1.74,14,3.804,15,3.531,17,2.509,19,2.436,21,0.253,22,0.561,27,2.065,28,3.564,33,0.389,39,6.318,40,4.641,45,0.716,47,0.756,48,0.009,49,0.729,50,0.414,51,0.756,54,2.382,55,2.654,58,1.514,65,5.079,66,5.079,68,5.079,80,0.217,81,0.704,83,1.332,84,1.555,85,1.598,96,2.727,101,0.08,102,0.177,103,1.514,104,1.598,128,4.635,136,5.079,138,1.074,139,2.436,140,2.436,141,1.74,142,3.044,143,1.74,145,1.74,146,2.721,147,3.285,148,1.74,149,1.555,150,1.74,151,1.555,152,1.598,153,1.74,154,1.555,155,1.332,156,2.436,157,1.555,158,1.74,159,1.555,160,1.74,161,1.555,162,0.793,163,1.74,164,1.555,165,1.74,166,1.555,167,1.74,168,1.555,169,1.74,170,1.514,171,1.74,172,1.555,173,2.065,174,1.74,175,1.555,176,1.74,177,1.555,178,1.74,179,1.555,180,1.643,181,1.74,182,1.555,183,1.643,184,1.74,185,1.74,186,0.004,187,0.006,188,0.004,214,6.318,215,5.866,216,3.629,217,6.638,218,5.754,219,7.569,220,7.191,221,7.191,222,3.629,223,5.754,224,4.111,225,5.754,226,5.754,227,5.754,228,5.079,229,5.754,230,5.754,231,4.111,232,4.111,233,0.871,234,0.547,235,0.577,236,5.754,237,2.114,238,2.225,239,5.754,240,4.635,241,5.754,242,5.754,243,7.191,244,7.191,245,7.191,246,5.754,247,4.111,248,5.754,249,5.754,250,4.111,251,4.111,252,4.111,253,6.638,254,4.111,255,4.111,256,4.111,257,4.111,258,4.111,259,4.111,260,3.316,261,4.111,262,4.111,263,5.754,264,4.111,265,4.111,266,4.111,267,5.754,268,3.629,269,3.629,270,4.111,271,4.111,272,4.111,273,4.111,274,3.628]],["title/modules/AdPagePageModule.html",[189,1.108,275,3.325]],["body/modules/AdPagePageModule.html",[0,1.066,3,0.095,4,0.121,9,0.108,48,0.009,80,0.287,81,1.066,83,2.019,100,1.746,101,0.121,102,0.269,114,0.786,120,1.173,138,1.627,146,3.368,147,2.49,186,0.006,187,0.007,188,0.006,189,1.553,191,2.295,192,2.422,193,3.342,194,2.562,195,2.562,196,2.422,199,3.105,200,2.562,202,3.019,203,3.293,204,2.637,205,3.293,206,2.637,207,3.44,208,2.49,209,3.197,211,2.637,212,2.49,213,2.985,214,5.018,215,4.658,275,6.577,276,5.499,277,5.499,278,6.229,279,6.229]],["title/components/AppComponent.html",[0,0.761,149,1.683]],["body/components/AppComponent.html",[0,1.254,1,1.885,2,2.696,3,0.1,4,0.097,5,2.109,7,2.109,8,2.109,9,0.086,13,2.109,14,3.878,15,3.562,19,2.775,21,0.306,22,0.639,27,2.353,33,0.62,39,6.69,43,3.928,45,0.693,47,0.916,48,0.009,49,0.805,50,0.359,51,0.916,54,1.788,55,1.992,58,1.835,80,0.271,81,0.853,83,1.615,84,1.885,85,1.937,89,2.557,101,0.097,102,0.215,104,3.028,122,2.871,138,1.301,139,2.775,140,2.775,141,2.109,142,3.296,143,2.109,145,2.109,146,1.885,147,1.992,148,2.109,149,2.946,150,2.109,151,1.885,152,1.937,153,2.109,154,1.885,155,1.615,156,2.775,157,1.885,158,2.109,159,1.885,160,2.109,161,1.885,162,0.961,163,2.109,164,1.885,165,2.109,166,1.885,167,2.109,168,1.885,169,2.109,170,1.835,171,2.109,172,1.885,173,2.353,174,2.109,175,1.885,176,2.109,177,1.885,178,2.109,179,1.885,180,1.992,181,2.109,182,1.885,183,1.992,184,2.109,185,2.109,186,0.005,187,0.006,188,0.005,222,4.398,234,0.663,235,0.699,260,3.778,280,4.398,281,3.491,282,6.556,283,7.328,284,7.786,285,6.82,286,6.82,287,4.982,288,4.982,289,4.982,290,4.601,291,4.013,292,4.398,293,4.013,294,4.398,295,4.982,296,4.982,297,4.982,298,4.982,299,4.982,300,4.982,301,4.982,302,4.982]],["title/modules/AppModule.html",[189,1.108,303,3.325]],["body/modules/AppModule.html",[3,0.104,4,0.085,9,0.076,15,1.7,26,0.97,48,0.009,49,0.48,58,2.212,80,0.302,81,0.748,82,2.631,83,1.417,85,1.7,86,2.9,88,2.519,90,0.932,99,3.269,100,1.225,101,0.085,102,0.189,120,0.823,122,3.953,138,1.142,149,3.299,155,1.417,186,0.004,187,0.006,188,0.004,189,1.09,191,1.611,192,1.7,193,2.821,194,2.821,195,2.469,196,1.7,199,2.469,200,1.798,202,2.401,209,1.851,212,2.401,260,4.608,285,4.837,286,4.837,290,4.813,291,3.521,292,3.859,293,3.521,294,3.859,303,6.566,304,3.859,305,3.859,306,3.859,307,3.859,308,5.611,309,5.611,310,5.611,311,4.372,312,6.004,313,3.859,314,3.521,315,6.004,316,4.372,317,6.004,318,4.372,319,4.372,320,4.372,321,3.859,322,4.837,323,6.004,324,6.004,325,5.3,326,3.859,327,3.521,328,4.372,329,6.004,330,3.859,331,6.858,332,3.521,333,3.521,334,4.372,335,4.372,336,4.372,337,3.859,338,4.837,339,4.372,340,4.372,341,2.631,342,3.269,343,4.372,344,4.837,345,4.372,346,4.49,347,4.372,348,6.054,349,3.859,350,4.49,351,4.372,352,4.837,353,4.372,354,2.9,355,4.837,356,4.372,357,4.49,358,4.372,359,4.49,360,4.372,361,4.837,362,4.372,363,4.837,364,4.372,365,4.837,366,3.521,367,3.859,368,4.372,369,4.372,370,4.372,371,4.372,372,4.372,373,4.372,374,4.372,375,4.372,376,3.859,377,4.372,378,4.372,379,3.068,380,4.372,381,2.328,382,2.328,383,2.167,384,2.328,385,2.519,386,4.372,387,4.372,388,3.068,389,4.372,390,4.372,391,6.858,392,6.004,393,4.372,394,4.372,395,4.372,396,4.372,397,4.372,398,4.372,399,4.372,400,4.372,401,4.372,402,3.859]],["title/modules/AppRoutingModule.html",[189,1.108,308,3.12]],["body/modules/AppRoutingModule.html",[3,0.123,4,0.107,9,0.095,24,1.469,48,0.009,58,2.829,80,0.278,81,0.94,85,2.716,86,3.644,100,1.54,101,0.107,102,0.237,113,5.222,114,0.693,128,4.424,147,2.792,152,2.716,155,2.264,162,1.347,173,2.9,180,2.792,183,2.196,186,0.007,187,0.007,188,0.005,191,2.024,196,2.136,202,2.792,207,3.25,208,2.792,211,3.838,212,2.196,215,4.108,308,4.901,354,3.644,403,5.493,404,5.493,405,5.222,406,5.493,407,7.678,408,6.165,409,5.493,410,5.222,411,5.493,412,5.222,413,5.493,414,4.108,415,8.002,416,5.493,417,4.424,418,4.108,419,5.493,420,4.108,421,5.493,422,5.493,423,5.493,424,5.493,425,4.108,426,4.849,427,3.855,428,4.108,429,5.493,430,5.625,431,3.855,432,4.108,433,5.493,434,4.108,435,5.493,436,5.493,437,4.849,438,4.108,439,4.849,440,5.493,441,5.493]],["title/components/BeforeStartPage.html",[0,0.761,151,1.683]],["body/components/BeforeStartPage.html",[0,1.169,1,1.641,2,2.456,3,0.091,4,0.084,5,1.836,6,1.891,7,1.836,8,1.836,9,0.075,11,0.859,12,3.385,13,1.836,14,3.826,15,3.514,17,2.604,19,2.528,21,0.267,22,0.582,27,2.143,28,3.648,33,0.41,40,4.71,41,4.051,43,3.701,45,0.73,47,0.798,48,0.009,49,0.75,50,0.312,51,0.798,54,2.451,55,2.731,58,1.598,64,5.272,71,5.272,80,0.252,81,0.742,84,1.641,85,1.686,89,2.226,96,2.877,100,1.216,101,0.084,102,0.187,103,1.598,104,2.656,122,4.241,138,1.133,139,2.528,140,2.528,141,1.836,142,3.115,143,1.836,145,1.836,146,1.641,147,1.734,148,1.836,149,1.641,150,1.836,151,2.785,152,3.325,153,1.836,154,1.641,155,1.406,156,2.528,157,1.641,158,1.836,159,1.641,160,1.836,161,1.641,162,0.836,163,1.836,164,1.641,165,1.836,166,1.641,167,1.836,168,1.641,169,1.836,170,1.598,171,1.836,172,1.641,173,2.143,174,1.836,175,1.641,176,1.836,177,1.641,178,1.836,179,1.641,180,1.734,181,1.836,182,1.641,183,1.734,184,1.836,185,1.836,186,0.004,187,0.006,188,0.004,228,5.272,234,0.578,235,0.608,260,2.5,274,3.766,388,4.191,427,6,428,5.965,442,6.425,443,3.829,444,6.83,445,5.972,446,6.029,447,6.496,448,2.877,449,5.735,450,4.337,451,4.337,452,5.972,453,5.972,454,5.972,455,5.972,456,4.337,457,4.337,458,5.972,459,5.972,460,5.972,461,7.359,462,7.359,463,4.337,464,1.799,465,3.829,466,4.337,467,5.972,468,4.337,469,3.829,470,3.829,471,3.829,472,3.494,473,3.494,474,4.337,475,4.337,476,3.829,477,5.972,478,5.272,479,5.972,480,5.972,481,5.972]],["title/modules/BeforeStartPageModule.html",[189,1.108,482,3.325]],["body/modules/BeforeStartPageModule.html",[0,1.066,3,0.095,4,0.121,9,0.108,48,0.009,80,0.287,81,1.066,83,2.019,100,1.746,101,0.121,102,0.269,114,0.786,120,1.173,138,1.627,151,3.368,152,2.422,186,0.006,187,0.007,188,0.006,189,1.553,191,2.295,192,2.422,193,3.342,194,2.562,195,2.562,196,2.422,199,3.105,200,2.562,202,3.019,203,3.293,204,2.637,205,3.293,206,2.637,207,3.44,208,2.49,209,3.197,211,2.637,212,2.49,213,2.985,428,4.658,442,5.018,482,6.577,483,5.499,484,5.499,485,6.229,486,6.229]],["title/guards/BeforeTestGuard.html",[410,3.325,487,3.325]],["body/guards/BeforeTestGuard.html",[3,0.091,4,0.116,9,0.103,11,0.858,21,0.367,27,2.638,33,0.563,41,3.643,43,4.038,45,0.695,47,1.352,48,0.009,49,0.807,50,0.529,51,1.352,54,2.139,78,3.277,80,0.271,81,1.02,89,3.059,92,2.383,100,1.671,101,0.116,102,0.257,103,2.196,117,2.954,152,2.858,173,2.638,186,0.006,187,0.007,188,0.006,281,3.173,410,5.496,427,5.158,430,6.883,448,3.954,471,5.261,488,4.457,489,7.035,490,4.457,491,4.182,492,5.92,493,7.349,494,7.349,495,4.801,496,5.261,497,6.702,498,6.419,499,6.702,500,5.261,501,5.92,502,5.92,503,2.012,504,2.214,505,3.298]],["title/components/CatInfoModalPage.html",[0,0.761,154,1.683]],["body/components/CatInfoModalPage.html",[0,1.2,1,1.727,2,2.543,3,0.14,4,0.089,5,1.932,6,1.99,7,1.932,8,1.932,9,0.079,11,0.89,12,3.476,13,1.932,14,3.846,15,3.533,17,2.696,19,2.617,21,0.281,22,0.603,27,2.219,28,3.476,33,0.431,36,5.621,41,2.262,45,0.783,47,0.839,48,0.009,49,0.77,50,0.445,51,0.839,54,2.219,55,2.472,58,1.681,80,0.245,81,0.781,83,1.479,84,1.727,85,1.774,97,5.107,98,3.676,100,1.279,101,0.089,102,0.197,103,1.681,104,1.774,113,4.624,138,1.192,139,2.617,140,2.617,141,1.932,142,3.182,143,1.932,145,1.932,146,1.727,147,1.824,148,1.932,149,1.727,150,1.932,151,1.727,152,1.774,153,1.932,154,2.844,155,2.731,156,2.617,157,1.727,158,1.932,159,1.727,160,1.932,161,1.727,162,0.88,163,1.932,164,1.727,165,1.932,166,1.727,167,1.932,168,1.727,169,1.932,170,1.681,171,1.932,172,1.727,173,2.219,174,1.932,175,1.727,176,1.932,177,1.727,178,1.932,179,1.727,180,1.824,181,1.932,182,1.727,183,1.824,184,1.932,185,1.932,186,0.004,187,0.006,188,0.004,274,3.899,354,5.59,382,3.734,506,6.787,507,3.676,508,6.19,509,5.458,510,7.856,511,7.856,512,7.012,513,6.19,514,4.563,515,7.012,516,6.183,517,4.563,518,4.563,519,4.563,520,4.563,521,4.652,522,4.028,523,4.028,524,4.563,525,4.563,526,2.63,527,4.563,528,4.563,529,4.563,530,4.563,531,3.676,532,4.563,533,3.894,534,6.635,535,6.183,536,3.421]],["title/modules/CatInfoModalPageModule.html",[189,1.108,309,3.12]],["body/modules/CatInfoModalPageModule.html",[0,1.061,3,0.128,4,0.12,9,0.107,48,0.009,80,0.287,81,1.061,83,2.01,87,4.636,100,1.738,101,0.12,102,0.267,114,0.783,120,1.168,138,1.619,154,3.365,155,2.01,186,0.006,187,0.007,188,0.006,189,1.545,191,2.284,192,2.411,193,3.335,194,2.55,195,2.55,196,2.411,199,3.096,200,2.55,202,3.01,203,3.283,204,2.624,205,3.283,206,2.624,207,3.433,208,2.478,209,3.187,211,2.624,212,2.478,213,2.971,309,6.165,354,4.113,506,4.994,537,5.472,538,5.472,539,5.472]],["title/interfaces/Category.html",[382,2.367,540,2.063]],["body/interfaces/Category.html",[3,0.107,4,0.137,9,0.122,21,0.432,22,0.791,48,0.009,50,0.506,101,0.137,155,2.847,186,0.007,187,0.008,188,0.007,382,4.317,540,3.259,541,4.227,542,6.2]],["title/injectables/CategoryEffects.html",[350,3.325,504,1.339]],["body/injectables/CategoryEffects.html",[3,0.086,4,0.111,9,0.098,21,0.35,22,0.696,33,0.538,37,4.696,38,4.925,45,0.675,47,1.046,48,0.009,49,0.625,50,0.562,51,1.046,78,3.209,80,0.281,81,0.974,88,3.278,92,2.274,101,0.139,102,0.245,103,2.095,104,2.211,155,2.314,186,0.006,187,0.007,188,0.006,234,0.757,235,0.798,341,3.423,350,5.338,504,2.15,533,3.538,543,2.726,544,4.581,545,2.728,546,3.991,547,5.707,548,5.687,549,5.01,550,7.139,551,5.176,552,7.139,553,5.338,554,7.139,555,5.338,556,4.736,557,5.01,558,1.282,559,5.01,560,7.139,561,5.338,562,7.139,563,3.586,564,4.92,565,5.687,566,5.02,567,5.687,568,3.773,569,3.586,570,3.991,571,4.253,572,3.586,573,0.997,574,5.02]],["title/injectables/CategoryService.html",[97,2.804,504,1.339]],["body/injectables/CategoryService.html",[3,0.085,4,0.108,9,0.096,21,0.343,22,0.687,27,2.529,33,0.527,44,4.461,45,0.822,47,1.422,48,0.009,49,0.849,50,0.556,51,1.422,54,2.774,55,2.228,78,3.179,80,0.279,81,0.954,90,0.865,91,3.493,92,2.228,97,4.444,101,0.108,102,0.24,104,3.006,117,2.762,186,0.005,187,0.007,188,0.005,281,2.967,382,4.725,504,2.123,505,3.083,523,6.221,533,2.762,543,2.67,556,4.675,558,1.001,566,4.919,575,4.919,576,7.729,577,2.739,578,7.047,579,8.122,580,7.047,581,4.675,582,7.047,583,7.047,584,5.572,585,5.572,586,5.572,587,7.047,588,5.572,589,5.572,590,5.572,591,5.572,592,4.919,593,5.572,594,5.572,595,5.572,596,5.572,597,5.572,598,5.572,599,5.572,600,5.572,601,4.919]],["title/components/ChallengePage.html",[0,0.761,157,1.683]],["body/components/ChallengePage.html",[0,1.309,1,2.061,2,2.856,3,0.106,4,0.106,5,2.306,6,2.375,7,2.306,8,2.306,9,0.094,11,1,12,3.791,13,2.306,14,3.909,15,3.591,17,3.029,19,2.94,21,0.335,27,2.493,28,3.992,33,0.723,45,0.657,48,0.009,49,0.763,54,1.954,55,2.177,58,2.007,80,0.178,81,0.932,84,2.061,85,2.118,101,0.106,102,0.235,138,1.422,139,2.94,140,2.94,141,2.306,142,3.41,143,2.306,145,2.306,146,2.061,147,2.177,148,2.306,149,2.061,150,2.306,151,2.061,152,2.118,153,2.306,154,2.061,155,1.765,156,2.94,157,3.048,158,2.306,159,2.061,160,2.306,161,2.061,162,1.05,163,2.306,164,2.061,165,2.306,166,2.061,167,2.306,168,2.061,169,2.306,170,2.007,171,2.306,172,2.061,173,2.493,174,2.306,175,2.061,176,2.306,177,2.061,178,2.306,179,2.061,180,2.177,181,2.306,182,2.061,183,2.177,184,2.306,185,2.306,186,0.005,187,0.007,188,0.005,274,4.38,438,6.023,602,4.808,603,7.648,604,6.946,605,5.446,606,5.446,607,5.446,608,5.446,609,5.446,610,5.446]],["title/modules/ChallengePageModule.html",[189,1.108,611,3.325]],["body/modules/ChallengePageModule.html",[0,1.072,3,0.095,4,0.122,9,0.108,48,0.009,80,0.287,81,1.072,83,2.029,100,1.755,101,0.122,102,0.27,114,0.79,120,1.179,138,1.635,157,3.371,186,0.006,187,0.007,188,0.006,189,1.56,191,2.306,192,2.434,193,3.349,194,2.574,195,2.574,196,2.434,199,3.115,200,2.574,202,3.028,203,3.303,204,2.65,205,3.303,206,2.65,207,3.447,208,2.502,209,3.206,211,2.65,212,2.502,213,3,611,6.585,612,5.526,613,5.526,614,6.26,615,6.26]],["title/interfaces/Config.html",[381,2.367,540,2.063]],["body/interfaces/Config.html",[3,0.107,4,0.137,9,0.122,21,0.432,22,0.791,48,0.009,50,0.506,101,0.137,186,0.007,187,0.008,188,0.007,381,4.317,540,3.259,541,4.227,616,6.2,617,5.828]],["title/injectables/ConfigEffects.html",[346,3.325,504,1.339]],["body/injectables/ConfigEffects.html",[3,0.085,4,0.109,9,0.097,21,0.344,22,0.689,33,0.528,37,4.658,38,4.894,41,4.31,45,0.667,47,1.028,48,0.009,49,0.614,50,0.557,51,1.028,78,3.183,80,0.284,81,0.957,88,3.221,92,2.234,100,1.566,101,0.137,102,0.241,103,2.059,104,2.745,186,0.005,187,0.007,188,0.005,234,0.744,235,0.784,341,3.363,346,5.28,381,3.759,504,2.126,533,3.499,543,2.678,545,2.706,546,3.922,547,5.682,549,4.955,551,3.707,555,5.28,556,4.684,557,4.955,558,1.268,559,4.955,561,5.28,563,3.524,564,4.88,568,3.707,569,3.524,570,5.431,571,4.179,572,3.524,573,0.98,618,4.501,619,5.588,620,7.06,621,7.06,622,6.232,623,7.06,624,7.06,625,5.588,626,4.933,627,5.588,628,5.588,629,4.933,630,4.933]],["title/injectables/DataService.html",[43,2.063,504,1.339]],["body/injectables/DataService.html",[3,0.075,4,0.096,9,0.086,15,3.226,21,0.305,22,0.638,27,2.347,33,0.469,43,3.034,44,4.571,45,0.829,47,0.913,48,0.009,49,0.545,50,0.636,51,0.913,54,1.781,55,1.984,78,3.008,80,0.271,81,0.849,90,0.77,91,3.241,92,1.984,101,0.096,102,0.214,103,1.828,104,2.844,107,2.86,122,3.769,186,0.005,187,0.006,188,0.005,260,4.215,281,2.642,379,4.589,381,4.762,388,4.589,491,3.482,504,1.97,505,2.746,521,5.696,543,2.378,545,2.287,577,2.847,581,3.292,626,4.381,631,4.381,632,6.539,633,6.539,634,1.79,635,7.314,636,6.456,637,7.314,638,7.314,639,7.314,640,7.314,641,7.774,642,4.962,643,4.962,644,4.962,645,4.962,646,4.962,647,6.539,648,4.962,649,2.229,650,4.962,651,4.962,652,4.962,653,4.962,654,4.381,655,4.962,656,4.962,657,6.539,658,5.772,659,4.962,660,4.962,661,4.962,662,4.962,663,6.539,664,4.962,665,4.962,666,4.962,667,4.962]],["title/classes/EditInfo.html",[102,0.192,668,1.246]],["body/classes/EditInfo.html",[3,0.098,4,0.054,9,0.048,11,1.276,21,0.172,22,0.422,24,1.825,25,0.843,26,1.972,32,1.633,33,0.772,45,0.501,47,0.515,48,0.009,49,0.476,50,0.648,51,0.515,80,0.091,90,0.434,101,0.179,102,0.382,110,0.843,114,1.122,120,0.527,129,0.784,162,1.022,186,0.003,187,0.004,188,0.003,233,1.777,234,0.373,235,0.392,237,0.823,238,1.754,464,1.596,503,1.186,558,1.517,573,1.559,577,1.337,634,1.633,649,1.806,668,2.116,669,0.579,670,0.823,671,1.883,672,1.031,673,4.331,674,2.798,675,2.062,676,1.305,677,1.526,678,1.305,679,1.558,680,1.305,681,1.596,682,1.305,683,1.305,684,1.809,685,1.305,686,1.305,687,1.713,688,1.903,689,1.672,690,1.305,691,1.305,692,1.305,693,1.305,694,1.305,695,1.596,696,1.853,697,1.305,698,1.305,699,1.305,700,1.305,701,0.863,702,1.305,703,1.305,704,1.305,705,1.305,706,1.337,707,1.305,708,0.843,709,0.863,710,0.843,711,1.305,712,1.419,713,1.305,714,1.305,715,1.747,716,1.243,717,1.273,718,1.273,719,1.007,720,1.243,721,1.243,722,1.273,723,0.863,724,0.863,725,1.273,726,1.273,727,0.885,728,1.273,729,1.243,730,0.863,731,0.863,732,1.273,733,1.273,734,1.214,735,1.273,736,1.273,737,1.273,738,0.885,739,1.243,740,1.337,741,1.03,742,1.273,743,1.273,744,1.273,745,1.273,746,1.243,747,0.863,748,1.273,749,1.273]],["title/classes/EditInfoFailed.html",[102,0.192,733,1.307]],["body/classes/EditInfoFailed.html",[3,0.099,4,0.055,9,0.049,11,1.278,21,0.175,22,0.427,24,1.836,25,0.855,26,1.975,32,1.646,33,0.782,45,0.414,48,0.009,49,0.312,50,0.642,80,0.093,90,0.441,101,0.179,102,0.382,110,0.855,114,1.124,120,0.535,129,0.796,162,1.032,186,0.003,187,0.004,188,0.003,233,1.781,234,0.378,235,0.398,237,0.835,238,1.768,464,1.611,503,1.199,558,1.486,573,1.561,634,1.646,668,2.006,669,0.587,670,0.835,671,1.885,675,2.071,676,1.319,677,1.533,678,1.319,679,1.565,680,1.319,681,1.611,682,1.319,683,1.319,684,1.821,685,1.319,686,1.319,687,1.726,688,1.913,689,1.685,690,1.319,691,1.319,692,1.319,693,1.611,694,1.319,695,1.611,696,1.865,697,1.319,698,1.319,699,1.319,700,1.319,701,0.876,702,1.319,703,1.319,704,1.319,705,1.319,706,1.352,707,1.319,708,0.855,709,0.876,710,0.855,711,1.319,712,1.431,713,1.319,714,1.319,715,1.752,716,1.257,717,1.288,718,1.288,719,1.018,720,1.257,721,1.257,722,1.288,723,0.876,724,0.876,725,1.288,726,1.288,727,0.898,728,1.288,729,1.257,730,0.876,731,0.876,732,1.288,733,1.573,734,1.228,735,1.288,736,1.288,737,1.288,738,0.898,739,1.257,740,1.352,741,1.042,742,1.288,743,1.288,744,1.288,745,1.288,746,1.257,747,0.876,748,1.288,749,1.288,750,4.381]],["title/classes/EditInfoSuccess.html",[102,0.192,732,1.307]],["body/classes/EditInfoSuccess.html",[3,0.099,4,0.055,9,0.049,11,1.278,21,0.175,22,0.427,24,1.836,25,0.855,26,1.975,32,1.646,33,0.782,45,0.414,48,0.009,49,0.312,50,0.642,80,0.093,90,0.441,101,0.179,102,0.382,110,0.855,114,1.124,120,0.535,129,0.796,162,1.032,186,0.003,187,0.004,188,0.003,233,1.781,234,0.378,235,0.398,237,0.835,238,1.768,464,1.611,503,1.199,558,1.486,573,1.561,634,1.646,668,2.006,669,0.587,670,0.835,671,1.885,675,2.071,676,1.319,677,1.533,678,1.319,679,1.565,680,1.319,681,1.611,682,1.319,683,1.319,684,1.821,685,1.319,686,1.319,687,1.726,688,1.913,689,1.685,690,1.319,691,1.319,692,1.611,693,1.319,694,1.319,695,1.611,696,1.865,697,1.319,698,1.319,699,1.319,700,1.319,701,0.876,702,1.319,703,1.319,704,1.319,705,1.319,706,1.352,707,1.319,708,0.855,709,0.876,710,0.855,711,1.319,712,1.431,713,1.319,714,1.319,715,1.752,716,1.257,717,1.288,718,1.288,719,1.018,720,1.257,721,1.257,722,1.288,723,0.876,724,0.876,725,1.288,726,1.288,727,0.898,728,1.288,729,1.257,730,0.876,731,0.876,732,1.573,733,1.288,734,1.228,735,1.288,736,1.288,737,1.288,738,0.898,739,1.257,740,1.352,741,1.042,742,1.288,743,1.288,744,1.288,745,1.288,746,1.257,747,0.876,748,1.288,749,1.288,751,4.381]],["title/components/EditProfileModalPage.html",[0,0.761,84,1.683]],["body/components/EditProfileModalPage.html",[0,1.161,1,1.619,2,2.433,3,0.09,4,0.083,5,1.812,6,1.866,7,1.812,8,1.812,9,0.074,11,0.852,12,3.362,13,1.812,14,3.821,15,3.51,17,2.58,19,2.505,21,0.263,22,0.577,25,2.313,26,1.624,27,2.123,28,3.627,33,0.405,35,4.614,36,6.089,44,4.336,45,0.77,47,0.787,48,0.009,49,0.912,50,0.426,51,0.787,52,4.277,54,2.434,55,2.711,58,3.371,78,2.789,80,0.271,81,0.733,82,2.576,83,1.387,84,2.769,85,3.316,86,5.506,90,0.664,91,2.933,92,1.711,93,2.839,94,2.839,95,3.003,101,0.083,102,0.185,103,1.577,104,2.637,105,3.003,106,3.778,107,2.466,113,4.425,129,1.659,138,1.118,139,2.505,140,2.505,141,1.812,142,3.098,143,1.812,145,1.812,146,1.619,147,1.711,148,1.812,149,1.619,150,1.812,151,1.619,152,1.664,153,1.812,154,1.619,155,1.387,156,2.505,157,1.619,158,1.812,159,1.619,160,1.812,161,1.619,162,0.825,163,1.812,164,1.619,165,1.812,166,1.619,167,1.812,168,1.619,169,1.812,170,1.577,171,1.812,172,1.619,173,2.123,174,1.812,175,1.619,176,1.812,177,1.619,178,1.812,179,1.619,180,1.711,181,1.812,182,1.619,183,1.711,184,1.812,185,1.812,186,0.004,187,0.006,188,0.004,322,3.447,507,3.447,508,5.987,509,5.223,513,5.223,522,3.778,730,1.321,731,1.321,741,1.408,752,6.685,753,7.317,754,7.317,755,4.279,756,7.943,757,4.279,758,4.279,759,4.279,760,4.279,761,4.279,762,4.279,763,3.778,764,5.917,765,4.279,766,5.917,767,4.279,768,3.778,769,4.279,770,5.917,771,5.223,772,5.917,773,5.917,774,5.223,775,5.917]],["title/modules/EditProfileModalPageModule.html",[189,1.108,310,3.12]],["body/modules/EditProfileModalPageModule.html",[0,1.059,3,0.094,4,0.12,9,0.107,48,0.009,58,2.985,80,0.286,81,1.059,83,2.006,84,3.363,85,2.407,86,4.106,87,4.629,100,1.735,101,0.12,102,0.267,114,0.781,120,1.166,138,1.616,186,0.006,187,0.007,188,0.006,189,1.543,191,2.28,192,2.407,193,3.332,194,2.545,195,2.545,196,2.407,199,3.093,200,2.545,202,3.007,203,3.28,204,2.62,205,3.28,206,2.62,207,3.43,208,2.474,209,3.184,211,2.62,212,2.474,213,2.966,310,6.163,539,5.464,752,4.986,776,5.464,777,5.464]],["title/classes/Fetch.html",[102,0.192,545,1.555]],["body/classes/Fetch.html",[3,0.092,4,0.117,9,0.104,11,1.202,21,0.371,22,0.722,33,0.757,45,0.7,48,0.009,50,0.628,80,0.197,90,0.935,101,0.172,102,0.345,114,1.011,186,0.006,187,0.007,188,0.006,233,1.276,234,0.802,235,0.845,381,4.264,545,3.145,558,1.329,573,1.503,617,3.997,669,1.247,671,1.815,677,1.218,679,1.276,715,1.567,719,1.4,778,3.997,779,7.399,780,3.327,781,4.453,782,2.958,783,4.094]],["title/classes/Fetch-1.html",[102,0.16,545,1.297,784,2.603]],["body/classes/Fetch-1.html",[3,0.093,4,0.119,9,0.106,11,1.207,21,0.375,22,0.727,33,0.761,45,0.705,48,0.009,50,0.63,80,0.199,90,0.947,101,0.172,102,0.347,114,1.017,155,1.978,186,0.006,187,0.007,188,0.006,234,0.812,235,0.856,382,4.288,545,3.152,558,1.096,573,1.508,669,1.262,671,1.822,677,1.233,679,1.292,715,1.292,780,3.352,781,4.487,782,2.981,783,4.126,785,4.048,786,7.456]],["title/classes/Fetch-2.html",[102,0.16,545,1.297,787,3.275]],["body/classes/Fetch-2.html",[3,0.08,4,0.102,9,0.091,11,1.234,21,0.324,22,0.662,33,0.778,45,0.642,48,0.009,50,0.632,80,0.172,90,0.816,101,0.176,102,0.364,114,1.083,186,0.005,187,0.007,188,0.005,233,1.114,234,0.7,235,0.738,383,4.252,536,4.665,545,3.097,558,1.351,573,1.524,669,1.088,671,1.841,677,1.521,679,1.114,688,2.011,712,2.005,715,1.593,741,1.616,780,3.054,782,2.716,788,3.032,789,6.793,790,4.088,791,4.088,792,4.088,793,4.088,794,3.166,795,3.915,796,3.915,797,3.759,798,3.317,799,3.317,800,3.49,801,3.915]],["title/classes/Fetch-3.html",[102,0.16,545,1.297,802,2.988]],["body/classes/Fetch-3.html",[3,0.096,4,0.123,9,0.109,11,1.176,21,0.388,22,0.742,33,0.773,45,0.72,48,0.009,50,0.625,80,0.206,90,0.979,101,0.169,102,0.328,114,0.961,186,0.006,187,0.007,188,0.006,234,0.84,235,0.885,384,4.052,545,3.148,558,1.133,573,1.488,669,1.306,671,1.797,677,1.276,715,1.337,780,3.422,782,3.043,803,4.429,804,7.611,805,4.719]],["title/classes/FetchFailed.html",[102,0.192,783,2.46]],["body/classes/FetchFailed.html",[3,0.089,4,0.114,9,0.101,11,1.189,21,0.359,22,0.708,33,0.686,45,0.747,47,1.075,48,0.009,49,0.642,50,0.652,51,1.075,80,0.191,90,0.907,101,0.171,102,0.341,114,0.997,186,0.006,187,0.007,188,0.006,233,1.237,234,0.778,235,0.82,381,4.206,545,3.071,558,1.526,573,1.49,577,2.24,617,3.876,649,2.692,669,1.209,671,1.799,672,2.152,677,1.181,679,1.237,715,1.538,719,1.358,778,3.876,780,3.264,781,4.754,782,2.902,783,4.37,806,7.26,807,5.842]],["title/classes/FetchFailed-1.html",[102,0.16,783,2.053,784,2.603]],["body/classes/FetchFailed-1.html",[3,0.093,4,0.119,9,0.106,11,1.21,21,0.378,22,0.73,33,0.58,45,0.58,48,0.009,50,0.631,80,0.2,90,0.953,101,0.172,102,0.348,114,1.019,155,1.99,186,0.006,187,0.007,188,0.006,234,0.818,235,0.861,382,4.3,545,3.103,558,1.103,573,1.511,669,1.27,671,1.825,677,1.241,679,1.3,715,1.3,780,3.365,781,4.86,782,2.992,783,4.468,785,4.073,808,6.14]],["title/classes/FetchGeneratedLog.html",[102,0.192,795,2.562]],["body/classes/FetchGeneratedLog.html",[3,0.08,4,0.102,9,0.091,11,1.234,21,0.324,22,0.662,33,0.778,45,0.642,48,0.009,50,0.632,80,0.172,90,0.816,101,0.176,102,0.364,114,1.083,186,0.005,187,0.007,188,0.005,233,1.114,234,0.7,235,0.738,383,4.252,536,4.665,545,3.039,558,1.351,573,1.524,669,1.088,671,1.841,677,1.521,679,1.114,688,2.011,712,2.005,715,1.593,741,1.616,780,3.054,782,2.716,788,3.032,790,4.528,791,4.088,792,4.088,793,4.088,794,3.166,795,4.336,796,3.915,797,3.759,798,3.317,799,3.317,800,3.49,801,3.915,809,6.793]],["title/classes/FetchGeneratedLogSuccess.html",[102,0.192,796,2.562]],["body/classes/FetchGeneratedLogSuccess.html",[3,0.078,4,0.1,9,0.089,11,1.227,21,0.315,22,0.651,33,0.744,45,0.702,47,0.942,48,0.009,49,0.562,50,0.65,51,0.942,80,0.167,90,0.795,101,0.175,102,0.361,114,1.076,186,0.005,187,0.007,188,0.005,233,1.084,234,0.682,235,0.718,383,4.225,536,4.631,545,3.022,558,1.503,573,1.516,577,2.06,649,2.531,669,1.059,671,1.831,672,1.887,677,1.501,679,1.084,688,1.986,712,1.991,715,1.573,741,1.588,780,3.001,782,2.669,788,2.951,790,4.017,791,4.47,792,4.017,793,4.017,794,3.082,795,3.847,796,4.28,797,3.694,798,3.229,799,3.229,800,3.397,801,3.847,810,6.675,811,5.121]],["title/classes/FetchSuccess.html",[102,0.192,782,1.778]],["body/classes/FetchSuccess.html",[3,0.089,4,0.114,9,0.101,11,1.189,21,0.359,22,0.708,33,0.686,45,0.747,47,1.075,48,0.009,49,0.642,50,0.652,51,1.075,80,0.191,90,0.907,101,0.171,102,0.341,114,0.997,186,0.006,187,0.007,188,0.006,233,1.237,234,0.778,235,0.82,381,4.206,545,3.071,558,1.526,573,1.49,577,2.24,617,3.876,649,2.692,669,1.209,671,1.799,672,2.152,677,1.181,679,1.237,715,1.538,719,1.358,778,3.876,780,3.551,781,4.369,782,3.158,783,4.017,812,7.26,813,5.842]],["title/classes/FetchSuccess-1.html",[102,0.16,782,1.483,784,2.603]],["body/classes/FetchSuccess-1.html",[3,0.09,4,0.115,9,0.102,11,1.194,21,0.364,22,0.713,33,0.692,45,0.751,47,1.088,48,0.009,49,0.65,50,0.653,51,1.088,80,0.193,90,0.918,101,0.171,102,0.343,114,1.003,155,1.917,186,0.006,187,0.007,188,0.006,234,0.787,235,0.83,382,4.229,545,3.079,558,1.49,573,1.495,577,2.257,649,2.707,669,1.224,671,1.806,672,2.179,677,1.195,679,1.253,715,1.253,780,3.571,781,4.402,782,3.175,783,4.048,785,3.923,814,7.315,815,5.914]],["title/classes/FetchSuccess-2.html",[102,0.16,782,1.483,787,3.275]],["body/classes/FetchSuccess-2.html",[3,0.078,4,0.1,9,0.089,11,1.227,21,0.315,22,0.651,33,0.744,45,0.702,47,0.942,48,0.009,49,0.562,50,0.65,51,0.942,80,0.167,90,0.795,101,0.175,102,0.361,114,1.076,186,0.005,187,0.007,188,0.005,233,1.084,234,0.682,235,0.718,383,4.225,536,4.631,545,3.022,558,1.503,573,1.516,577,2.06,649,2.531,669,1.059,671,1.831,672,1.887,677,1.501,679,1.084,688,1.986,712,1.991,715,1.573,741,1.588,780,3.339,782,2.969,788,2.951,790,4.017,791,4.017,792,4.017,793,4.017,794,3.082,795,3.847,796,3.847,797,3.694,798,3.229,799,3.229,800,3.397,801,3.847,816,6.675,817,5.121]],["title/classes/FetchSuccess-3.html",[102,0.16,782,1.483,802,2.988]],["body/classes/FetchSuccess-3.html",[3,0.093,4,0.119,9,0.106,11,1.16,21,0.376,22,0.728,33,0.706,45,0.762,47,1.124,48,0.009,49,0.671,50,0.653,51,1.124,80,0.199,90,0.948,101,0.167,102,0.322,114,0.942,186,0.006,187,0.007,188,0.006,234,0.814,235,0.857,384,3.974,545,3.062,558,1.507,573,1.472,577,2.303,649,2.747,669,1.264,671,1.777,672,2.251,677,1.235,715,1.294,780,3.623,782,3.221,803,4.288,805,4.57,818,7.463,819,6.111]],["title/classes/ForgotPassword.html",[102,0.192,734,1.246]],["body/classes/ForgotPassword.html",[3,0.098,4,0.054,9,0.048,11,1.276,21,0.172,22,0.422,24,1.825,25,0.843,26,1.972,32,1.633,33,0.772,45,0.501,47,0.515,48,0.009,49,0.476,50,0.648,51,0.515,80,0.091,90,0.434,101,0.179,102,0.382,110,0.843,114,1.122,120,0.527,129,0.784,162,1.022,186,0.003,187,0.004,188,0.003,233,1.777,234,0.373,235,0.392,237,0.823,238,1.754,464,1.596,503,1.186,558,1.517,573,1.559,577,1.337,634,1.633,649,1.806,668,1.995,669,0.579,670,0.823,671,1.883,672,1.031,675,2.062,676,1.305,677,1.526,678,1.305,679,1.558,680,1.305,681,1.596,682,1.305,683,1.305,684,1.809,685,1.305,686,1.305,687,1.713,688,1.903,689,1.672,690,1.305,691,1.305,692,1.305,693,1.305,694,1.596,695,1.596,696,1.853,697,1.305,698,1.305,699,1.305,700,1.305,701,0.863,702,1.305,703,1.305,704,1.305,705,1.305,706,1.337,707,1.305,708,0.843,709,0.863,710,0.843,711,1.305,712,1.419,713,1.305,714,1.305,715,1.747,716,1.243,717,1.273,718,1.273,719,1.007,720,1.243,721,1.243,722,1.273,723,0.863,724,0.863,725,1.273,726,1.273,727,0.885,728,1.273,729,1.243,730,0.863,731,0.863,732,1.273,733,1.273,734,1.486,735,1.273,736,1.273,737,1.273,738,0.885,739,1.243,740,1.337,741,1.03,742,1.273,743,1.273,744,1.273,745,1.273,746,1.243,747,0.863,748,1.273,749,1.273,820,4.331,821,2.798]],["title/classes/ForgotPasswordSentFailed.html",[102,0.192,736,1.307]],["body/classes/ForgotPasswordSentFailed.html",[3,0.099,4,0.055,9,0.049,11,1.278,21,0.175,22,0.427,24,1.836,25,0.855,26,1.975,32,1.646,33,0.782,45,0.414,48,0.009,49,0.312,50,0.642,80,0.093,90,0.441,101,0.179,102,0.382,110,0.855,114,1.124,120,0.535,129,0.796,162,1.032,186,0.003,187,0.004,188,0.003,233,1.781,234,0.378,235,0.398,237,0.835,238,1.768,464,1.611,503,1.199,558,1.486,573,1.561,634,1.646,668,2.006,669,0.587,670,0.835,671,1.885,675,2.071,676,1.319,677,1.533,678,1.319,679,1.565,680,1.319,681,1.611,682,1.319,683,1.319,684,1.821,685,1.319,686,1.319,687,1.726,688,1.913,689,1.685,690,1.319,691,1.319,692,1.319,693,1.319,694,1.319,695,1.611,696,1.865,697,1.319,698,1.319,699,1.611,700,1.319,701,0.876,702,1.319,703,1.319,704,1.319,705,1.319,706,1.352,707,1.319,708,0.855,709,0.876,710,0.855,711,1.319,712,1.431,713,1.319,714,1.319,715,1.752,716,1.257,717,1.288,718,1.288,719,1.018,720,1.257,721,1.257,722,1.288,723,0.876,724,0.876,725,1.288,726,1.288,727,0.898,728,1.288,729,1.257,730,0.876,731,0.876,732,1.288,733,1.288,734,1.228,735,1.288,736,1.573,737,1.288,738,0.898,739,1.257,740,1.352,741,1.042,742,1.288,743,1.288,744,1.288,745,1.288,746,1.257,747,0.876,748,1.288,749,1.288,822,4.381]],["title/classes/ForgotPasswordSentSuccess.html",[102,0.192,735,1.307]],["body/classes/ForgotPasswordSentSuccess.html",[3,0.099,4,0.055,9,0.049,11,1.278,21,0.175,22,0.427,24,1.836,25,0.855,26,1.975,32,1.646,33,0.782,45,0.414,48,0.009,49,0.312,50,0.642,80,0.093,90,0.441,101,0.179,102,0.382,110,0.855,114,1.124,120,0.535,129,0.796,162,1.032,186,0.003,187,0.004,188,0.003,233,1.781,234,0.378,235,0.398,237,0.835,238,1.768,464,1.611,503,1.199,558,1.486,573,1.561,634,1.646,668,2.006,669,0.587,670,0.835,671,1.885,675,2.071,676,1.319,677,1.533,678,1.319,679,1.565,680,1.319,681,1.611,682,1.319,683,1.319,684,1.821,685,1.319,686,1.319,687,1.726,688,1.913,689,1.685,690,1.319,691,1.319,692,1.319,693,1.319,694,1.319,695,1.611,696,1.865,697,1.611,698,1.319,699,1.319,700,1.319,701,0.876,702,1.319,703,1.319,704,1.319,705,1.319,706,1.352,707,1.319,708,0.855,709,0.876,710,0.855,711,1.319,712,1.431,713,1.319,714,1.319,715,1.752,716,1.257,717,1.288,718,1.288,719,1.018,720,1.257,721,1.257,722,1.288,723,0.876,724,0.876,725,1.288,726,1.288,727,0.898,728,1.288,729,1.257,730,0.876,731,0.876,732,1.288,733,1.288,734,1.228,735,1.573,736,1.288,737,1.288,738,0.898,739,1.257,740,1.352,741,1.042,742,1.288,743,1.288,744,1.288,745,1.288,746,1.257,747,0.876,748,1.288,749,1.288,823,4.381]],["title/classes/GetInfo.html",[102,0.192,689,1.246]],["body/classes/GetInfo.html",[3,0.098,4,0.054,9,0.048,11,1.276,21,0.172,22,0.422,24,1.825,25,0.843,26,1.972,32,1.633,33,0.772,45,0.501,47,0.515,48,0.009,49,0.476,50,0.648,51,0.515,80,0.091,90,0.434,101,0.179,102,0.382,110,0.843,114,1.122,120,0.527,129,0.784,162,1.022,186,0.003,187,0.004,188,0.003,233,1.777,234,0.373,235,0.392,237,0.823,238,1.754,464,1.596,503,1.186,558,1.517,573,1.559,577,1.337,634,1.633,649,1.806,668,1.995,669,0.579,670,0.823,671,1.883,672,1.031,675,2.062,676,1.305,677,1.526,678,1.305,679,1.558,680,1.305,681,1.596,682,1.305,683,1.305,684,1.809,685,1.305,686,1.305,687,1.713,688,1.903,689,1.913,690,1.305,691,1.305,692,1.305,693,1.305,694,1.305,695,1.596,696,1.853,697,1.305,698,1.305,699,1.305,700,1.305,701,0.863,702,1.305,703,1.305,704,1.305,705,1.305,706,1.337,707,1.305,708,0.843,709,0.863,710,0.843,711,1.305,712,1.419,713,1.305,714,1.305,715,1.747,716,1.243,717,1.273,718,1.273,719,1.007,720,1.243,721,1.243,722,1.273,723,0.863,724,0.863,725,1.273,726,1.273,727,0.885,728,1.273,729,1.243,730,0.863,731,0.863,732,1.273,733,1.273,734,1.214,735,1.273,736,1.273,737,1.273,738,0.885,739,1.243,740,1.337,741,1.03,742,1.273,743,1.273,744,1.273,745,1.273,746,1.243,747,0.863,748,1.273,749,1.273,824,4.331,825,2.798]],["title/classes/GetInfoFailed.html",[102,0.192,729,1.276]],["body/classes/GetInfoFailed.html",[3,0.099,4,0.055,9,0.049,11,1.278,21,0.175,22,0.427,24,1.836,25,0.855,26,1.975,32,1.646,33,0.782,45,0.414,48,0.009,49,0.312,50,0.642,80,0.093,90,0.441,101,0.179,102,0.382,110,0.855,114,1.124,120,0.535,129,0.796,162,1.032,186,0.003,187,0.004,188,0.003,233,1.781,234,0.378,235,0.398,237,0.835,238,1.768,464,1.611,503,1.199,558,1.486,573,1.561,634,1.646,668,2.006,669,0.587,670,0.835,671,1.885,675,2.071,676,1.319,677,1.533,678,1.319,679,1.565,680,1.319,681,1.611,682,1.319,683,1.319,684,1.821,685,1.319,686,1.319,687,1.726,688,1.913,689,1.685,690,1.319,691,1.611,692,1.319,693,1.319,694,1.319,695,1.611,696,1.865,697,1.319,698,1.319,699,1.319,700,1.319,701,0.876,702,1.319,703,1.319,704,1.319,705,1.319,706,1.352,707,1.319,708,0.855,709,0.876,710,0.855,711,1.319,712,1.431,713,1.319,714,1.319,715,1.752,716,1.257,717,1.288,718,1.288,719,1.018,720,1.257,721,1.257,722,1.288,723,0.876,724,0.876,725,1.288,726,1.288,727,0.898,728,1.288,729,1.535,730,0.876,731,0.876,732,1.288,733,1.288,734,1.228,735,1.288,736,1.288,737,1.288,738,0.898,739,1.257,740,1.352,741,1.042,742,1.288,743,1.288,744,1.288,745,1.288,746,1.257,747,0.876,748,1.288,749,1.288,826,4.381]],["title/classes/GetInfoSuccess.html",[102,0.192,728,1.307]],["body/classes/GetInfoSuccess.html",[3,0.098,4,0.054,9,0.048,11,1.276,21,0.172,22,0.422,24,1.825,25,0.843,26,1.972,32,1.633,33,0.772,45,0.501,47,0.515,48,0.009,49,0.476,50,0.648,51,0.515,80,0.091,90,0.434,101,0.179,102,0.382,110,0.843,114,1.122,120,0.527,129,0.784,162,1.022,186,0.003,187,0.004,188,0.003,233,1.777,234,0.373,235,0.392,237,0.823,238,1.754,464,1.596,503,1.186,558,1.517,573,1.559,577,1.337,634,1.633,649,1.806,668,1.995,669,0.579,670,0.823,671,1.883,672,1.031,675,2.062,676,1.305,677,1.526,678,1.305,679,1.558,680,1.305,681,1.596,682,1.305,683,1.305,684,1.809,685,1.305,686,1.305,687,1.713,688,1.903,689,1.672,690,1.596,691,1.305,692,1.305,693,1.305,694,1.305,695,1.596,696,1.853,697,1.305,698,1.305,699,1.305,700,1.305,701,0.863,702,1.305,703,1.305,704,1.305,705,1.305,706,1.337,707,1.305,708,0.843,709,0.863,710,0.843,711,1.305,712,1.419,713,1.305,714,1.305,715,1.747,716,1.243,717,1.273,718,1.273,719,1.007,720,1.243,721,1.243,722,1.273,723,0.863,724,0.863,725,1.273,726,1.273,727,0.885,728,1.558,729,1.243,730,0.863,731,0.863,732,1.273,733,1.273,734,1.214,735,1.273,736,1.273,737,1.273,738,0.885,739,1.243,740,1.337,741,1.03,742,1.273,743,1.273,744,1.273,745,1.273,746,1.243,747,0.863,748,1.273,749,1.273,827,4.331,828,2.798]],["title/interfaces/History.html",[383,2.204,540,2.063]],["body/interfaces/History.html",[3,0.105,4,0.135,9,0.12,21,0.427,22,0.785,48,0.009,50,0.579,101,0.135,186,0.007,187,0.008,188,0.007,234,0.923,383,3.989,536,4.841,540,3.218,541,4.174,712,2.081,829,6.122]],["title/injectables/HistoryEffects.html",[357,3.325,504,1.339]],["body/injectables/HistoryEffects.html",[3,0.068,4,0.087,9,0.077,21,0.274,22,0.593,33,0.421,35,4.692,37,4.167,38,4.478,45,0.703,47,0.819,48,0.009,49,0.489,50,0.536,51,0.819,52,4.366,78,3.203,80,0.277,81,0.762,82,2.68,88,2.566,90,0.691,92,1.78,101,0.087,102,0.192,103,1.64,104,2.364,117,3.014,186,0.004,187,0.006,188,0.004,234,0.991,235,1.154,341,3.659,357,4.547,504,1.831,526,3.504,531,5.993,533,3.688,536,4.117,543,2.134,546,3.125,547,5.334,549,5.642,551,5.167,553,5.564,555,5.564,556,4.936,557,5.222,559,5.222,563,4.366,564,4.912,568,2.954,569,4.366,570,3.125,572,2.808,573,0.781,712,1.447,784,4.267,797,3.365,830,3.93,831,6.08,832,6.924,833,4.452,834,6.08,835,7.44,836,8.04,837,6.08,838,6.08,839,6.08,840,4.452,841,6.08,842,6.08,843,6.08,844,6.08,845,4.452,846,6.08,847,4.898,848,6.08,849,5.367,850,5.367,851,6.08,852,6.08,853,5.367,854,6.08,855,6.08,856,6.08,857,6.08,858,4.452,859,3.93,860,4.452]],["title/injectables/HistoryService.html",[504,1.339,861,3.12]],["body/injectables/HistoryService.html",[3,0.084,4,0.107,9,0.095,21,0.339,22,0.682,27,2.511,33,0.521,44,4.543,45,0.82,47,1.488,48,0.009,49,0.889,50,0.601,51,1.488,54,2.759,55,3.074,78,3.162,80,0.283,81,0.943,90,0.855,91,3.468,92,2.202,97,5.265,101,0.107,102,0.238,103,2.029,107,4.032,186,0.005,187,0.007,188,0.005,281,2.933,383,4.39,504,2.107,505,3.048,521,5.101,531,4.437,533,3.811,543,2.64,558,0.989,581,3.654,601,6.787,634,1.508,859,4.862,861,4.91,862,4.862,863,6.996,864,6.996,865,6.996,866,6.996,867,6.996,868,5.508,869,5.508,870,6.996,871,5.508,872,6.996,873,5.508,874,5.508,875,5.508,876,4.862,877,5.508,878,5.508,879,6.996,880,5.508,881,5.508,882,5.508,883,5.508,884,5.508,885,5.508,886,4.437,887,4.119,888,5.508]],["title/interfaces/IAppState.html",[91,2.204,540,2.063]],["body/interfaces/IAppState.html",[3,0.091,4,0.116,9,0.103,15,3.237,21,0.367,22,0.717,26,2.005,44,3.917,48,0.009,50,0.627,80,0.284,91,3.646,93,3.96,101,0.116,129,2.062,186,0.006,187,0.007,188,0.006,234,0.795,381,4.744,382,4.744,383,4.416,384,4.744,385,5.135,491,4.189,540,2.769,541,3.592,592,5.269,654,5.269,876,5.269,889,5.269,890,7.356,891,7.356,892,5.269,893,5.969]],["title/guards/InTestGuard.html",[405,3.325,487,3.325]],["body/guards/InTestGuard.html",[0,1.236,3,0.088,4,0.113,9,0.1,11,0.833,21,0.356,26,1.602,27,2.591,33,0.547,41,3.578,43,4.009,45,0.682,47,1.328,48,0.009,49,0.793,50,0.52,51,1.328,54,2.078,78,3.235,80,0.269,81,0.991,89,2.972,92,2.315,100,1.623,101,0.113,102,0.25,103,2.133,117,2.87,173,2.955,186,0.006,187,0.007,188,0.006,281,3.083,405,5.398,408,7.48,414,5.398,431,5.066,448,3.841,472,4.664,488,4.33,490,4.33,491,4.063,492,5.815,495,4.664,497,6.634,499,7.06,500,5.111,502,5.815,503,1.976,504,2.174,505,3.204,894,6.944,895,7.219,896,7.219,897,5.79,898,7.866,899,7.866,900,7.866,901,7.866]],["title/classes/InitInfo.html",[102,0.192,737,1.307]],["body/classes/InitInfo.html",[3,0.098,4,0.054,9,0.048,11,1.276,21,0.172,22,0.422,24,1.825,25,0.843,26,1.972,32,1.633,33,0.772,45,0.501,47,0.515,48,0.009,49,0.476,50,0.648,51,0.515,80,0.091,90,0.434,101,0.179,102,0.382,110,0.843,114,1.122,120,0.527,129,0.784,162,1.022,186,0.003,187,0.004,188,0.003,233,1.777,234,0.373,235,0.392,237,0.823,238,1.754,464,1.596,503,1.186,558,1.517,573,1.559,577,1.337,634,1.633,649,1.806,668,1.995,669,0.579,670,0.823,671,1.883,672,1.031,675,2.062,676,1.305,677,1.526,678,1.305,679,1.558,680,1.305,681,1.596,682,1.305,683,1.305,684,1.809,685,1.305,686,1.305,687,1.713,688,1.903,689,1.672,690,1.305,691,1.305,692,1.305,693,1.305,694,1.305,695,1.596,696,1.853,697,1.305,698,1.305,699,1.305,700,1.596,701,0.863,702,1.305,703,1.305,704,1.305,705,1.305,706,1.337,707,1.305,708,0.843,709,0.863,710,0.843,711,1.305,712,1.419,713,1.305,714,1.305,715,1.747,716,1.243,717,1.273,718,1.273,719,1.007,720,1.243,721,1.243,722,1.273,723,0.863,724,0.863,725,1.273,726,1.273,727,0.885,728,1.273,729,1.243,730,0.863,731,0.863,732,1.273,733,1.273,734,1.214,735,1.273,736,1.273,737,1.558,738,0.885,739,1.243,740,1.337,741,1.03,742,1.273,743,1.273,744,1.273,745,1.273,746,1.243,747,0.863,748,1.273,749,1.273,902,4.331,903,2.798]],["title/classes/Login.html",[102,0.192,675,1.189]],["body/classes/Login.html",[3,0.098,4,0.054,9,0.048,11,1.276,21,0.172,22,0.422,24,1.825,25,0.843,26,1.972,32,1.633,33,0.772,45,0.501,47,0.515,48,0.009,49,0.476,50,0.648,51,0.515,80,0.091,90,0.434,101,0.179,102,0.382,110,0.843,114,1.122,120,0.527,129,0.784,162,1.022,186,0.003,187,0.004,188,0.003,233,1.777,234,0.373,235,0.392,237,0.823,238,1.754,464,1.596,503,1.186,558,1.517,573,1.559,577,1.337,634,1.633,649,1.806,668,1.995,669,0.579,670,0.823,671,1.883,672,1.031,675,2.132,676,1.305,677,1.526,678,1.305,679,1.558,680,1.305,681,1.596,682,1.305,683,1.305,684,1.809,685,1.305,686,1.305,687,1.713,688,1.903,689,1.672,690,1.305,691,1.305,692,1.305,693,1.305,694,1.305,695,1.596,696,1.853,697,1.305,698,1.305,699,1.305,700,1.305,701,0.863,702,1.305,703,1.305,704,1.305,705,1.305,706,1.337,707,1.305,708,0.843,709,0.863,710,0.843,711,1.305,712,1.419,713,1.305,714,1.305,715,1.747,716,1.243,717,1.273,718,1.273,719,1.007,720,1.243,721,1.243,722,1.273,723,0.863,724,0.863,725,1.273,726,1.273,727,0.885,728,1.273,729,1.243,730,0.863,731,0.863,732,1.273,733,1.273,734,1.214,735,1.273,736,1.273,737,1.273,738,0.885,739,1.243,740,1.337,741,1.03,742,1.273,743,1.273,744,1.273,745,1.273,746,1.243,747,0.863,748,1.273,749,1.273,904,4.331,905,2.798]],["title/classes/LoginFailed.html",[102,0.192,718,1.307]],["body/classes/LoginFailed.html",[3,0.098,4,0.054,9,0.048,11,1.276,21,0.172,22,0.422,24,1.825,25,0.843,26,1.972,32,1.633,33,0.772,45,0.501,47,0.515,48,0.009,49,0.476,50,0.648,51,0.515,80,0.091,90,0.434,101,0.179,102,0.382,110,0.843,114,1.122,120,0.527,129,0.784,162,1.022,186,0.003,187,0.004,188,0.003,233,1.777,234,0.373,235,0.392,237,0.823,238,1.754,464,1.596,503,1.186,558,1.517,573,1.559,577,1.337,634,1.633,649,1.806,668,1.995,669,0.579,670,0.823,671,1.883,672,1.031,675,2.062,676,1.305,677,1.526,678,1.596,679,1.558,680,1.305,681,1.596,682,1.305,683,1.305,684,1.809,685,1.305,686,1.305,687,1.713,688,1.903,689,1.672,690,1.305,691,1.305,692,1.305,693,1.305,694,1.305,695,1.596,696,1.853,697,1.305,698,1.305,699,1.305,700,1.305,701,0.863,702,1.305,703,1.305,704,1.305,705,1.305,706,1.337,707,1.305,708,0.843,709,0.863,710,0.843,711,1.305,712,1.419,713,1.305,714,1.305,715,1.747,716,1.243,717,1.273,718,1.558,719,1.007,720,1.243,721,1.243,722,1.273,723,0.863,724,0.863,725,1.273,726,1.273,727,0.885,728,1.273,729,1.243,730,0.863,731,0.863,732,1.273,733,1.273,734,1.214,735,1.273,736,1.273,737,1.273,738,0.885,739,1.243,740,1.337,741,1.03,742,1.273,743,1.273,744,1.273,745,1.273,746,1.243,747,0.863,748,1.273,749,1.273,906,4.331,907,2.798]],["title/classes/LoginG.html",[102,0.192,720,1.276]],["body/classes/LoginG.html",[3,0.099,4,0.055,9,0.049,11,1.278,21,0.175,22,0.427,24,1.836,25,0.855,26,1.975,32,1.646,33,0.782,45,0.414,48,0.009,49,0.312,50,0.642,80,0.093,90,0.441,101,0.179,102,0.382,110,0.855,114,1.124,120,0.535,129,0.796,162,1.032,186,0.003,187,0.004,188,0.003,233,1.781,234,0.378,235,0.398,237,0.835,238,1.768,464,1.611,503,1.199,558,1.486,573,1.561,634,1.646,668,2.006,669,0.587,670,0.835,671,1.885,675,2.071,676,1.319,677,1.533,678,1.319,679,1.565,680,1.611,681,1.611,682,1.319,683,1.319,684,1.821,685,1.319,686,1.319,687,1.726,688,1.913,689,1.685,690,1.319,691,1.319,692,1.319,693,1.319,694,1.319,695,1.611,696,1.865,697,1.319,698,1.319,699,1.319,700,1.319,701,0.876,702,1.319,703,1.319,704,1.319,705,1.319,706,1.352,707,1.319,708,0.855,709,0.876,710,0.855,711,1.319,712,1.431,713,1.319,714,1.319,715,1.752,716,1.257,717,1.288,718,1.288,719,1.018,720,1.535,721,1.257,722,1.288,723,0.876,724,0.876,725,1.288,726,1.288,727,0.898,728,1.288,729,1.257,730,0.876,731,0.876,732,1.288,733,1.288,734,1.228,735,1.288,736,1.288,737,1.288,738,0.898,739,1.257,740,1.352,741,1.042,742,1.288,743,1.288,744,1.288,745,1.288,746,1.257,747,0.876,748,1.288,749,1.288,908,4.381]],["title/classes/LoginGFailed.html",[102,0.192,722,1.307]],["body/classes/LoginGFailed.html",[3,0.099,4,0.055,9,0.049,11,1.279,21,0.175,22,0.428,24,1.838,25,0.858,26,1.976,32,1.649,33,0.767,45,0.269,48,0.009,49,0.313,50,0.643,80,0.093,90,0.442,101,0.179,102,0.382,110,0.858,114,1.124,120,0.536,129,0.798,162,1.033,186,0.003,187,0.004,188,0.003,233,1.782,234,0.379,235,0.399,237,0.837,238,1.771,464,1.614,503,1.202,558,1.487,573,1.562,634,1.649,668,2.008,669,0.589,670,0.837,671,1.886,675,2.072,676,1.322,677,1.534,678,1.322,679,1.567,680,1.322,681,1.614,682,1.322,683,1.614,684,1.824,685,1.322,686,1.322,687,1.729,688,1.915,689,1.688,690,1.322,691,1.322,692,1.322,693,1.322,694,1.322,695,1.614,696,1.868,697,1.322,698,1.322,699,1.322,700,1.322,701,0.879,702,1.322,703,1.322,704,1.322,705,1.322,706,1.355,707,1.322,708,0.858,709,0.879,710,0.858,711,1.322,712,1.433,713,1.322,714,1.322,715,1.753,716,1.26,717,1.291,718,1.291,719,1.021,720,1.26,721,1.26,722,1.575,723,0.879,724,0.879,725,1.291,726,1.291,727,0.901,728,1.291,729,1.26,730,0.879,731,0.879,732,1.291,733,1.291,734,1.231,735,1.291,736,1.291,737,1.291,738,0.901,739,1.26,740,1.355,741,1.045,742,1.291,743,1.291,744,1.291,745,1.291,746,1.26,747,0.879,748,1.291,749,1.291,909,2.848]],["title/classes/LoginGSuccess.html",[102,0.192,721,1.276]],["body/classes/LoginGSuccess.html",[3,0.098,4,0.054,9,0.048,11,1.276,21,0.172,22,0.422,24,1.825,25,0.843,26,1.972,32,1.633,33,0.772,45,0.501,47,0.515,48,0.009,49,0.476,50,0.648,51,0.515,80,0.091,90,0.434,101,0.179,102,0.382,110,0.843,114,1.122,120,0.527,129,0.784,162,1.022,186,0.003,187,0.004,188,0.003,233,1.777,234,0.373,235,0.392,237,0.823,238,1.754,464,1.596,503,1.186,558,1.517,573,1.559,577,1.337,634,1.633,649,1.806,668,1.995,669,0.579,670,0.823,671,1.883,672,1.031,675,2.062,676,1.305,677,1.526,678,1.305,679,1.558,680,1.305,681,1.596,682,1.596,683,1.305,684,1.809,685,1.305,686,1.305,687,1.713,688,1.903,689,1.672,690,1.305,691,1.305,692,1.305,693,1.305,694,1.305,695,1.596,696,1.853,697,1.305,698,1.305,699,1.305,700,1.305,701,0.863,702,1.305,703,1.305,704,1.305,705,1.305,706,1.337,707,1.305,708,0.843,709,0.863,710,0.843,711,1.305,712,1.419,713,1.305,714,1.305,715,1.747,716,1.243,717,1.273,718,1.273,719,1.007,720,1.243,721,1.521,722,1.273,723,0.863,724,0.863,725,1.273,726,1.273,727,0.885,728,1.273,729,1.243,730,0.863,731,0.863,732,1.273,733,1.273,734,1.214,735,1.273,736,1.273,737,1.273,738,0.885,739,1.243,740,1.337,741,1.03,742,1.273,743,1.273,744,1.273,745,1.273,746,1.243,747,0.863,748,1.273,749,1.273,910,4.331,911,2.798]],["title/components/LoginPage.html",[0,0.761,159,1.683]],["body/components/LoginPage.html",[0,1.097,1,1.459,2,2.262,3,0.084,4,0.075,5,1.632,6,1.681,7,1.632,8,1.632,9,0.067,11,0.791,12,3.177,13,1.632,14,3.777,15,3.469,17,2.398,19,2.328,21,0.237,22,0.536,24,2.161,26,1.551,27,1.973,28,3.464,29,4.498,33,0.52,41,3.808,42,5.913,43,3.668,44,4.21,45,0.798,47,1.179,48,0.009,49,0.812,50,0.396,51,1.179,54,2.837,55,2.954,58,1.421,78,2.636,80,0.272,81,0.66,83,1.25,84,1.459,85,1.499,89,1.979,90,0.598,91,2.726,92,1.541,93,2.558,94,2.558,95,2.706,99,2.883,100,1.081,101,0.075,102,0.166,104,2.873,105,2.706,107,3.694,114,0.487,115,2.706,117,1.911,121,3.404,123,3.404,124,3.404,138,1.007,139,2.328,140,2.328,141,1.632,142,2.959,143,1.632,145,1.632,146,1.459,147,1.541,148,1.632,149,1.459,150,1.632,151,1.459,152,1.499,153,1.632,154,1.459,155,1.25,156,2.328,157,1.459,158,1.632,159,2.645,160,1.632,161,1.459,162,1.236,163,1.632,164,1.459,165,1.632,166,1.459,167,1.632,168,1.459,169,1.632,170,1.421,171,1.632,172,1.459,173,1.973,174,1.632,175,1.459,176,1.632,177,1.459,178,1.632,179,1.459,180,1.541,181,1.632,182,1.459,183,2.563,184,1.632,185,1.632,186,0.004,187,0.005,188,0.004,235,0.541,417,4.43,476,3.404,675,2.317,681,1.656,695,1.656,696,2.395,719,1.49,734,1.959,912,3.404,913,6.41,914,5.499,915,6.989,916,6.989,917,4.854,918,5.499,919,3.856,920,6.369,921,5.499,922,3.856,923,3.856,924,3.856,925,3.856,926,3.856,927,4.854,928,3.856,929,5.499,930,3.856,931,3.856,932,3.856,933,3.856,934,3.106,935,3.856,936,3.856,937,3.856,938,3.856,939,6.523,940,6.169,941,3.856,942,3.856,943,3.106,944,3.106,945,3.106,946,3.404,947,3.106,948,5.499,949,3.856,950,3.856,951,3.856,952,3.404,953,3.856,954,5.499,955,2.558,956,3.856,957,3.856,958,3.856,959,3.404,960,3.856,961,3.856,962,4.854,963,5.499,964,5.499]],["title/modules/LoginPageModule.html",[189,1.108,965,3.325]],["body/modules/LoginPageModule.html",[0,1.072,3,0.095,4,0.122,9,0.108,48,0.009,80,0.287,81,1.072,83,2.029,100,1.755,101,0.122,102,0.27,114,0.79,120,1.179,138,1.635,159,3.371,186,0.006,187,0.007,188,0.006,189,1.56,191,2.306,192,2.434,193,3.349,194,2.574,195,2.574,196,2.434,199,3.115,200,2.574,202,3.028,203,3.303,204,2.65,205,3.303,206,2.65,207,3.447,208,2.502,209,3.206,211,2.65,212,2.502,213,3,965,6.585,966,5.526,967,5.526,968,6.26,969,6.26]],["title/classes/LoginSuccess.html",[102,0.192,716,1.276]],["body/classes/LoginSuccess.html",[3,0.098,4,0.054,9,0.048,11,1.276,21,0.172,22,0.422,24,1.825,25,0.843,26,1.972,32,1.633,33,0.772,45,0.501,47,0.515,48,0.009,49,0.476,50,0.648,51,0.515,80,0.091,90,0.434,101,0.179,102,0.382,110,0.843,114,1.122,120,0.527,129,0.784,162,1.022,186,0.003,187,0.004,188,0.003,233,1.777,234,0.373,235,0.392,237,0.823,238,1.754,464,1.596,503,1.186,558,1.517,573,1.559,577,1.337,634,1.633,649,1.806,668,1.995,669,0.579,670,0.823,671,1.883,672,1.031,675,2.062,676,1.596,677,1.526,678,1.305,679,1.558,680,1.305,681,1.596,682,1.305,683,1.305,684,1.809,685,1.305,686,1.305,687,1.713,688,1.903,689,1.672,690,1.305,691,1.305,692,1.305,693,1.305,694,1.305,695,1.596,696,1.853,697,1.305,698,1.305,699,1.305,700,1.305,701,0.863,702,1.305,703,1.305,704,1.305,705,1.305,706,1.337,707,1.305,708,0.843,709,0.863,710,0.843,711,1.305,712,1.419,713,1.305,714,1.305,715,1.747,716,1.521,717,1.273,718,1.273,719,1.007,720,1.243,721,1.243,722,1.273,723,0.863,724,0.863,725,1.273,726,1.273,727,0.885,728,1.273,729,1.243,730,0.863,731,0.863,732,1.273,733,1.273,734,1.214,735,1.273,736,1.273,737,1.273,738,0.885,739,1.243,740,1.337,741,1.03,742,1.273,743,1.273,744,1.273,745,1.273,746,1.243,747,0.863,748,1.273,749,1.273,970,4.331,971,2.798]],["title/guards/OnFinishTestGuard.html",[412,3.325,487,3.325]],["body/guards/OnFinishTestGuard.html",[3,0.09,4,0.115,9,0.102,11,0.849,21,0.363,26,1.62,27,2.62,33,0.557,41,3.619,43,4.027,45,0.69,47,1.343,48,0.009,49,0.802,50,0.526,51,1.343,54,2.116,78,3.262,80,0.27,81,1.009,89,3.027,92,2.357,100,1.653,101,0.115,102,0.254,103,2.172,117,2.922,173,2.62,186,0.006,187,0.007,188,0.006,274,4.604,281,3.139,412,5.46,414,6.371,430,6.862,431,5.123,448,3.911,473,4.749,488,4.409,490,4.409,491,4.138,492,5.881,495,4.749,496,5.205,497,6.676,498,6.388,499,6.676,501,5.881,502,5.881,503,1.999,504,2.199,505,3.262,972,7.001,973,7.301,974,7.301,975,5.896]],["title/classes/PayCredits.html",[102,0.192,744,1.307]],["body/classes/PayCredits.html",[3,0.098,4,0.054,9,0.048,11,1.276,21,0.172,22,0.422,24,1.825,25,0.843,26,1.972,32,1.633,33,0.772,45,0.501,47,0.515,48,0.009,49,0.476,50,0.648,51,0.515,80,0.091,90,0.434,101,0.179,102,0.382,110,0.843,114,1.122,120,0.527,129,0.784,162,1.022,186,0.003,187,0.004,188,0.003,233,1.777,234,0.373,235,0.392,237,0.823,238,1.754,464,1.596,503,1.186,558,1.517,573,1.559,577,1.337,634,1.633,649,1.806,668,1.995,669,0.579,670,0.823,671,1.883,672,1.031,675,2.062,676,1.305,677,1.526,678,1.305,679,1.558,680,1.305,681,1.596,682,1.305,683,1.305,684,1.809,685,1.305,686,1.305,687,1.713,688,1.903,689,1.672,690,1.305,691,1.305,692,1.305,693,1.305,694,1.305,695,1.596,696,1.853,697,1.305,698,1.305,699,1.305,700,1.305,701,0.863,702,1.305,703,1.305,704,1.305,705,1.596,706,1.337,707,1.305,708,0.843,709,0.863,710,0.843,711,1.305,712,1.419,713,1.305,714,1.305,715,1.747,716,1.243,717,1.273,718,1.273,719,1.007,720,1.243,721,1.243,722,1.273,723,0.863,724,0.863,725,1.273,726,1.273,727,0.885,728,1.273,729,1.243,730,0.863,731,0.863,732,1.273,733,1.273,734,1.214,735,1.273,736,1.273,737,1.273,738,0.885,739,1.243,740,1.337,741,1.03,742,1.273,743,1.273,744,1.558,745,1.273,746,1.243,747,0.863,748,1.273,749,1.273,976,4.331,977,2.798]],["title/classes/PayCreditsSuccess.html",[102,0.192,745,1.307]],["body/classes/PayCreditsSuccess.html",[3,0.099,4,0.055,9,0.049,11,1.278,21,0.175,22,0.427,24,1.836,25,0.855,26,1.975,32,1.646,33,0.782,45,0.414,48,0.009,49,0.312,50,0.642,80,0.093,90,0.441,101,0.179,102,0.382,110,0.855,114,1.124,120,0.535,129,0.796,162,1.032,186,0.003,187,0.004,188,0.003,233,1.781,234,0.378,235,0.398,237,0.835,238,1.768,464,1.611,503,1.199,558,1.486,573,1.561,634,1.646,668,2.006,669,0.587,670,0.835,671,1.885,675,2.071,676,1.319,677,1.533,678,1.319,679,1.565,680,1.319,681,1.611,682,1.319,683,1.319,684,1.821,685,1.319,686,1.319,687,1.726,688,1.913,689,1.685,690,1.319,691,1.319,692,1.319,693,1.319,694,1.319,695,1.611,696,1.865,697,1.319,698,1.319,699,1.319,700,1.319,701,0.876,702,1.319,703,1.319,704,1.319,705,1.319,706,1.352,707,1.611,708,0.855,709,0.876,710,0.855,711,1.319,712,1.431,713,1.319,714,1.319,715,1.752,716,1.257,717,1.288,718,1.288,719,1.018,720,1.257,721,1.257,722,1.288,723,0.876,724,0.876,725,1.288,726,1.288,727,0.898,728,1.288,729,1.257,730,0.876,731,0.876,732,1.288,733,1.288,734,1.228,735,1.288,736,1.288,737,1.288,738,0.898,739,1.257,740,1.352,741,1.042,742,1.288,743,1.288,744,1.288,745,1.573,746,1.257,747,0.876,748,1.288,749,1.288,978,4.381]],["title/interfaces/Question.html",[384,2.367,540,2.063]],["body/interfaces/Question.html",[3,0.107,4,0.136,9,0.121,21,0.431,22,0.79,48,0.009,50,0.505,101,0.136,186,0.007,187,0.008,188,0.007,234,0.934,384,4.312,540,3.253,541,4.22,805,6.565,979,6.189]],["title/injectables/QuestionEffects.html",[359,3.325,504,1.339]],["body/injectables/QuestionEffects.html",[3,0.087,4,0.111,9,0.099,21,0.35,22,0.697,33,0.538,37,4.699,38,4.927,45,0.676,47,1.048,48,0.009,49,0.626,50,0.562,51,1.048,78,3.211,80,0.285,81,0.975,88,3.282,92,2.277,101,0.139,102,0.246,103,2.098,104,2.215,155,2.316,186,0.006,187,0.007,188,0.006,234,0.758,235,0.799,341,4.3,359,5.343,384,3.805,504,2.152,533,3.542,543,2.73,545,2.73,547,5.432,551,5.18,553,5.343,555,5.343,556,4.74,557,5.014,558,1.283,559,5.014,563,3.591,564,4.923,568,3.779,569,3.591,572,3.591,573,1.369,980,4.588,981,5.695,982,5.695,983,7.145,984,7.145,985,7.145,986,5.756,987,7.145,988,5.695,989,5.028,990,5.695,991,5.028]],["title/injectables/QuestionService.html",[504,1.339,992,3.325]],["body/injectables/QuestionService.html",[3,0.095,4,0.121,9,0.108,21,0.383,22,0.736,33,0.589,44,4.683,45,0.768,47,1.146,48,0.009,49,0.684,50,0.585,51,1.146,78,3.342,80,0.287,81,1.066,90,0.967,91,3.743,92,2.49,101,0.121,102,0.269,103,2.295,107,3.59,186,0.006,187,0.007,188,0.006,281,3.317,384,4.815,504,2.274,505,3.447,543,2.985,558,1.119,581,4.133,892,5.499,989,5.499,992,5.647,993,5.499,994,7.551,995,6.229,996,6.229,997,7.551,998,6.229,999,6.229,1000,6.229]],["title/classes/SignIn.html",[102,0.192,684,1.246]],["body/classes/SignIn.html",[3,0.098,4,0.054,9,0.048,11,1.276,21,0.172,22,0.422,24,1.825,25,0.843,26,1.972,32,1.633,33,0.772,45,0.501,47,0.515,48,0.009,49,0.476,50,0.648,51,0.515,80,0.091,90,0.434,101,0.179,102,0.382,110,0.843,114,1.122,120,0.527,129,0.784,162,1.022,186,0.003,187,0.004,188,0.003,233,1.777,234,0.373,235,0.392,237,0.823,238,1.754,464,1.596,503,1.186,558,1.517,573,1.559,577,1.337,634,1.633,649,1.806,668,1.995,669,0.579,670,0.823,671,1.883,672,1.031,675,2.062,676,1.305,677,1.526,678,1.305,679,1.558,680,1.305,681,1.596,682,1.305,683,1.305,684,1.995,685,1.305,686,1.305,687,1.713,688,1.903,689,1.672,690,1.305,691,1.305,692,1.305,693,1.305,694,1.305,695,1.596,696,1.853,697,1.305,698,1.305,699,1.305,700,1.305,701,0.863,702,1.305,703,1.305,704,1.305,705,1.305,706,1.337,707,1.305,708,0.843,709,0.863,710,0.843,711,1.305,712,1.419,713,1.305,714,1.305,715,1.747,716,1.243,717,1.273,718,1.273,719,1.007,720,1.243,721,1.243,722,1.273,723,0.863,724,0.863,725,1.273,726,1.273,727,0.885,728,1.273,729,1.243,730,0.863,731,0.863,732,1.273,733,1.273,734,1.214,735,1.273,736,1.273,737,1.273,738,0.885,739,1.243,740,1.337,741,1.03,742,1.273,743,1.273,744,1.273,745,1.273,746,1.243,747,0.863,748,1.273,749,1.273,1001,4.331,1002,2.798]],["title/classes/SignInFailed.html",[102,0.192,726,1.307]],["body/classes/SignInFailed.html",[3,0.098,4,0.054,9,0.048,11,1.276,21,0.172,22,0.422,24,1.825,25,0.843,26,1.972,32,1.633,33,0.772,45,0.501,47,0.515,48,0.009,49,0.476,50,0.648,51,0.515,80,0.091,90,0.434,101,0.179,102,0.382,110,0.843,114,1.122,120,0.527,129,0.784,162,1.022,186,0.003,187,0.004,188,0.003,233,1.777,234,0.373,235,0.392,237,0.823,238,1.754,464,1.596,503,1.186,558,1.517,573,1.559,577,1.337,634,1.633,649,1.806,668,1.995,669,0.579,670,0.823,671,1.883,672,1.031,675,2.062,676,1.305,677,1.526,678,1.305,679,1.558,680,1.305,681,1.596,682,1.305,683,1.305,684,1.809,685,1.305,686,1.596,687,1.713,688,1.903,689,1.672,690,1.305,691,1.305,692,1.305,693,1.305,694,1.305,695,1.596,696,1.853,697,1.305,698,1.305,699,1.305,700,1.305,701,0.863,702,1.305,703,1.305,704,1.305,705,1.305,706,1.337,707,1.305,708,0.843,709,0.863,710,0.843,711,1.305,712,1.419,713,1.305,714,1.305,715,1.747,716,1.243,717,1.273,718,1.273,719,1.007,720,1.243,721,1.243,722,1.273,723,0.863,724,0.863,725,1.273,726,1.558,727,0.885,728,1.273,729,1.243,730,0.863,731,0.863,732,1.273,733,1.273,734,1.214,735,1.273,736,1.273,737,1.273,738,0.885,739,1.243,740,1.337,741,1.03,742,1.273,743,1.273,744,1.273,745,1.273,746,1.243,747,0.863,748,1.273,749,1.273,1003,4.331,1004,2.798]],["title/classes/SignInSuccess.html",[102,0.192,725,1.307]],["body/classes/SignInSuccess.html",[3,0.099,4,0.055,9,0.049,11,1.278,21,0.175,22,0.427,24,1.836,25,0.855,26,1.975,32,1.646,33,0.782,45,0.414,48,0.009,49,0.312,50,0.642,80,0.093,90,0.441,101,0.179,102,0.382,110,0.855,114,1.124,120,0.535,129,0.796,162,1.032,186,0.003,187,0.004,188,0.003,233,1.781,234,0.378,235,0.398,237,0.835,238,1.768,464,1.611,503,1.199,558,1.486,573,1.561,634,1.646,668,2.006,669,0.587,670,0.835,671,1.885,675,2.071,676,1.319,677,1.533,678,1.319,679,1.565,680,1.319,681,1.611,682,1.319,683,1.319,684,1.821,685,1.611,686,1.319,687,1.726,688,1.913,689,1.685,690,1.319,691,1.319,692,1.319,693,1.319,694,1.319,695,1.611,696,1.865,697,1.319,698,1.319,699,1.319,700,1.319,701,0.876,702,1.319,703,1.319,704,1.319,705,1.319,706,1.352,707,1.319,708,0.855,709,0.876,710,0.855,711,1.319,712,1.431,713,1.319,714,1.319,715,1.752,716,1.257,717,1.288,718,1.288,719,1.018,720,1.257,721,1.257,722,1.288,723,0.876,724,0.876,725,1.573,726,1.288,727,0.898,728,1.288,729,1.257,730,0.876,731,0.876,732,1.288,733,1.288,734,1.228,735,1.288,736,1.288,737,1.288,738,0.898,739,1.257,740,1.352,741,1.042,742,1.288,743,1.288,744,1.288,745,1.288,746,1.257,747,0.876,748,1.288,749,1.288,1005,4.381]],["title/classes/SignOut.html",[32,1.217,102,0.192]],["body/classes/SignOut.html",[3,0.099,4,0.055,9,0.049,11,1.278,21,0.175,22,0.427,24,1.836,25,0.855,26,1.975,32,1.88,33,0.782,45,0.414,48,0.009,49,0.312,50,0.642,80,0.093,90,0.441,101,0.179,102,0.382,110,0.855,114,1.124,120,0.535,129,0.796,162,1.032,186,0.003,187,0.004,188,0.003,233,1.781,234,0.378,235,0.398,237,0.835,238,1.768,464,1.611,503,1.199,558,1.486,573,1.561,634,1.646,668,2.006,669,0.587,670,0.835,671,1.885,675,2.071,676,1.319,677,1.533,678,1.319,679,1.565,680,1.319,681,1.611,682,1.319,683,1.319,684,1.821,685,1.319,686,1.319,687,1.726,688,1.913,689,1.685,690,1.319,691,1.319,692,1.319,693,1.319,694,1.319,695,1.611,696,1.865,697,1.319,698,1.319,699,1.319,700,1.319,701,0.876,702,1.319,703,1.319,704,1.319,705,1.319,706,1.352,707,1.319,708,0.855,709,0.876,710,0.855,711,1.319,712,1.431,713,1.319,714,1.319,715,1.752,716,1.257,717,1.288,718,1.288,719,1.018,720,1.257,721,1.257,722,1.288,723,0.876,724,0.876,725,1.288,726,1.288,727,0.898,728,1.288,729,1.257,730,0.876,731,0.876,732,1.288,733,1.288,734,1.228,735,1.288,736,1.288,737,1.288,738,0.898,739,1.257,740,1.352,741,1.042,742,1.288,743,1.288,744,1.288,745,1.288,746,1.257,747,0.876,748,1.288,749,1.288,1006,4.381]],["title/components/SignUpPage.html",[0,0.761,161,1.683]],["body/components/SignUpPage.html",[0,1.122,1,1.518,2,2.326,3,0.086,4,0.078,5,1.699,6,1.75,7,1.699,8,1.699,9,0.069,11,0.814,12,3.247,13,1.699,14,3.794,15,3.485,16,3.97,17,2.467,19,2.395,21,0.247,22,0.552,24,2.138,26,1.579,27,2.03,28,3.526,29,4.598,33,0.535,34,3.232,35,4.73,41,4.171,44,4.259,45,0.812,47,1.04,48,0.009,49,0.782,50,0.54,51,1.04,52,4.486,54,2.351,55,2.261,58,1.478,78,2.694,80,0.271,81,0.687,82,2.415,83,1.301,84,1.518,85,1.56,90,0.623,91,2.804,92,1.604,93,2.662,94,2.662,95,2.816,100,1.125,101,0.078,102,0.173,104,1.56,105,2.816,107,2.312,114,0.507,115,2.816,138,1.048,139,2.395,140,2.395,141,1.699,142,3.012,143,1.699,145,1.699,146,1.518,147,1.604,148,1.699,149,1.518,150,1.699,151,1.518,152,1.56,153,1.699,154,1.518,155,1.301,156,2.395,157,1.518,158,1.699,159,1.518,160,1.699,161,2.692,162,1.575,163,1.699,164,1.518,165,1.699,166,1.518,167,1.699,168,1.518,169,1.699,170,1.478,171,1.699,172,1.518,173,2.03,174,1.699,175,1.518,176,1.699,177,1.518,178,1.699,179,1.518,180,1.604,181,1.699,182,1.518,183,1.604,184,1.699,185,1.699,186,0.004,187,0.006,188,0.004,208,1.604,274,3.567,322,3.232,417,4.556,418,6.476,504,1.208,526,3.26,577,2.562,696,2.344,719,1.523,723,2.195,724,1.238,763,3.542,917,4.993,920,6.779,927,4.993,934,3.232,939,4.993,940,3.542,943,3.232,944,3.232,945,3.232,946,3.542,947,3.232,1007,6.975,1008,3.542,1009,6.552,1010,5.656,1011,6.552,1012,7.209,1013,4.012,1014,4.012,1015,4.012,1016,4.012,1017,4.012,1018,4.012,1019,4.012,1020,4.012,1021,4.012,1022,4.012,1023,4.012,1024,4.012,1025,4.012,1026,3.542,1027,4.012,1028,4.012,1029,4.012,1030,4.012,1031,4.012,1032,5.656,1033,5.656,1034,4.993,1035,5.656,1036,4.993,1037,4.993]],["title/modules/SignUpPageModule.html",[189,1.108,1038,3.325]],["body/modules/SignUpPageModule.html",[0,1.065,3,0.095,4,0.121,9,0.108,48,0.009,80,0.287,81,1.065,83,2.016,100,1.743,101,0.121,102,0.268,114,0.785,120,1.171,138,1.624,161,3.367,162,1.199,186,0.006,187,0.007,188,0.006,189,1.55,191,2.291,192,2.418,193,3.339,194,2.558,195,2.558,196,2.418,199,3.102,200,2.558,202,3.016,203,3.29,204,2.633,205,3.29,206,2.633,207,3.438,208,2.486,209,3.194,211,2.633,212,2.486,213,2.981,418,4.651,1007,5.01,1038,6.575,1039,5.49,1040,5.49,1041,6.219,1042,6.219]],["title/interfaces/SysLog.html",[385,2.562,540,2.063]],["body/interfaces/SysLog.html",[3,0.106,4,0.135,9,0.12,21,0.427,22,0.786,48,0.009,50,0.613,101,0.135,186,0.007,187,0.008,188,0.007,234,0.925,385,4.643,540,3.223,541,4.182,649,2.746,712,2.083,1043,6.133]],["title/injectables/SysLogEffects.html",[504,1.339,1044,3.581]],["body/injectables/SysLogEffects.html",[3,0.085,4,0.109,9,0.097,21,0.344,22,0.689,26,1.567,33,0.528,35,5.127,37,4.658,38,4.894,45,0.667,47,1.028,48,0.009,49,0.614,50,0.557,51,1.028,52,4.88,78,3.183,80,0.284,81,0.957,82,3.363,88,3.221,92,2.234,101,0.137,102,0.241,103,2.059,104,2.745,117,3.499,186,0.005,187,0.007,188,0.005,234,0.744,235,0.784,341,3.363,504,2.126,526,4.686,543,2.678,546,3.922,547,5.682,549,4.955,551,3.707,561,5.28,563,3.524,564,4.88,568,3.707,569,3.524,570,3.922,571,4.179,572,3.524,573,0.98,847,5.687,1044,5.687,1045,4.501,1046,4.461,1047,5.588,1048,7.06,1049,7.06,1050,7.06,1051,7.06,1052,6.232,1053,7.06,1054,6.232,1055,7.06,1056,6.232,1057,6.232,1058,8.131,1059,6.232,1060,7.06,1061,5.588,1062,5.588,1063,5.588,1064,4.933]],["title/injectables/SyslogService.html",[504,1.339,1065,3.325]],["body/injectables/SyslogService.html",[3,0.096,4,0.123,9,0.11,21,0.389,27,2.737,33,0.599,44,4.701,45,0.721,47,1.403,48,0.009,49,0.838,50,0.549,51,1.403,54,2.272,55,2.531,80,0.277,81,1.084,90,0.983,91,3.78,101,0.123,102,0.273,103,2.333,107,3.649,186,0.006,187,0.007,188,0.006,233,1.733,281,3.371,504,2.297,505,3.504,543,3.034,577,2.525,581,4.201,719,1.902,1046,4.395,1065,5.703,1066,5.589,1067,6.332,1068,7.626,1069,6.332,1070,6.332,1071,6.332,1072,6.332]],["title/components/Tab1Page.html",[0,0.761,164,1.683]],["body/components/Tab1Page.html",[0,1.275,1,1.951,2,3.245,3,0.102,4,0.1,5,2.182,6,2.248,7,2.182,8,2.182,9,0.089,13,2.182,14,3.891,15,3.616,17,2.924,19,2.838,48,0.009,49,0.736,58,1.899,80,0.168,81,0.882,84,1.951,85,2.004,101,0.1,102,0.222,120,1.579,138,1.346,139,2.838,140,2.838,141,2.182,142,3.34,143,2.182,145,2.182,146,1.951,147,2.061,148,2.182,149,1.951,150,2.182,151,1.951,152,2.004,153,2.182,154,1.951,155,1.671,156,2.838,157,1.951,158,2.182,159,1.951,160,2.182,161,1.951,162,0.994,163,2.182,164,2.986,165,2.182,166,1.951,167,2.182,168,1.951,169,2.182,170,1.899,171,2.182,172,1.951,173,2.406,174,2.182,175,1.951,176,2.182,177,1.951,178,2.182,179,1.951,180,2.061,181,2.182,182,1.951,183,3.154,184,2.182,185,2.182,186,0.005,187,0.007,188,0.005,290,5.537,427,4.705,501,5.4,1073,4.55,1074,6.704,1075,7.45,1076,6.704,1077,5.4,1078,6.704,1079,6.704,1080,6.704,1081,6.704,1082,5.155,1083,6.704,1084,6.704,1085,5.918,1086,5.918,1087,7.89,1088,6.704,1089,6.704,1090,5.918,1091,6.704,1092,6.704,1093,6.704,1094,6.704,1095,4.55,1096,4.55,1097,4.55,1098,4.55,1099,4.55,1100,4.55,1101,4.55,1102,4.55,1103,5.155]],["title/modules/Tab1PageModule.html",[189,1.108,1104,3.325]],["body/modules/Tab1PageModule.html",[0,1.086,3,0.096,4,0.123,9,0.11,48,0.009,80,0.288,81,1.086,83,2.056,100,1.778,101,0.123,102,0.274,120,1.195,138,1.656,164,3.38,186,0.006,187,0.008,188,0.006,189,1.581,191,2.337,192,2.466,193,3.368,194,2.608,195,2.608,196,2.466,199,3.139,200,2.608,202,3.052,203,3.329,204,2.685,205,3.329,206,2.685,208,2.535,209,3.232,211,2.685,212,2.535,1104,6.605,1105,5.598,1106,5.598,1107,6.342,1108,6.342,1109,5.109]],["title/components/Tab2Page.html",[0,0.761,166,1.683]],["body/components/Tab2Page.html",[0,1.337,1,2.155,2,2.939,3,0.109,4,0.111,5,2.411,6,2.484,7,2.411,8,2.411,9,0.099,13,2.411,14,3.924,15,3.604,17,3.116,19,3.025,48,0.009,49,0.785,58,2.098,80,0.186,81,0.975,84,2.155,85,2.215,101,0.111,102,0.246,138,1.487,139,3.025,140,3.025,141,2.411,142,3.466,143,2.411,145,2.411,146,2.155,147,2.277,148,2.411,149,2.155,150,2.411,151,2.155,152,2.215,153,2.411,154,2.155,155,1.846,156,3.025,157,2.155,158,2.411,159,2.155,160,2.411,161,2.155,162,1.098,163,2.411,164,2.155,165,2.411,166,3.098,167,2.411,168,2.155,169,2.411,170,2.098,171,2.411,172,2.155,173,2.564,174,2.411,175,2.155,176,2.411,177,2.155,178,2.411,179,2.155,180,2.277,181,2.411,182,2.155,183,2.277,184,2.411,185,2.411,186,0.006,187,0.007,188,0.006,1077,5.756,1110,5.028,1111,7.145,1112,7.808,1113,7.145,1114,7.145]],["title/modules/Tab2PageModule.html",[189,1.108,1115,3.325]],["body/modules/Tab2PageModule.html",[0,1.086,3,0.096,4,0.123,9,0.11,48,0.009,80,0.288,81,1.086,83,2.056,100,1.778,101,0.123,102,0.274,120,1.195,138,1.656,166,3.38,186,0.006,187,0.008,188,0.006,189,1.581,191,2.337,192,2.466,193,3.368,194,2.608,195,2.608,196,2.466,199,3.139,200,2.608,202,3.052,203,3.329,204,2.685,205,3.329,206,2.685,208,2.535,209,3.232,211,2.685,212,2.535,1109,5.109,1115,6.605,1116,5.598,1117,5.598,1118,6.342,1119,6.342]],["title/components/Tab3Page.html",[0,0.761,168,1.683]],["body/components/Tab3Page.html",[0,1.337,1,2.155,2,2.939,3,0.109,4,0.111,5,2.411,6,2.484,7,2.411,8,2.411,9,0.099,13,2.411,14,3.924,15,3.604,17,3.116,19,3.025,48,0.009,49,0.785,58,2.098,80,0.186,81,0.975,84,2.155,85,2.215,101,0.111,102,0.246,138,1.487,139,3.025,140,3.025,141,2.411,142,3.466,143,2.411,145,2.411,146,2.155,147,2.277,148,2.411,149,2.155,150,2.411,151,2.155,152,2.215,153,2.411,154,2.155,155,1.846,156,3.025,157,2.155,158,2.411,159,2.155,160,2.411,161,2.155,162,1.098,163,2.411,164,2.155,165,2.411,166,2.155,167,2.411,168,3.098,169,2.411,170,2.098,171,2.411,172,2.155,173,2.564,174,2.411,175,2.155,176,2.411,177,2.155,178,2.411,179,2.155,180,2.277,181,2.411,182,2.155,183,2.277,184,2.411,185,2.411,186,0.006,187,0.007,188,0.006,1077,5.756,1120,5.028,1121,6.307,1122,7.808,1123,7.145,1124,6.307]],["title/modules/Tab3PageModule.html",[189,1.108,1125,3.325]],["body/modules/Tab3PageModule.html",[0,1.086,3,0.096,4,0.123,9,0.11,48,0.009,80,0.288,81,1.086,83,2.056,100,1.778,101,0.123,102,0.274,120,1.195,138,1.656,168,3.38,186,0.006,187,0.008,188,0.006,189,1.581,191,2.337,192,2.466,193,3.368,194,2.608,195,2.608,196,2.466,199,3.139,200,2.608,202,3.052,203,3.329,204,2.685,205,3.329,206,2.685,208,2.535,209,3.232,211,2.685,212,2.535,1109,5.109,1125,6.605,1126,5.598,1127,5.598,1128,6.342,1129,6.342]],["title/components/TabsPage.html",[0,0.761,170,1.638]],["body/components/TabsPage.html",[0,1.284,1,1.98,2,2.784,3,0.103,4,0.102,5,2.215,6,2.282,7,2.215,8,2.215,9,0.091,13,2.215,14,3.896,15,3.578,16,4.75,17,2.952,19,2.866,21,0.322,27,2.429,33,0.495,40,4.851,45,0.64,47,0.962,48,0.009,49,0.824,50,0.377,51,0.962,54,1.878,58,1.928,80,0.245,81,0.896,84,1.98,85,2.034,96,3.471,101,0.102,102,0.226,103,1.928,117,3.355,138,1.366,139,2.866,140,2.866,141,2.215,142,3.359,143,2.215,145,2.215,146,1.98,147,2.092,148,2.215,149,1.98,150,2.215,151,1.98,152,2.034,153,2.215,154,1.98,155,1.696,156,2.866,157,1.98,158,2.215,159,1.98,160,2.215,161,1.98,162,1.009,163,2.215,164,1.98,165,2.215,166,1.98,167,2.215,168,1.98,169,2.215,170,2.923,171,2.215,172,1.98,173,2.429,174,2.215,175,1.98,176,2.215,177,1.98,178,2.215,179,1.98,180,2.092,181,2.215,182,1.98,183,3,184,2.215,185,2.215,186,0.005,187,0.007,188,0.005,260,3.015,425,5.062,438,5.062,503,1.432,577,2.316,955,3.471,1130,4.618,1131,6.769,1132,7.504,1133,6.769,1134,7.934,1135,5.232,1136,5.232,1137,5.232,1138,5.452,1139,6.769,1140,5.232]],["title/modules/TabsPageModule.html",[189,1.108,1141,3.325]],["body/modules/TabsPageModule.html",[3,0.095,4,0.121,9,0.108,48,0.009,80,0.291,81,1.07,83,2.026,100,1.752,101,0.121,102,0.27,120,1.177,138,1.632,170,3.243,186,0.006,187,0.007,188,0.006,189,1.558,191,2.303,192,2.43,193,3.347,194,2.57,195,2.57,196,2.43,199,3.112,200,2.57,202,3.025,203,3.299,204,2.646,205,3.299,206,2.646,208,2.498,209,3.203,212,3.025,1141,6.72,1142,5.517,1143,5.517,1144,5.517,1145,6.177,1146,6.249,1147,6.249,1148,5.517]],["title/modules/TabsPageRoutingModule.html",[189,1.108,1145,3.12]],["body/modules/TabsPageRoutingModule.html",[0,1.003,3,0.089,4,0.114,9,0.101,16,4.112,48,0.009,80,0.258,81,1.003,100,1.643,101,0.114,102,0.253,114,0.74,170,2.68,183,2.343,186,0.006,187,0.007,188,0.006,191,2.159,196,2.279,202,2.908,207,3.348,208,2.908,211,3.869,212,2.343,213,2.808,415,7.507,425,4.382,426,5.173,437,5.173,438,4.382,439,5.173,771,6.42,1121,5.173,1145,5.104,1148,5.173,1149,5.86,1150,8.667,1151,5.86,1152,5.86,1153,7.273,1154,5.86,1155,7.273,1156,5.86]],["title/components/TestResultPage.html",[0,0.761,172,1.683]],["body/components/TestResultPage.html",[0,1.227,1,1.804,2,2.618,3,0.097,4,0.093,5,2.018,6,2.078,7,2.018,8,2.018,9,0.083,11,0.916,12,3.553,13,2.018,14,3.862,15,3.548,17,2.776,19,2.695,21,0.293,22,0.621,27,2.285,28,3.792,33,0.451,41,4.151,43,3.806,45,0.754,47,0.877,48,0.009,49,0.787,50,0.516,51,0.877,54,2.285,55,2.545,58,1.756,80,0.234,81,0.816,84,1.804,85,1.853,89,2.447,100,1.336,101,0.093,102,0.206,103,1.756,104,1.853,138,1.245,139,2.695,140,2.695,141,2.018,142,3.239,143,2.018,145,2.018,146,1.804,147,1.905,148,2.018,149,1.804,150,2.018,151,1.804,152,1.853,153,2.018,154,1.804,155,1.545,156,2.695,157,1.804,158,2.018,159,1.804,160,2.018,161,1.804,162,0.919,163,2.018,164,1.804,165,2.018,166,1.804,167,2.018,168,1.804,169,2.018,170,1.756,171,2.018,172,2.895,173,3.092,174,2.018,175,1.804,176,2.018,177,1.804,178,2.018,179,1.804,180,1.905,181,2.018,182,1.804,183,1.905,184,2.018,185,2.018,186,0.008,187,0.006,188,0.005,234,0.635,235,0.669,274,4.015,434,6.134,447,6.754,448,3.162,521,4.756,526,2.747,533,3.553,741,1.134,1157,5.756,1158,4.207,1159,7.169,1160,6.366,1161,7.973,1162,7.169,1163,4.766,1164,4.766,1165,4.766,1166,4.766,1167,4.766,1168,4.766,1169,4.766,1170,4.766,1171,4.766,1172,4.766,1173,4.766,1174,4.766,1175,6.366,1176,4.766,1177,4.766]],["title/modules/TestResultPageModule.html",[189,1.108,1178,3.325]],["body/modules/TestResultPageModule.html",[0,1.066,3,0.095,4,0.121,9,0.108,48,0.009,80,0.287,81,1.066,83,2.019,100,1.746,101,0.121,102,0.269,114,0.786,120,1.173,138,1.627,172,3.368,173,2.235,186,0.006,187,0.007,188,0.006,189,1.553,191,2.295,192,2.422,193,3.342,194,2.562,195,2.562,196,2.422,199,3.105,200,2.562,202,3.019,203,3.293,204,2.637,205,3.293,206,2.637,207,3.44,208,2.49,209,3.197,211,2.637,212,2.49,213,2.985,434,4.658,1157,4.372,1178,6.577,1179,5.499,1180,5.499,1181,6.229,1182,6.229]],["title/components/TestRoomPage.html",[0,0.761,175,1.683]],["body/components/TestRoomPage.html",[0,1.046,1,1.341,2,2.128,3,0.079,4,0.069,5,1.5,6,1.545,7,1.5,8,1.5,9,0.061,11,0.745,12,3.029,13,1.5,14,3.739,15,3.434,17,2.257,19,2.191,21,0.318,22,0.505,27,1.857,28,3.331,29,3.631,33,0.335,40,4.442,41,3.82,43,3.463,45,0.808,47,1.124,48,0.009,49,0.785,50,0.555,51,1.124,54,2.679,55,2.858,58,1.306,80,0.251,81,0.607,83,1.149,84,1.341,85,1.378,89,1.819,96,2.351,100,0.993,101,0.069,102,0.153,103,1.306,104,2.779,114,0.447,115,2.487,117,1.757,122,2.042,138,0.926,139,2.191,140,2.191,141,1.5,142,2.845,143,1.5,145,1.5,146,1.341,147,1.417,148,1.5,149,1.341,150,1.5,151,1.341,152,1.378,153,1.5,154,1.341,155,1.149,156,2.191,157,1.341,158,1.5,159,1.341,160,1.5,161,1.341,162,0.683,163,1.5,164,1.341,165,1.5,166,1.341,167,1.5,168,1.341,169,1.5,170,1.306,171,1.5,172,1.341,173,2.892,174,1.5,175,2.543,176,1.5,177,1.341,178,1.5,179,1.341,180,1.417,181,1.5,182,1.341,183,1.417,184,1.5,185,1.5,186,0.003,187,0.005,188,0.003,234,0.895,235,1.081,260,3.873,384,2.755,388,3.631,431,3.631,432,6.436,448,2.351,449,5.409,465,3.128,472,2.855,473,2.855,521,4.742,526,2.042,533,3.543,563,2.235,564,3.263,658,5.395,719,0.824,741,1.231,861,5.409,886,2.855,887,2.65,920,6.209,943,2.855,944,2.855,945,2.855,947,2.855,955,2.351,986,4.923,1054,4.568,1157,6.04,1183,3.128,1184,6.112,1185,5.174,1186,6.112,1187,6.112,1188,6.112,1189,6.112,1190,6.112,1191,6.721,1192,5.174,1193,5.174,1194,6.721,1195,7.464,1196,3.544,1197,3.544,1198,3.544,1199,3.544,1200,3.544,1201,3.544,1202,3.544,1203,5.174,1204,3.544,1205,3.544,1206,3.544,1207,3.544,1208,3.544,1209,3.544,1210,3.544,1211,3.128,1212,5.174,1213,3.544,1214,6.112,1215,5.174,1216,3.544,1217,3.544,1218,3.544,1219,5.174,1220,3.544,1221,3.544,1222,3.544,1223,5.174,1224,3.544,1225,3.544,1226,4.568,1227,3.544,1228,3.128,1229,3.544,1230,3.544,1231,3.544,1232,3.544,1233,3.544,1234,3.128,1235,3.544,1236,3.544,1237,3.544,1238,3.544,1239,3.128,1240,3.544,1241,3.544,1242,3.544,1243,3.544,1244,3.544,1245,3.544,1246,3.544,1247,3.544,1248,3.544,1249,3.544,1250,3.544,1251,5.174,1252,5.174,1253,3.544,1254,3.544,1255,3.544,1256,3.544,1257,3.544,1258,3.544,1259,3.544,1260,3.544,1261,3.544,1262,3.544]],["title/modules/TestRoomPageModule.html",[189,1.108,1263,3.325]],["body/modules/TestRoomPageModule.html",[0,1.053,3,0.094,4,0.12,9,0.106,48,0.009,80,0.29,81,1.053,83,1.993,100,1.724,101,0.12,102,0.265,114,0.776,120,1.158,138,1.606,173,2.207,175,3.359,186,0.006,187,0.007,188,0.006,189,1.533,191,2.266,192,2.391,193,3.323,194,2.529,195,2.529,196,2.391,199,3.081,200,2.529,202,2.995,203,3.267,204,2.603,205,3.267,206,2.603,207,3.421,208,2.459,209,3.172,211,2.603,212,2.459,213,2.947,330,5.429,332,4.954,333,4.954,432,4.599,1157,4.316,1263,6.557,1264,5.429,1265,5.429,1266,6.15,1267,6.15,1268,6.15]],["title/injectables/TimeService.html",[449,3.12,504,1.339]],["body/injectables/TimeService.html",[3,0.089,4,0.114,9,0.102,21,0.361,22,0.71,27,2.613,33,0.748,45,0.831,48,0.009,50,0.423,54,2.97,55,3.164,80,0.191,81,1.005,101,0.114,102,0.253,104,3.371,117,2.909,186,0.006,187,0.007,188,0.006,234,0.781,235,0.823,281,3.125,449,5.109,504,2.193,505,3.248,533,3.923,543,2.813,577,2.81,741,1.883,1269,5.181,1270,7.914,1271,7.914,1272,8.275,1273,8.275,1274,8.275,1275,8.275,1276,5.869,1277,5.869,1278,5.869,1279,5.869,1280,5.869,1281,5.869,1282,5.869,1283,5.869,1284,5.869,1285,7.914,1286,5.869,1287,5.869]],["title/components/TrainingPage.html",[0,0.761,177,1.683]],["body/components/TrainingPage.html",[0,0.977,1,1.193,2,1.951,3,0.109,4,0.061,5,1.335,6,1.375,7,1.335,8,1.335,9,0.055,11,0.683,12,2.828,13,1.335,14,3.682,15,3.382,17,2.069,19,2.009,21,0.194,22,0.463,27,1.703,28,3.146,29,4.777,33,0.298,36,5.55,37,2.856,38,3.82,41,3.679,42,4.266,43,3.443,45,0.829,47,1.167,48,0.009,49,0.815,50,0.596,51,1.167,54,2.741,55,2.538,58,1.162,78,2.799,80,0.26,81,0.54,83,1.022,84,1.193,85,1.226,87,2.358,88,1.817,89,1.618,92,1.26,97,4.68,98,2.539,100,0.884,101,0.061,102,0.136,103,1.162,104,2.781,114,0.599,122,2.734,138,0.823,139,2.009,140,2.009,141,1.335,142,2.687,143,1.335,145,1.335,146,1.193,147,1.26,148,1.335,149,1.193,150,1.335,151,1.193,152,1.226,153,1.335,154,1.795,155,1.849,156,2.009,157,1.193,158,1.335,159,1.193,160,1.335,161,1.193,162,0.608,163,1.335,164,1.193,165,1.335,166,1.193,167,1.335,168,1.193,169,1.335,170,1.162,171,1.335,172,1.193,173,1.703,174,1.335,175,1.193,176,1.335,177,2.402,178,1.335,179,1.193,180,1.26,181,1.335,182,1.193,183,1.26,184,1.335,185,1.335,186,0.003,187,0.005,188,0.003,234,0.845,235,0.955,326,2.783,354,2.091,388,2.212,425,4.747,427,3.33,521,5.64,526,4.122,533,4.008,534,4.188,556,3.148,557,2.212,559,2.212,569,1.988,572,1.988,622,5.036,636,5.036,741,1.357,784,2.212,798,2.992,799,4.292,955,3.148,986,4.595,992,3.548,1095,2.783,1096,2.783,1097,2.783,1098,2.783,1099,2.783,1100,2.783,1101,2.783,1102,2.783,1226,2.783,1228,2.783,1288,2.783,1289,5.705,1290,4.745,1291,5.705,1292,5.705,1293,5.705,1294,5.705,1295,5.705,1296,5.705,1297,5.705,1298,5.705,1299,5.705,1300,4.595,1301,5.705,1302,4.745,1303,4.745,1304,6.347,1305,6.347,1306,6.347,1307,4.745,1308,5.705,1309,3.153,1310,6.347,1311,3.153,1312,4.745,1313,3.153,1314,3.153,1315,3.153,1316,3.153,1317,3.153,1318,3.153,1319,3.153,1320,3.153,1321,3.153,1322,3.153,1323,3.153,1324,3.153,1325,3.153,1326,3.153,1327,3.153,1328,3.153,1329,5.705,1330,3.153,1331,3.153,1332,3.153,1333,3.153,1334,3.153,1335,3.153,1336,3.153,1337,3.153,1338,3.153,1339,4.745,1340,3.153,1341,3.153,1342,5.705,1343,4.745,1344,5.705,1345,3.153,1346,3.153,1347,3.153,1348,4.745,1349,3.153,1350,3.153,1351,4.745,1352,3.153,1353,3.153,1354,3.153,1355,3.153,1356,3.153,1357,3.153,1358,4.745,1359,3.153,1360,4.745,1361,3.153,1362,5.705,1363,3.153,1364,3.153,1365,3.153,1366,3.153,1367,3.153,1368,4.745,1369,3.153,1370,3.153,1371,3.153,1372,3.153,1373,3.153,1374,3.153,1375,3.153,1376,3.153,1377,3.153,1378,3.153,1379,4.745,1380,4.745,1381,4.745,1382,4.745,1383,6.347,1384,3.153,1385,3.153,1386,3.153,1387,3.153,1388,3.153,1389,4.745,1390,4.745]],["title/modules/TrainingPageModule.html",[189,1.108,1391,3.325]],["body/modules/TrainingPageModule.html",[0,1.072,3,0.095,4,0.122,9,0.108,48,0.009,80,0.287,81,1.072,83,2.029,100,1.755,101,0.122,102,0.27,114,0.79,120,1.179,138,1.635,177,3.371,186,0.006,187,0.007,188,0.006,189,1.56,191,2.306,192,2.434,193,3.349,194,2.574,195,2.574,196,2.434,199,3.115,200,2.574,202,3.028,203,3.303,204,2.65,205,3.303,206,2.65,207,3.447,208,2.502,209,3.206,211,2.65,212,2.502,213,3,1391,6.585,1392,5.526,1393,5.526,1394,6.26,1395,6.26]],["title/classes/UpdateCredit.html",[102,0.192,739,1.276]],["body/classes/UpdateCredit.html",[3,0.098,4,0.054,9,0.048,11,1.276,21,0.172,22,0.422,24,1.825,25,0.843,26,1.972,32,1.633,33,0.772,45,0.501,47,0.515,48,0.009,49,0.476,50,0.648,51,0.515,80,0.091,90,0.434,101,0.179,102,0.382,110,0.843,114,1.122,120,0.527,129,0.784,162,1.022,186,0.003,187,0.004,188,0.003,233,1.777,234,0.373,235,0.392,237,0.823,238,1.754,464,1.596,503,1.186,558,1.517,573,1.559,577,1.337,634,1.633,649,1.806,668,1.995,669,0.579,670,0.823,671,1.883,672,1.031,675,2.062,676,1.305,677,1.526,678,1.305,679,1.558,680,1.305,681,1.596,682,1.305,683,1.305,684,1.809,685,1.305,686,1.305,687,1.713,688,1.903,689,1.672,690,1.305,691,1.305,692,1.305,693,1.305,694,1.305,695,1.596,696,1.853,697,1.305,698,1.305,699,1.305,700,1.305,701,0.863,702,1.596,703,1.305,704,1.305,705,1.305,706,1.337,707,1.305,708,0.843,709,0.863,710,0.843,711,1.305,712,1.419,713,1.305,714,1.305,715,1.747,716,1.243,717,1.273,718,1.273,719,1.007,720,1.243,721,1.243,722,1.273,723,0.863,724,0.863,725,1.273,726,1.273,727,0.885,728,1.273,729,1.243,730,0.863,731,0.863,732,1.273,733,1.273,734,1.214,735,1.273,736,1.273,737,1.273,738,0.885,739,1.521,740,1.337,741,1.03,742,1.273,743,1.273,744,1.273,745,1.273,746,1.243,747,0.863,748,1.273,749,1.273,1396,4.331,1397,2.798]],["title/classes/UpdateCreditFailed.html",[102,0.192,743,1.307]],["body/classes/UpdateCreditFailed.html",[3,0.099,4,0.055,9,0.049,11,1.278,21,0.175,22,0.427,24,1.836,25,0.855,26,1.975,32,1.646,33,0.782,45,0.414,48,0.009,49,0.312,50,0.642,80,0.093,90,0.441,101,0.179,102,0.382,110,0.855,114,1.124,120,0.535,129,0.796,162,1.032,186,0.003,187,0.004,188,0.003,233,1.781,234,0.378,235,0.398,237,0.835,238,1.768,464,1.611,503,1.199,558,1.486,573,1.561,634,1.646,668,2.006,669,0.587,670,0.835,671,1.885,675,2.071,676,1.319,677,1.533,678,1.319,679,1.565,680,1.319,681,1.611,682,1.319,683,1.319,684,1.821,685,1.319,686,1.319,687,1.726,688,1.913,689,1.685,690,1.319,691,1.319,692,1.319,693,1.319,694,1.319,695,1.611,696,1.865,697,1.319,698,1.319,699,1.319,700,1.319,701,0.876,702,1.319,703,1.319,704,1.611,705,1.319,706,1.352,707,1.319,708,0.855,709,0.876,710,0.855,711,1.319,712,1.431,713,1.319,714,1.319,715,1.752,716,1.257,717,1.288,718,1.288,719,1.018,720,1.257,721,1.257,722,1.288,723,0.876,724,0.876,725,1.288,726,1.288,727,0.898,728,1.288,729,1.257,730,0.876,731,0.876,732,1.288,733,1.288,734,1.228,735,1.288,736,1.288,737,1.288,738,0.898,739,1.257,740,1.352,741,1.042,742,1.288,743,1.573,744,1.288,745,1.288,746,1.257,747,0.876,748,1.288,749,1.288,1398,4.381]],["title/classes/UpdateCreditSuccess.html",[102,0.192,742,1.307]],["body/classes/UpdateCreditSuccess.html",[3,0.099,4,0.055,9,0.049,11,1.278,21,0.175,22,0.427,24,1.836,25,0.855,26,1.975,32,1.646,33,0.782,45,0.414,48,0.009,49,0.312,50,0.642,80,0.093,90,0.441,101,0.179,102,0.382,110,0.855,114,1.124,120,0.535,129,0.796,162,1.032,186,0.003,187,0.004,188,0.003,233,1.781,234,0.378,235,0.398,237,0.835,238,1.768,464,1.611,503,1.199,558,1.486,573,1.561,634,1.646,668,2.006,669,0.587,670,0.835,671,1.885,675,2.071,676,1.319,677,1.533,678,1.319,679,1.565,680,1.319,681,1.611,682,1.319,683,1.319,684,1.821,685,1.319,686,1.319,687,1.726,688,1.913,689,1.685,690,1.319,691,1.319,692,1.319,693,1.319,694,1.319,695,1.611,696,1.865,697,1.319,698,1.319,699,1.319,700,1.319,701,0.876,702,1.319,703,1.611,704,1.319,705,1.319,706,1.352,707,1.319,708,0.855,709,0.876,710,0.855,711,1.319,712,1.431,713,1.319,714,1.319,715,1.752,716,1.257,717,1.288,718,1.288,719,1.018,720,1.257,721,1.257,722,1.288,723,0.876,724,0.876,725,1.288,726,1.288,727,0.898,728,1.288,729,1.257,730,0.876,731,0.876,732,1.288,733,1.288,734,1.228,735,1.288,736,1.288,737,1.288,738,0.898,739,1.257,740,1.352,741,1.042,742,1.573,743,1.288,744,1.288,745,1.288,746,1.257,747,0.876,748,1.288,749,1.288,1399,4.381]],["title/classes/UpdateGeneratedLog.html",[102,0.192,797,2.46]],["body/classes/UpdateGeneratedLog.html",[3,0.078,4,0.1,9,0.089,11,1.227,21,0.315,22,0.651,33,0.744,45,0.702,47,0.942,48,0.009,49,0.562,50,0.65,51,0.942,80,0.167,90,0.795,101,0.175,102,0.361,114,1.076,186,0.005,187,0.007,188,0.005,233,1.084,234,0.682,235,0.718,383,4.225,536,4.631,545,3.022,558,1.503,573,1.516,577,2.06,649,2.531,669,1.059,671,1.831,672,1.887,677,1.501,679,1.084,688,1.986,712,1.991,715,1.573,741,1.588,780,3.001,782,2.669,788,2.951,790,4.017,791,4.017,792,4.47,793,4.017,794,3.082,795,3.847,796,3.847,797,4.11,798,3.229,799,3.229,800,3.397,801,3.847,1400,6.675,1401,5.121]],["title/classes/UpdateGeneratedLogSuccess.html",[102,0.192,801,2.562]],["body/classes/UpdateGeneratedLogSuccess.html",[3,0.08,4,0.102,9,0.091,11,1.234,21,0.324,22,0.662,33,0.778,45,0.642,48,0.009,50,0.632,80,0.172,90,0.816,101,0.176,102,0.364,114,1.083,186,0.005,187,0.007,188,0.005,233,1.114,234,0.7,235,0.738,383,4.252,536,4.665,545,3.039,558,1.351,573,1.524,669,1.088,671,1.841,677,1.521,679,1.114,688,2.011,712,2.005,715,1.593,741,1.616,780,3.054,782,2.716,788,3.032,790,4.088,791,4.088,792,4.088,793,4.528,794,3.166,795,3.915,796,3.915,797,3.759,798,3.317,799,3.317,800,3.49,801,4.336,1402,6.793]],["title/classes/UpdateInfo.html",[102,0.192,687,1.276]],["body/classes/UpdateInfo.html",[3,0.098,4,0.054,9,0.048,11,1.276,21,0.172,22,0.422,24,1.825,25,0.843,26,1.972,32,1.633,33,0.772,45,0.501,47,0.515,48,0.009,49,0.476,50,0.648,51,0.515,80,0.091,90,0.434,101,0.179,102,0.382,110,0.843,114,1.122,120,0.527,129,0.784,162,1.022,186,0.003,187,0.004,188,0.003,233,1.777,234,0.373,235,0.392,237,0.823,238,1.754,464,1.596,503,1.186,558,1.517,573,1.559,577,1.337,634,1.633,649,1.806,668,1.995,669,0.579,670,0.823,671,1.883,672,1.031,675,2.062,676,1.305,677,1.526,678,1.305,679,1.558,680,1.305,681,1.596,682,1.305,683,1.305,684,1.809,685,1.305,686,1.305,687,1.959,688,1.903,689,1.672,690,1.305,691,1.305,692,1.305,693,1.305,694,1.305,695,1.596,696,1.853,697,1.305,698,1.305,699,1.305,700,1.305,701,0.863,702,1.305,703,1.305,704,1.305,705,1.305,706,1.337,707,1.305,708,0.843,709,0.863,710,0.843,711,1.305,712,1.419,713,1.305,714,1.305,715,1.747,716,1.243,717,1.273,718,1.273,719,1.007,720,1.243,721,1.243,722,1.273,723,0.863,724,0.863,725,1.273,726,1.273,727,0.885,728,1.273,729,1.243,730,0.863,731,0.863,732,1.273,733,1.273,734,1.214,735,1.273,736,1.273,737,1.273,738,0.885,739,1.243,740,1.337,741,1.03,742,1.273,743,1.273,744,1.273,745,1.273,746,1.243,747,0.863,748,1.273,749,1.273,1403,4.331,1404,2.798]],["title/classes/UpdateLog.html",[102,0.192,746,1.276]],["body/classes/UpdateLog.html",[3,0.098,4,0.054,9,0.048,11,1.276,21,0.172,22,0.422,24,1.825,25,0.843,26,1.972,32,1.633,33,0.772,45,0.501,47,0.515,48,0.009,49,0.476,50,0.648,51,0.515,80,0.091,90,0.434,101,0.179,102,0.382,110,0.843,114,1.122,120,0.527,129,0.784,162,1.022,186,0.003,187,0.004,188,0.003,233,1.777,234,0.373,235,0.392,237,0.823,238,1.754,464,1.596,503,1.186,558,1.517,573,1.559,577,1.337,634,1.633,649,1.806,668,1.995,669,0.579,670,0.823,671,1.883,672,1.031,675,2.062,676,1.305,677,1.526,678,1.305,679,1.558,680,1.305,681,1.596,682,1.305,683,1.305,684,1.809,685,1.305,686,1.305,687,1.713,688,1.903,689,1.672,690,1.305,691,1.305,692,1.305,693,1.305,694,1.305,695,1.596,696,1.853,697,1.305,698,1.305,699,1.305,700,1.305,701,0.863,702,1.305,703,1.305,704,1.305,705,1.305,706,1.337,707,1.305,708,0.843,709,0.863,710,0.843,711,1.596,712,1.419,713,1.305,714,1.305,715,1.747,716,1.243,717,1.273,718,1.273,719,1.007,720,1.243,721,1.243,722,1.273,723,0.863,724,0.863,725,1.273,726,1.273,727,0.885,728,1.273,729,1.243,730,0.863,731,0.863,732,1.273,733,1.273,734,1.214,735,1.273,736,1.273,737,1.273,738,0.885,739,1.243,740,1.337,741,1.03,742,1.273,743,1.273,744,1.273,745,1.273,746,1.521,747,0.863,748,1.273,749,1.273,1405,4.331,1406,2.798]],["title/classes/UpdateLogFailed.html",[102,0.192,749,1.307]],["body/classes/UpdateLogFailed.html",[3,0.099,4,0.055,9,0.049,11,1.278,21,0.175,22,0.427,24,1.836,25,0.855,26,1.975,32,1.646,33,0.782,45,0.414,48,0.009,49,0.312,50,0.642,80,0.093,90,0.441,101,0.179,102,0.382,110,0.855,114,1.124,120,0.535,129,0.796,162,1.032,186,0.003,187,0.004,188,0.003,233,1.781,234,0.378,235,0.398,237,0.835,238,1.768,464,1.611,503,1.199,558,1.486,573,1.561,634,1.646,668,2.006,669,0.587,670,0.835,671,1.885,675,2.071,676,1.319,677,1.533,678,1.319,679,1.565,680,1.319,681,1.611,682,1.319,683,1.319,684,1.821,685,1.319,686,1.319,687,1.726,688,1.913,689,1.685,690,1.319,691,1.319,692,1.319,693,1.319,694,1.319,695,1.611,696,1.865,697,1.319,698,1.319,699,1.319,700,1.319,701,0.876,702,1.319,703,1.319,704,1.319,705,1.319,706,1.352,707,1.319,708,0.855,709,0.876,710,0.855,711,1.319,712,1.431,713,1.319,714,1.611,715,1.752,716,1.257,717,1.288,718,1.288,719,1.018,720,1.257,721,1.257,722,1.288,723,0.876,724,0.876,725,1.288,726,1.288,727,0.898,728,1.288,729,1.257,730,0.876,731,0.876,732,1.288,733,1.288,734,1.228,735,1.288,736,1.288,737,1.288,738,0.898,739,1.257,740,1.352,741,1.042,742,1.288,743,1.288,744,1.288,745,1.288,746,1.257,747,0.876,748,1.288,749,1.573,1407,4.381]],["title/classes/UpdateLogSuccess.html",[102,0.192,748,1.307]],["body/classes/UpdateLogSuccess.html",[3,0.099,4,0.055,9,0.049,11,1.278,21,0.175,22,0.427,24,1.836,25,0.855,26,1.975,32,1.646,33,0.782,45,0.414,48,0.009,49,0.312,50,0.642,80,0.093,90,0.441,101,0.179,102,0.382,110,0.855,114,1.124,120,0.535,129,0.796,162,1.032,186,0.003,187,0.004,188,0.003,233,1.781,234,0.378,235,0.398,237,0.835,238,1.768,464,1.611,503,1.199,558,1.486,573,1.561,634,1.646,668,2.006,669,0.587,670,0.835,671,1.885,675,2.071,676,1.319,677,1.533,678,1.319,679,1.565,680,1.319,681,1.611,682,1.319,683,1.319,684,1.821,685,1.319,686,1.319,687,1.726,688,1.913,689,1.685,690,1.319,691,1.319,692,1.319,693,1.319,694,1.319,695,1.611,696,1.865,697,1.319,698,1.319,699,1.319,700,1.319,701,0.876,702,1.319,703,1.319,704,1.319,705,1.319,706,1.352,707,1.319,708,0.855,709,0.876,710,0.855,711,1.319,712,1.431,713,1.611,714,1.319,715,1.752,716,1.257,717,1.288,718,1.288,719,1.018,720,1.257,721,1.257,722,1.288,723,0.876,724,0.876,725,1.288,726,1.288,727,0.898,728,1.288,729,1.257,730,0.876,731,0.876,732,1.288,733,1.288,734,1.228,735,1.288,736,1.288,737,1.288,738,0.898,739,1.257,740,1.352,741,1.042,742,1.288,743,1.288,744,1.288,745,1.288,746,1.257,747,0.876,748,1.573,749,1.288,1408,4.381]],["title/interfaces/User.html",[26,0.987,540,2.063]],["body/interfaces/User.html",[3,0.1,4,0.127,9,0.113,21,0.403,22,0.759,26,1.726,48,0.009,50,0.647,101,0.127,186,0.006,187,0.008,188,0.006,233,1.387,503,2.461,540,3.037,541,3.94,634,2.351,649,2.652,717,2.525,719,1.522,1409,5.779,1410,7.581,1411,7.581,1412,7.581,1413,5.779]],["title/injectables/UserEffects.html",[342,3.325,504,1.339]],["body/injectables/UserEffects.html",[3,0.04,4,0.051,9,0.045,16,2.883,21,0.161,22,0.401,23,3.626,24,1.538,26,0.58,32,1.389,33,0.247,35,3.626,37,3.054,38,3.461,40,4,41,3.44,43,3.22,45,0.729,47,0.481,48,0.009,49,0.287,50,0.565,51,0.481,52,3.2,58,1.513,78,3.498,80,0.268,81,0.447,82,1.573,88,1.506,89,1.342,92,1.045,94,1.734,96,1.734,100,0.733,101,0.08,102,0.113,103,0.963,104,2.699,108,5.076,110,1.237,111,3.626,114,0.519,115,2.883,117,4.192,122,2.367,133,3.626,186,0.005,187,0.004,188,0.003,234,1.008,235,1.061,240,3.309,260,2.367,290,1.834,341,1.573,342,3.072,365,4.632,366,2.106,367,2.307,379,1.834,431,2.883,470,3.626,504,1.237,526,4.735,533,2.85,543,1.253,546,1.834,547,4.402,549,5.935,551,1.734,553,3.072,561,6.393,563,4.772,564,5.333,568,1.734,569,3.2,570,3.561,571,4.675,572,1.648,573,0.458,629,4.479,634,1.124,668,1.422,675,1.357,677,0.83,679,0.87,684,1.422,689,1.422,696,1.179,712,1.207,716,1.457,717,1.691,719,1.542,720,1.457,721,1.457,729,1.457,734,1.422,739,1.457,746,1.457,768,3.626,847,6.618,849,7.107,850,6.346,853,5.076,887,3.072,952,3.626,955,2.725,959,3.626,1012,3.626,1026,3.626,1034,3.626,1036,3.626,1037,3.626,1056,6.68,1057,6.346,1059,6.346,1065,4.301,1138,3.309,1300,3.309,1414,2.106,1415,5.074,1416,2.614,1417,4.108,1418,6.635,1419,4.108,1420,4.108,1421,4.108,1422,4.108,1423,4.108,1424,2.614,1425,4.108,1426,4.108,1427,4.108,1428,4.108,1429,2.614,1430,4.108,1431,4.108,1432,5.751,1433,4.108,1434,4.108,1435,4.108,1436,2.614,1437,4.108,1438,4.108,1439,7.188,1440,5.751,1441,5.751,1442,5.751,1443,4.108,1444,5.751,1445,4.108,1446,2.614,1447,4.108,1448,4.108,1449,4.108,1450,4.108,1451,4.108,1452,3.626,1453,4.108,1454,4.108,1455,4.108,1456,4.108,1457,4.108,1458,4.108,1459,2.614,1460,4.108,1461,4.108,1462,2.614,1463,4.108,1464,4.108,1465,4.108,1466,4.108,1467,4.108,1468,6.635,1469,4.108,1470,2.614,1471,4.108,1472,2.614,1473,2.614,1474,4.108,1475,3.626,1476,5.751,1477,4.108,1478,4.108,1479,5.751,1480,4.108,1481,4.108,1482,2.614,1483,4.108,1484,3.626,1485,4.108,1486,4.108,1487,4.108,1488,2.614,1489,4.108,1490,2.614,1491,2.614,1492,2.614,1493,2.614,1494,2.614,1495,2.307,1496,2.614]],["title/injectables/UserService.html",[40,2.562,504,1.339]],["body/injectables/UserService.html",[3,0.068,4,0.088,9,0.078,21,0.277,22,0.598,24,1.204,26,1.89,27,2.199,33,0.579,40,3.532,43,3.83,44,4.296,45,0.834,47,1.375,48,0.009,49,0.821,50,0.631,51,1.375,54,2.895,55,2.785,78,2.865,80,0.274,81,0.771,89,2.312,90,0.699,91,3.038,92,1.801,93,2.988,94,2.988,95,3.161,101,0.088,102,0.194,104,3.267,105,4.301,107,3.532,117,3.706,186,0.004,187,0.006,188,0.004,233,1.656,234,0.816,235,0.86,237,1.802,238,1.802,281,2.398,446,6.6,469,3.976,478,6.149,503,1.233,504,1.846,505,2.492,543,2.159,558,0.809,577,2.783,581,2.988,634,1.678,712,1.072,740,2.15,741,1.657,747,1.39,861,6.101,886,6.3,887,5.849,934,3.628,955,4.066,1052,3.976,1475,3.976,1484,3.976,1497,3.976,1498,6.966,1499,7.821,1500,6.966,1501,6.129,1502,7.477,1503,7.477,1504,6.129,1505,6.129,1506,6.129,1507,6.129,1508,4.504,1509,4.504,1510,4.504,1511,4.504,1512,6.129,1513,4.504,1514,6.129,1515,4.504,1516,6.129,1517,4.504,1518,4.504,1519,4.504,1520,4.504,1521,4.504,1522,4.504,1523,4.504,1524,4.504,1525,6.129,1526,6.129,1527,4.504,1528,4.504,1529,6.129,1530,4.504,1531,4.504]],["title/components/VerifyEmailPage.html",[0,0.761,179,1.683]],["body/components/VerifyEmailPage.html",[0,1.26,1,1.902,2,2.712,3,0.1,4,0.098,5,2.128,6,2.192,7,2.128,8,2.128,9,0.087,11,0.949,12,3.648,13,2.128,14,3.882,15,3.565,17,2.876,19,2.792,21,0.309,24,2.226,27,2.367,28,3.873,33,0.475,34,4.049,35,4.927,45,0.696,47,0.925,48,0.009,49,0.809,50,0.362,51,0.925,52,4.159,54,2.367,55,2.637,58,1.852,80,0.215,81,0.861,82,3.026,84,1.902,85,1.955,101,0.098,102,0.217,103,1.852,138,1.313,139,2.792,140,2.792,141,2.128,142,3.308,143,2.128,145,2.128,146,1.902,147,2.01,148,2.128,149,1.902,150,2.128,151,1.902,152,1.955,153,2.128,154,1.902,155,1.63,156,2.792,157,1.902,158,2.128,159,1.902,160,2.128,161,1.902,162,0.969,163,2.128,164,1.902,165,2.128,166,1.902,167,2.128,168,1.902,169,2.128,170,1.852,171,2.128,172,1.902,173,2.367,174,2.128,175,1.902,176,2.128,177,1.902,178,2.128,179,2.957,180,3.442,181,2.128,182,1.902,183,2.01,184,2.128,185,2.128,186,0.005,187,0.006,188,0.005,240,5.312,420,5.843,675,1.763,698,1.986,774,5.822,1086,5.822,1239,5.822,1532,6.294,1533,4.438,1534,7.36,1535,6.595,1536,8.327,1537,5.027,1538,5.027,1539,5.027,1540,5.027,1541,5.027,1542,6.595,1543,6.595,1544,6.595]],["title/modules/VerifyEmailPageModule.html",[189,1.108,1545,3.325]],["body/modules/VerifyEmailPageModule.html",[0,1.066,3,0.095,4,0.121,9,0.108,48,0.009,80,0.287,81,1.066,83,2.019,100,1.746,101,0.121,102,0.269,114,0.786,120,1.173,138,1.627,179,3.368,180,2.49,186,0.006,187,0.007,188,0.006,189,1.553,191,2.295,192,2.422,193,3.342,194,2.562,195,2.562,196,2.422,199,3.105,200,2.562,202,3.019,203,3.293,204,2.637,205,3.293,206,2.637,207,3.44,208,2.49,209,3.197,211,2.637,212,2.49,213,2.985,420,4.658,1532,5.018,1545,6.577,1546,5.499,1547,5.499,1548,6.229,1549,6.229]],["title/components/WelcomePage.html",[0,0.761,182,1.683]],["body/components/WelcomePage.html",[0,1.231,1,1.815,2,2.629,3,0.097,4,0.093,5,2.03,6,2.091,7,2.03,8,2.03,9,0.083,11,0.92,12,3.564,13,2.03,14,3.865,15,3.55,17,2.788,19,2.706,21,0.295,27,2.294,28,3.802,33,0.68,45,0.604,48,0.009,49,0.702,54,1.721,55,1.917,58,1.767,80,0.156,81,0.821,84,1.815,85,1.865,101,0.093,102,0.207,129,1.792,138,1.252,139,2.706,140,2.706,141,2.03,142,3.247,143,2.03,145,2.03,146,1.815,147,1.917,148,2.03,149,1.815,150,2.03,151,1.815,152,1.865,153,2.03,154,1.815,155,1.555,156,2.706,157,1.815,158,2.03,159,1.815,160,2.03,161,1.815,162,0.925,163,2.03,164,1.815,165,2.03,166,1.815,167,2.03,168,1.815,169,2.03,170,1.767,171,2.03,172,1.815,173,2.294,174,2.03,175,1.815,176,2.03,177,1.815,178,2.03,179,1.815,180,1.917,181,2.03,182,2.902,183,3.194,184,2.03,185,2.03,186,0.005,187,0.006,188,0.005,617,4.241,962,6.771,1085,7.254,1124,5.643,1300,5.15,1550,4.233,1551,7.191,1552,6.393,1553,4.796,1554,4.796,1555,6.393,1556,6.393,1557,6.393,1558,6.393,1559,6.393,1560,8.521,1561,6.393,1562,6.393,1563,6.393,1564,6.393,1565,6.393,1566,6.393,1567,8.715,1568,8.217,1569,8.217,1570,6.393,1571,6.393,1572,7.67,1573,6.393,1574,6.393,1575,6.393,1576,6.393,1577,6.393,1578,6.393,1579,6.393,1580,6.393,1581,6.393]],["title/modules/WelcomePageModule.html",[189,1.108,1582,3.325]],["body/modules/WelcomePageModule.html",[0,1.072,3,0.095,4,0.122,9,0.108,48,0.009,80,0.287,81,1.072,83,2.029,100,1.755,101,0.122,102,0.27,114,0.79,120,1.179,138,1.635,182,3.371,186,0.006,187,0.007,188,0.006,189,1.56,191,2.306,192,2.434,193,3.349,194,2.574,195,2.574,196,2.434,199,3.115,200,2.574,202,3.028,203,3.303,204,2.65,205,3.303,206,2.65,207,3.447,208,2.502,209,3.206,211,2.65,212,2.502,213,3,1582,6.585,1583,5.526,1584,5.526,1585,6.26,1586,6.26]],["title/classes/Write.html",[102,0.192,1046,2.562]],["body/classes/Write.html",[3,0.089,4,0.114,9,0.102,11,1.192,21,0.361,22,0.711,33,0.749,45,0.749,47,1.081,48,0.009,49,0.646,50,0.653,51,1.081,80,0.192,90,0.912,101,0.171,102,0.342,114,1,186,0.006,187,0.007,188,0.006,233,1.245,234,0.783,235,0.825,385,4.564,558,1.487,573,1.492,577,2.249,649,2.7,669,1.216,671,1.803,672,2.166,677,1.188,679,1.245,715,1.245,719,1.366,1046,5.162,1587,3.9,1588,7.287,1589,5.878,1590,5.114,1591,5.114,1592,4.834,1593,4.834]],["title/classes/WriteFailed.html",[102,0.192,1593,2.95]],["body/classes/WriteFailed.html",[3,0.092,4,0.118,9,0.105,11,1.204,21,0.373,22,0.724,33,0.791,45,0.702,48,0.009,50,0.629,80,0.198,90,0.941,101,0.172,102,0.346,114,1.014,186,0.006,187,0.007,188,0.006,233,1.284,234,0.807,235,0.85,385,4.628,558,1.089,573,1.506,669,1.254,671,1.819,677,1.225,679,1.284,715,1.284,719,1.409,1046,5.101,1587,4.022,1590,5.212,1591,5.635,1592,4.928,1593,5.327,1594,7.427]],["title/classes/WriteSuccess.html",[102,0.192,1592,2.95]],["body/classes/WriteSuccess.html",[3,0.092,4,0.118,9,0.105,11,1.204,21,0.373,22,0.724,33,0.791,45,0.702,48,0.009,50,0.629,80,0.198,90,0.941,101,0.172,102,0.346,114,1.014,186,0.006,187,0.007,188,0.006,233,1.284,234,0.807,235,0.85,385,4.628,558,1.089,573,1.506,669,1.254,671,1.819,677,1.225,679,1.284,715,1.284,719,1.409,1046,5.101,1587,4.022,1590,5.635,1591,5.212,1592,5.327,1593,4.928,1595,7.427]],["title/coverage.html",[1596,5.362]],["body/coverage.html",[0,1.431,1,0.998,3,0.063,9,0.046,10,2.328,26,0.585,32,1.132,40,1.52,43,1.224,48,0.009,50,0.19,58,1.524,84,0.998,86,1.75,91,1.307,97,1.663,102,0.391,146,0.998,149,0.998,151,0.998,154,0.998,157,0.998,159,0.998,161,0.998,164,0.998,166,0.998,168,0.998,170,0.972,172,0.998,175,0.998,177,0.998,179,0.998,182,0.998,186,0.003,187,0.004,188,0.003,214,2.124,215,1.972,216,2.328,280,2.328,327,3.332,338,2.124,342,1.972,344,2.124,346,1.972,350,1.972,352,2.124,354,1.75,355,2.124,357,1.972,359,1.972,361,2.124,363,2.124,381,1.404,382,1.404,383,1.307,384,1.404,385,1.52,405,1.972,410,1.972,412,1.972,414,1.972,418,1.972,420,1.972,428,1.972,432,1.972,434,1.972,442,2.124,443,2.328,449,1.851,487,3.816,489,2.328,490,3.816,504,2.4,506,2.124,507,3.332,526,1.52,533,4.664,540,3.231,542,2.328,544,2.124,545,2.521,575,2.328,602,2.328,616,2.328,618,2.124,631,2.328,668,1.159,670,2.7,675,1.106,676,0.794,678,0.794,680,0.794,682,0.794,683,0.794,684,1.159,685,0.794,686,0.794,687,1.187,689,1.159,690,0.794,691,0.794,692,0.794,693,0.794,694,0.794,697,0.794,699,0.794,700,0.794,702,0.794,703,0.794,704,0.794,705,0.794,707,0.794,708,0.794,710,0.794,711,0.794,713,0.794,714,0.794,716,0.757,718,0.775,720,0.757,721,0.757,722,0.775,725,0.775,726,0.775,728,0.775,729,0.757,732,0.775,733,0.775,734,0.739,735,0.775,736,0.775,737,0.775,739,0.757,742,0.775,743,0.775,744,0.775,745,0.775,746,0.757,748,0.775,749,0.775,752,2.124,778,4.419,780,2.598,781,2.489,782,2.31,783,2.289,785,4.419,788,4.593,790,1.587,791,1.587,792,1.587,793,1.587,794,1.587,795,1.52,796,1.52,797,1.459,801,1.52,803,4.055,829,2.328,830,2.328,861,1.851,862,2.328,889,2.328,894,2.328,912,2.328,972,2.328,979,2.328,980,2.124,992,1.972,993,2.328,1007,2.124,1008,2.328,1043,2.328,1044,2.124,1045,2.124,1046,2.384,1065,1.972,1066,2.328,1073,2.328,1090,2.328,1110,2.328,1120,2.328,1130,2.328,1157,2.903,1158,2.328,1183,2.328,1234,2.328,1269,2.328,1288,2.328,1409,2.328,1414,2.124,1497,2.328,1532,2.124,1533,2.328,1550,2.328,1587,4.419,1590,1.851,1591,1.851,1592,1.75,1593,1.75,1596,2.328,1597,2.637,1598,2.637,1599,2.637,1600,2.637,1601,2.637,1602,2.637,1603,2.637,1604,2.637,1605,8.703,1606,2.637,1607,6.277,1608,8.811,1609,2.637,1610,2.637,1611,5.103,1612,5.103,1613,4.136,1614,2.637,1615,2.637,1616,6.66,1617,9.161,1618,9.217,1619,2.637,1620,4.136,1621,3.093,1622,6.66,1623,2.328,1624,3.093,1625,2.328,1626,3.093,1627,2.328,1628,3.093,1629,2.328,1630,3.093,1631,2.328,1632,3.093,1633,2.328,1634,2.637,1635,2.637,1636,2.328,1637,2.328,1638,2.637,1639,2.637]],["title/dependencies.html",[192,2.08,1640,3.71]],["body/dependencies.html",[42,4.173,48,0.009,81,0.955,83,1.809,90,1.095,92,2.82,99,4.173,100,1.564,186,0.005,187,0.007,188,0.005,192,2.17,204,2.362,206,2.362,268,4.926,285,4.495,286,4.495,290,6.173,291,4.495,293,4.495,313,6.227,314,5.682,321,4.926,332,4.495,333,4.495,337,4.926,341,3.358,348,4.926,349,4.926,365,4.495,366,4.495,376,4.926,379,3.916,1641,5.58,1642,8.693,1643,5.58,1644,5.58,1645,5.58,1646,5.58,1647,5.58,1648,5.58,1649,7.054,1650,7.054,1651,5.58,1652,5.58,1653,7.054,1654,5.58,1655,5.58,1656,7.054,1657,7.054,1658,5.58,1659,5.58,1660,5.58,1661,5.58,1662,5.58,1663,5.58,1664,5.58,1665,5.58,1666,7.734,1667,8.877,1668,8.693,1669,5.58,1670,5.58,1671,5.58,1672,5.58,1673,5.58,1674,5.58,1675,5.58,1676,5.58,1677,5.58,1678,5.58,1679,5.58,1680,5.58,1681,5.58,1682,5.58,1683,5.58,1684,5.58,1685,5.58,1686,5.58,1687,5.58,1688,5.58,1689,5.58,1690,5.58,1691,5.58,1692,5.58,1693,5.58,1694,5.58,1695,5.58]],["title/miscellaneous/enumerations.html",[1696,2.233,1697,4.722]],["body/miscellaneous/enumerations.html",[21,0.427,48,0.009,186,0.007,187,0.008,188,0.007,235,1.249,1138,6.482,1696,4.174,1697,6.122,1698,6.935,1699,6.935,1700,8.048,1701,8.048,1702,8.048,1703,8.048,1704,8.048]],["title/miscellaneous/functions.html",[1696,2.233,1705,4.722]],["body/miscellaneous/functions.html",[21,0.393,47,1.627,48,0.009,49,0.972,51,1.627,186,0.006,187,0.008,188,0.006,338,6.173,344,6.173,352,6.173,355,6.173,361,6.173,363,6.173,498,7.125,573,1.613,1621,4.774,1624,4.774,1626,4.774,1628,4.774,1630,4.774,1632,4.774,1696,3.842,1705,5.635,1706,5.142,1707,5.142,1708,5.142,1709,5.142,1710,5.142,1711,5.142,1712,6.384,1713,6.384,1714,6.384,1715,6.384,1716,6.384,1717,6.384]],["title/index.html",[21,0.273,1718,3.925]],["body/index.html",[1,2.791,2,2.076,48,0.009,84,2.791,120,0.951,138,1.318,146,2.791,149,3.214,151,2.791,154,2.791,157,2.791,159,2.791,161,2.791,164,2.791,166,2.791,168,2.791,170,2.717,172,2.791,175,2.791,177,2.791,179,2.791,182,2.791,186,0.005,187,0.006,188,0.005,189,1.258,190,5.852,191,1.859,192,1.962,193,2.076,194,2.076,195,2.076,196,1.962,197,4.455,198,4.455,199,2.719,200,2.076,207,2.137,275,5.852,276,4.455,277,4.455,303,6.626,304,4.455,305,4.455,306,4.455,307,4.455,308,5.175,309,5.701,310,5.701,482,5.852,483,4.455,484,4.455,488,3.774,537,4.455,538,4.455,541,3.037,543,2.419,611,5.852,612,4.455,613,4.455,669,1.044,776,4.455,777,4.455,802,4.065,965,5.852,966,4.455,967,4.455,1038,5.852,1039,4.455,1040,4.455,1104,5.852,1105,4.455,1106,4.455,1115,5.852,1116,4.455,1117,4.455,1125,5.852,1126,4.455,1127,4.455,1141,6.234,1142,4.455,1143,4.455,1144,4.455,1145,5.175,1178,5.852,1179,4.455,1180,4.455,1263,5.852,1264,4.455,1265,4.455,1391,5.852,1392,4.455,1393,4.455,1545,5.852,1546,4.455,1547,4.455,1582,5.852,1583,4.455,1584,4.455,1718,4.455,1719,5.047,1720,5.047,1721,5.047,1722,5.047,1723,5.047,1724,5.047]],["title/modules.html",[191,2.238]],["body/modules.html",[48,0.007,186,0.006,187,0.007,188,0.006,190,4.592,191,2.262,269,8.205,275,4.592,303,4.592,308,4.309,309,4.309,310,4.309,314,7.487,482,4.592,611,4.592,965,4.592,1038,4.592,1104,4.592,1115,4.592,1125,4.592,1141,4.592,1145,4.309,1178,4.592,1263,4.592,1391,4.592,1545,4.592,1582,4.592,1725,9.295,1726,9.323,1727,7.485,1728,7.485]],["title/routes.html",[207,2.572]],["body/routes.html",[48,0.008,186,0.007,187,0.008,188,0.007,207,3.08]],["title/miscellaneous/typealiases.html",[1696,2.233,1729,5.349]],["body/miscellaneous/typealiases.html",[21,0.346,32,1.539,48,0.009,50,0.405,186,0.006,187,0.007,188,0.006,544,4.528,545,2.849,573,1.629,574,6.255,618,4.528,630,6.255,668,1.576,670,1.653,675,1.503,684,1.576,687,1.613,689,1.576,716,1.613,718,1.653,720,1.613,721,1.613,722,1.653,725,1.653,726,1.653,728,1.653,729,1.613,732,1.653,733,1.653,734,1.576,735,1.653,736,1.653,737,1.653,739,1.613,742,1.653,743,1.653,744,1.653,745,1.653,746,1.613,748,1.653,749,1.653,778,3.729,782,3.258,783,3.921,785,3.729,788,3.239,795,3.239,796,3.239,797,3.11,801,3.239,803,3.944,980,4.528,991,6.255,1045,4.528,1046,3.239,1064,6.255,1414,4.528,1495,6.255,1587,3.729,1592,3.729,1593,3.729,1621,4.203,1624,4.203,1626,4.203,1628,4.203,1630,4.203,1632,4.203,1696,3.383,1706,4.528,1707,4.528,1708,4.528,1709,4.528,1710,4.528,1711,4.528,1730,5.621,1731,5.621,1732,5.621,1733,5.621,1734,5.621,1735,5.621,1736,4.962,1737,4.962,1738,4.962,1739,4.962,1740,4.962,1741,4.962,1742,5.621]],["title/miscellaneous/variables.html",[1696,2.233,1743,4.722]],["body/miscellaneous/variables.html",[3,0.093,21,0.179,26,1.984,32,1.22,48,0.009,50,0.663,120,0.547,122,3.126,129,0.814,155,0.941,162,1.046,186,0.003,187,0.004,188,0.003,233,1.939,234,1.227,235,1.292,237,0.854,238,1.789,260,2.568,325,3.934,327,4.901,379,3.128,381,2.888,382,2.888,383,3.575,384,2.373,385,3.126,402,3.934,464,1.634,536,3.833,545,3.006,617,1.926,634,0.795,668,1.84,670,0.854,675,1.99,676,1.342,677,1.694,678,1.342,679,1.703,680,1.342,681,1.634,682,1.342,683,1.342,684,1.52,685,1.342,686,1.342,687,1.279,688,2.083,689,1.249,690,1.342,691,1.342,692,1.342,693,1.342,694,1.342,695,1.634,696,1.557,697,1.342,698,1.342,699,1.342,700,1.342,701,0.896,702,1.342,703,1.342,704,1.342,705,1.342,706,1.375,707,1.342,708,1.342,709,0.896,710,1.342,711,1.342,712,1.854,713,1.342,714,1.342,717,0.854,719,0.675,778,1.926,780,3.347,781,3.662,785,1.926,788,1.673,790,2.682,791,2.682,792,2.682,793,2.682,794,2.682,803,2.037,805,2.171,1046,3.783,1211,6.368,1410,2.563,1411,2.563,1412,2.563,1413,2.563,1452,3.934,1587,1.926,1590,3.128,1591,3.128,1621,2.171,1623,3.934,1624,2.171,1625,3.934,1626,2.171,1627,3.934,1628,2.171,1629,3.934,1630,2.171,1631,3.934,1632,2.171,1633,3.934,1636,2.563,1637,2.563,1696,1.747,1706,2.339,1707,2.339,1708,2.339,1709,2.339,1710,2.339,1711,2.339,1736,4.788,1737,7.876,1738,4.788,1739,3.934,1740,6.368,1741,4.788,1743,2.563,1744,2.903,1745,2.903,1746,4.457,1747,4.457,1748,4.457,1749,4.457,1750,6.928,1751,4.457,1752,4.457,1753,4.457,1754,4.457,1755,4.457,1756,4.457,1757,4.457]]],"invertedIndex":[["",{"_index":48,"title":{},"body":{"components/AccountPage.html":{},"modules/AccountPageModule.html":{},"components/AdPagePage.html":{},"modules/AdPagePageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BeforeStartPage.html":{},"modules/BeforeStartPageModule.html":{},"guards/BeforeTestGuard.html":{},"components/CatInfoModalPage.html":{},"modules/CatInfoModalPageModule.html":{},"interfaces/Category.html":{},"injectables/CategoryEffects.html":{},"injectables/CategoryService.html":{},"components/ChallengePage.html":{},"modules/ChallengePageModule.html":{},"interfaces/Config.html":{},"injectables/ConfigEffects.html":{},"injectables/DataService.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"components/EditProfileModalPage.html":{},"modules/EditProfileModalPageModule.html":{},"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"interfaces/History.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"interfaces/IAppState.html":{},"guards/InTestGuard.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"classes/LoginSuccess.html":{},"guards/OnFinishTestGuard.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"interfaces/Question.html":{},"injectables/QuestionEffects.html":{},"injectables/QuestionService.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"components/SignUpPage.html":{},"modules/SignUpPageModule.html":{},"interfaces/SysLog.html":{},"injectables/SysLogEffects.html":{},"injectables/SyslogService.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"modules/Tab3PageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TestResultPage.html":{},"modules/TestResultPageModule.html":{},"components/TestRoomPage.html":{},"modules/TestRoomPageModule.html":{},"injectables/TimeService.html":{},"components/TrainingPage.html":{},"modules/TrainingPageModule.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/VerifyEmailPage.html":{},"modules/VerifyEmailPageModule.html":{},"components/WelcomePage.html":{},"modules/WelcomePageModule.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":533,"title":{},"body":{"components/CatInfoModalPage.html":{},"injectables/CategoryEffects.html":{},"injectables/CategoryService.html":{},"injectables/ConfigEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"injectables/QuestionEffects.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"injectables/TimeService.html":{},"components/TrainingPage.html":{},"injectables/UserEffects.html":{},"coverage.html":{}}}],["0.19.5",{"_index":1641,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":1225,"title":{},"body":{"components/TestRoomPage.html":{}}}],["0.8.29",{"_index":1695,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1618,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1613,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1615,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1614,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1634,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1616,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1635,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1608,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1605,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1619,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1620,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1607,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":784,"title":{"classes/Fetch-1.html":{},"classes/FetchFailed-1.html":{},"classes/FetchSuccess-1.html":{}},"body":{"injectables/HistoryEffects.html":{},"components/TrainingPage.html":{}}}],["1.0.0",{"_index":1649,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":1647,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":1665,"title":{},"body":{"dependencies.html":{}}}],["1.3.4",{"_index":1678,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":1689,"title":{},"body":{"dependencies.html":{}}}],["1/3",{"_index":1612,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1604,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":388,"title":{},"body":{"modules/AppModule.html":{},"components/BeforeStartPage.html":{},"injectables/DataService.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{}}}],["100",{"_index":1174,"title":{},"body":{"components/TestResultPage.html":{}}}],["1000",{"_index":1286,"title":{},"body":{"injectables/TimeService.html":{}}}],["13",{"_index":1721,"title":{},"body":{"index.html":{}}}],["16",{"_index":1603,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":1720,"title":{},"body":{"index.html":{}}}],["2",{"_index":787,"title":{"classes/Fetch-2.html":{},"classes/FetchSuccess-2.html":{}},"body":{}}],["2.0.3",{"_index":1669,"title":{},"body":{"dependencies.html":{}}}],["2.0.4",{"_index":1662,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":1672,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":1663,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1676,"title":{},"body":{"dependencies.html":{}}}],["2.5.1",{"_index":1674,"title":{},"body":{"dependencies.html":{}}}],["2.6.9",{"_index":1684,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1719,"title":{},"body":{"index.html":{}}}],["2000",{"_index":946,"title":{},"body":{"components/LoginPage.html":{},"components/SignUpPage.html":{}}}],["23031998",{"_index":951,"title":{},"body":{"components/LoginPage.html":{}}}],["3",{"_index":802,"title":{"classes/Fetch-3.html":{},"classes/FetchSuccess-3.html":{}},"body":{"index.html":{}}}],["3.1.0",{"_index":1679,"title":{},"body":{"dependencies.html":{}}}],["3/10",{"_index":1602,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":1606,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1600,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1601,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":1238,"title":{},"body":{"components/TestRoomPage.html":{}}}],["33",{"_index":1611,"title":{},"body":{"coverage.html":{}}}],["35vh",{"_index":1100,"title":{},"body":{"components/Tab1Page.html":{},"components/TrainingPage.html":{}}}],["36",{"_index":1609,"title":{},"body":{"coverage.html":{}}}],["3940256099942544/5224354917",{"_index":246,"title":{},"body":{"components/AdPagePage.html":{}}}],["4.0.0",{"_index":1659,"title":{},"body":{"dependencies.html":{}}}],["4.12.0",{"_index":1686,"title":{},"body":{"dependencies.html":{}}}],["4/11",{"_index":1610,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":1599,"title":{},"body":{"coverage.html":{}}}],["46",{"_index":1722,"title":{},"body":{"index.html":{}}}],["5.0.0",{"_index":1656,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":1675,"title":{},"body":{"dependencies.html":{}}}],["5.11.0",{"_index":1653,"title":{},"body":{"dependencies.html":{}}}],["5.11.1",{"_index":1685,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":1643,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1234,"title":{},"body":{"components/TestRoomPage.html":{},"coverage.html":{}}}],["6.0.1",{"_index":1681,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":1691,"title":{},"body":{"dependencies.html":{}}}],["6.5.2",{"_index":1693,"title":{},"body":{"dependencies.html":{}}}],["67",{"_index":1724,"title":{},"body":{"index.html":{}}}],["7",{"_index":1723,"title":{},"body":{"index.html":{}}}],["7.0.1",{"_index":1670,"title":{},"body":{"dependencies.html":{}}}],["7.1.4",{"_index":1642,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":1690,"title":{},"body":{"dependencies.html":{}}}],["7.4.0",{"_index":1666,"title":{},"body":{"dependencies.html":{}}}],["772496616432",{"_index":1452,"title":{},"body":{"injectables/UserEffects.html":{},"miscellaneous/variables.html":{}}}],["9._]*/gm",{"_index":1246,"title":{},"body":{"components/TestRoomPage.html":{}}}],["9478315162108738/3608514627",{"_index":247,"title":{},"body":{"components/AdPagePage.html":{}}}],["9478315162108738/7134245604",{"_index":250,"title":{},"body":{"components/AdPagePage.html":{}}}],["9ccc9",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9ccc9.appspot.com",{"_index":402,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["9ccc9.firebaseapp.com",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9ccc9.firebaseio.com",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["__itpassportdb",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["accept",{"_index":1035,"title":{},"body":{"components/SignUpPage.html":{}}}],["account",{"_index":16,"title":{},"body":{"components/AccountPage.html":{},"components/SignUpPage.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"injectables/UserEffects.html":{}}}],["account'},{'name",{"_index":145,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["account.page",{"_index":210,"title":{},"body":{"modules/AccountPageModule.html":{}}}],["account.page.html",{"_index":20,"title":{},"body":{"components/AccountPage.html":{}}}],["account.page.scss",{"_index":18,"title":{},"body":{"components/AccountPage.html":{}}}],["account/account.module#accountpagemodule",{"_index":1151,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["accountpage",{"_index":1,"title":{"components/AccountPage.html":{}},"body":{"components/AccountPage.html":{},"modules/AccountPageModule.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{},"coverage.html":{},"index.html":{}}}],["accountpagemodule",{"_index":190,"title":{"modules/AccountPageModule.html":{}},"body":{"modules/AccountPageModule.html":{},"index.html":{},"modules.html":{}}}],["action",{"_index":573,"title":{},"body":{"injectables/CategoryEffects.html":{},"injectables/ConfigEffects.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"injectables/HistoryEffects.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"injectables/QuestionEffects.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"injectables/SysLogEffects.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserEffects.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["action.payload",{"_index":849,"title":{},"body":{"injectables/HistoryEffects.html":{},"injectables/UserEffects.html":{}}}],["action.payload.currentuser.email",{"_index":1461,"title":{},"body":{"injectables/UserEffects.html":{}}}],["action.payload.message",{"_index":1055,"title":{},"body":{"injectables/SysLogEffects.html":{}}}],["actions",{"_index":547,"title":{},"body":{"injectables/CategoryEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/QuestionEffects.html":{},"injectables/SysLogEffects.html":{},"injectables/UserEffects.html":{}}}],["actions/category.action",{"_index":567,"title":{},"body":{"injectables/CategoryEffects.html":{}}}],["actions/config.action",{"_index":627,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["actions/history.action",{"_index":860,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["actions/question.action",{"_index":990,"title":{},"body":{"injectables/QuestionEffects.html":{}}}],["actions/syslog.actions",{"_index":1063,"title":{},"body":{"injectables/SysLogEffects.html":{}}}],["actions/user.actions",{"_index":1489,"title":{},"body":{"injectables/UserEffects.html":{}}}],["activatedroute",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["activatedroutesnapshot",{"_index":497,"title":{},"body":{"guards/BeforeTestGuard.html":{},"guards/InTestGuard.html":{},"guards/OnFinishTestGuard.html":{}}}],["actual_component",{"_index":185,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["ad",{"_index":147,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"modules/AdPagePageModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["add",{"_index":1516,"title":{},"body":{"injectables/UserService.html":{}}}],["add_more_credits",{"_index":1498,"title":{},"body":{"injectables/UserService.html":{}}}],["addcredits",{"_index":1501,"title":{},"body":{"injectables/UserService.html":{}}}],["addcredits(amount",{"_index":1507,"title":{},"body":{"injectables/UserService.html":{}}}],["address",{"_index":727,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{}}}],["adid",{"_index":243,"title":{},"body":{"components/AdPagePage.html":{}}}],["admin",{"_index":1700,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["admob",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["adpagepage",{"_index":146,"title":{"components/AdPagePage.html":{}},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"modules/AdPagePageModule.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{},"coverage.html":{},"index.html":{}}}],["adpagepagemodule",{"_index":275,"title":{"modules/AdPagePageModule.html":{}},"body":{"modules/AdPagePageModule.html":{},"index.html":{},"modules.html":{}}}],["advertise",{"_index":270,"title":{},"body":{"components/AdPagePage.html":{}}}],["afauth",{"_index":52,"title":{},"body":{"components/AccountPage.html":{},"components/EditProfileModalPage.html":{},"injectables/HistoryEffects.html":{},"components/SignUpPage.html":{},"injectables/SysLogEffects.html":{},"injectables/UserEffects.html":{},"components/VerifyEmailPage.html":{}}}],["agree",{"_index":1469,"title":{},"body":{"injectables/UserEffects.html":{}}}],["agreeterm",{"_index":724,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"components/SignUpPage.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{}}}],["aizasydv48k3xnsccgxkfdtkidh9wetsxsjfaaq",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aliases",{"_index":1730,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":493,"title":{},"body":{"guards/BeforeTestGuard.html":{}}}],["allowstart",{"_index":1291,"title":{},"body":{"components/TrainingPage.html":{}}}],["amount",{"_index":740,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserService.html":{}}}],["angular/common",{"_index":204,"title":{},"body":{"modules/AccountPageModule.html":{},"modules/AdPagePageModule.html":{},"modules/BeforeStartPageModule.html":{},"modules/CatInfoModalPageModule.html":{},"modules/ChallengePageModule.html":{},"modules/EditProfileModalPageModule.html":{},"modules/LoginPageModule.html":{},"modules/SignUpPageModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"modules/TestResultPageModule.html":{},"modules/TestRoomPageModule.html":{},"modules/TrainingPageModule.html":{},"modules/VerifyEmailPageModule.html":{},"modules/WelcomePageModule.html":{},"dependencies.html":{}}}],["angular/core",{"_index":81,"title":{},"body":{"components/AccountPage.html":{},"modules/AccountPageModule.html":{},"components/AdPagePage.html":{},"modules/AdPagePageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BeforeStartPage.html":{},"modules/BeforeStartPageModule.html":{},"guards/BeforeTestGuard.html":{},"components/CatInfoModalPage.html":{},"modules/CatInfoModalPageModule.html":{},"injectables/CategoryEffects.html":{},"injectables/CategoryService.html":{},"components/ChallengePage.html":{},"modules/ChallengePageModule.html":{},"injectables/ConfigEffects.html":{},"injectables/DataService.html":{},"components/EditProfileModalPage.html":{},"modules/EditProfileModalPageModule.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"guards/InTestGuard.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"guards/OnFinishTestGuard.html":{},"injectables/QuestionEffects.html":{},"injectables/QuestionService.html":{},"components/SignUpPage.html":{},"modules/SignUpPageModule.html":{},"injectables/SysLogEffects.html":{},"injectables/SyslogService.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"modules/Tab3PageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TestResultPage.html":{},"modules/TestResultPageModule.html":{},"components/TestRoomPage.html":{},"modules/TestRoomPageModule.html":{},"injectables/TimeService.html":{},"components/TrainingPage.html":{},"modules/TrainingPageModule.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/VerifyEmailPage.html":{},"modules/VerifyEmailPageModule.html":{},"components/WelcomePage.html":{},"modules/WelcomePageModule.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/fire/auth",{"_index":82,"title":{},"body":{"components/AccountPage.html":{},"modules/AppModule.html":{},"components/EditProfileModalPage.html":{},"injectables/HistoryEffects.html":{},"components/SignUpPage.html":{},"injectables/SysLogEffects.html":{},"injectables/UserEffects.html":{},"components/VerifyEmailPage.html":{}}}],["angular/fire/database",{"_index":88,"title":{},"body":{"components/AccountPage.html":{},"modules/AppModule.html":{},"injectables/CategoryEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/QuestionEffects.html":{},"injectables/SysLogEffects.html":{},"components/TrainingPage.html":{},"injectables/UserEffects.html":{}}}],["angular/fire/storage",{"_index":326,"title":{},"body":{"modules/AppModule.html":{},"components/TrainingPage.html":{}}}],["angular/forms",{"_index":206,"title":{},"body":{"modules/AccountPageModule.html":{},"modules/AdPagePageModule.html":{},"modules/BeforeStartPageModule.html":{},"modules/CatInfoModalPageModule.html":{},"modules/ChallengePageModule.html":{},"modules/EditProfileModalPageModule.html":{},"modules/LoginPageModule.html":{},"modules/SignUpPageModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"modules/TestResultPageModule.html":{},"modules/TestRoomPageModule.html":{},"modules/TrainingPageModule.html":{},"modules/VerifyEmailPageModule.html":{},"modules/WelcomePageModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1644,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":100,"title":{},"body":{"components/AccountPage.html":{},"modules/AccountPageModule.html":{},"modules/AdPagePageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BeforeStartPage.html":{},"modules/BeforeStartPageModule.html":{},"guards/BeforeTestGuard.html":{},"components/CatInfoModalPage.html":{},"modules/CatInfoModalPageModule.html":{},"modules/ChallengePageModule.html":{},"injectables/ConfigEffects.html":{},"modules/EditProfileModalPageModule.html":{},"guards/InTestGuard.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"guards/OnFinishTestGuard.html":{},"components/SignUpPage.html":{},"modules/SignUpPageModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TestResultPage.html":{},"modules/TestResultPageModule.html":{},"components/TestRoomPage.html":{},"modules/TestRoomPageModule.html":{},"components/TrainingPage.html":{},"modules/TrainingPageModule.html":{},"injectables/UserEffects.html":{},"modules/VerifyEmailPageModule.html":{},"modules/WelcomePageModule.html":{},"dependencies.html":{}}}],["angular/router/src/utils/preactivation",{"_index":409,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["angularfireauth",{"_index":35,"title":{},"body":{"components/AccountPage.html":{},"components/EditProfileModalPage.html":{},"injectables/HistoryEffects.html":{},"components/SignUpPage.html":{},"injectables/SysLogEffects.html":{},"injectables/UserEffects.html":{},"components/VerifyEmailPage.html":{}}}],["angularfireauthmodule",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"components/EditProfileModalPage.html":{},"components/SignUpPage.html":{}}}],["angularfiredatabase",{"_index":38,"title":{},"body":{"components/AccountPage.html":{},"injectables/CategoryEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/QuestionEffects.html":{},"injectables/SysLogEffects.html":{},"components/TrainingPage.html":{},"injectables/UserEffects.html":{}}}],["angularfiredatabasemodule",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirelist",{"_index":1329,"title":{},"body":{"components/TrainingPage.html":{}}}],["angularfiremodule",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebase",{"_index":378,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestorage",{"_index":1310,"title":{},"body":{"components/TrainingPage.html":{}}}],["angularfirestoragemodule",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["animated",{"_index":1237,"title":{},"body":{"components/TestRoomPage.html":{}}}],["annonymous",{"_index":110,"title":{},"body":{"components/AccountPage.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserEffects.html":{}}}],["answers",{"_index":1186,"title":{},"body":{"components/TestRoomPage.html":{}}}],["apikey",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"injectables/DataService.html":{},"components/EditProfileModalPage.html":{},"interfaces/IAppState.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["app.component",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":282,"title":{},"body":{"components/AppComponent.html":{}}}],["app/states/reducers/user.reducer",{"_index":339,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":149,"title":{"components/AppComponent.html":{}},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{},"coverage.html":{},"index.html":{}}}],["appmodule",{"_index":303,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["approutingmodule",{"_index":308,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["area",{"_index":1568,"title":{},"body":{"components/WelcomePage.html":{}}}],["array",{"_index":521,"title":{},"body":{"components/CatInfoModalPage.html":{},"injectables/DataService.html":{},"injectables/HistoryService.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{}}}],["async",{"_index":29,"title":{},"body":{"components/AccountPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{}}}],["auth",{"_index":1494,"title":{},"body":{"injectables/UserEffects.html":{}}}],["authdomain",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":964,"title":{},"body":{"components/LoginPage.html":{}}}],["autoshowrewarded",{"_index":262,"title":{},"body":{"components/AdPagePage.html":{}}}],["available",{"_index":1728,"title":{},"body":{"modules.html":{}}}],["await",{"_index":115,"title":{},"body":{"components/AccountPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/TestRoomPage.html":{},"injectables/UserEffects.html":{}}}],["back",{"_index":274,"title":{},"body":{"components/AdPagePage.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"guards/OnFinishTestGuard.html":{},"components/SignUpPage.html":{},"components/TestResultPage.html":{}}}],["banned",{"_index":1704,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["banner",{"_index":68,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{}}}],["bar",{"_index":1658,"title":{},"body":{"dependencies.html":{}}}],["bar/ngx",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["basic",{"_index":1569,"title":{},"body":{"components/WelcomePage.html":{}}}],["before",{"_index":152,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BeforeStartPage.html":{},"modules/BeforeStartPageModule.html":{},"guards/BeforeTestGuard.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["beforestartpage",{"_index":151,"title":{"components/BeforeStartPage.html":{}},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"modules/BeforeStartPageModule.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{},"coverage.html":{},"index.html":{}}}],["beforestartpagemodule",{"_index":482,"title":{"modules/BeforeStartPageModule.html":{}},"body":{"modules/BeforeStartPageModule.html":{},"index.html":{},"modules.html":{}}}],["beforetestguard",{"_index":410,"title":{"guards/BeforeTestGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/BeforeTestGuard.html":{},"coverage.html":{}}}],["below",{"_index":1088,"title":{},"body":{"components/Tab1Page.html":{}}}],["beta.13",{"_index":1650,"title":{},"body":{"dependencies.html":{}}}],["beta.21",{"_index":1657,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":503,"title":{},"body":{"guards/BeforeTestGuard.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"guards/InTestGuard.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"guards/OnFinishTestGuard.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"components/TabsPage.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["bootstrap",{"_index":194,"title":{},"body":{"modules/AccountPageModule.html":{},"modules/AdPagePageModule.html":{},"modules/AppModule.html":{},"modules/BeforeStartPageModule.html":{},"modules/CatInfoModalPageModule.html":{},"modules/ChallengePageModule.html":{},"modules/EditProfileModalPageModule.html":{},"modules/LoginPageModule.html":{},"modules/SignUpPageModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"modules/TestResultPageModule.html":{},"modules/TestRoomPageModule.html":{},"modules/TrainingPageModule.html":{},"modules/VerifyEmailPageModule.html":{},"modules/WelcomePageModule.html":{},"index.html":{}}}],["breaks",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["browse",{"_index":1726,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["building",{"_index":1084,"title":{},"body":{"components/Tab1Page.html":{}}}],["bài",{"_index":460,"title":{},"body":{"components/BeforeStartPage.html":{}}}],["bắt",{"_index":458,"title":{},"body":{"components/BeforeStartPage.html":{}}}],["c",{"_index":71,"title":{},"body":{"components/AccountPage.html":{},"components/BeforeStartPage.html":{}}}],["c.payload.key",{"_index":1343,"title":{},"body":{"components/TrainingPage.html":{}}}],["c.payload.val",{"_index":1344,"title":{},"body":{"components/TrainingPage.html":{}}}],["ca",{"_index":244,"title":{},"body":{"components/AdPagePage.html":{}}}],["canactivate",{"_index":430,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/BeforeTestGuard.html":{},"guards/OnFinishTestGuard.html":{}}}],["canactivate(next",{"_index":496,"title":{},"body":{"guards/BeforeTestGuard.html":{},"guards/OnFinishTestGuard.html":{}}}],["candeactivate",{"_index":408,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/InTestGuard.html":{}}}],["candeactivate(component",{"_index":897,"title":{},"body":{"guards/InTestGuard.html":{}}}],["canenterbeforestart",{"_index":660,"title":{},"body":{"injectables/DataService.html":{}}}],["capacitor/android",{"_index":1646,"title":{},"body":{"dependencies.html":{}}}],["capacitor/cli",{"_index":1648,"title":{},"body":{"dependencies.html":{}}}],["capacitor/core",{"_index":1651,"title":{},"body":{"dependencies.html":{}}}],["caption",{"_index":219,"title":{},"body":{"components/AdPagePage.html":{}}}],["card",{"_index":1095,"title":{},"body":{"components/Tab1Page.html":{},"components/TrainingPage.html":{}}}],["career",{"_index":1564,"title":{},"body":{"components/WelcomePage.html":{}}}],["cat",{"_index":155,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"modules/CatInfoModalPageModule.html":{},"interfaces/Category.html":{},"injectables/CategoryEffects.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"classes/Fetch-1.html":{},"classes/FetchFailed-1.html":{},"classes/FetchSuccess-1.html":{},"components/LoginPage.html":{},"injectables/QuestionEffects.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{},"miscellaneous/variables.html":{}}}],["catcherror",{"_index":571,"title":{},"body":{"injectables/CategoryEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/SysLogEffects.html":{},"injectables/UserEffects.html":{}}}],["catcherror((err",{"_index":1443,"title":{},"body":{"injectables/UserEffects.html":{}}}],["catcherror(err",{"_index":1059,"title":{},"body":{"injectables/SysLogEffects.html":{},"injectables/UserEffects.html":{}}}],["catdescription",{"_index":510,"title":{},"body":{"components/CatInfoModalPage.html":{}}}],["categories",{"_index":554,"title":{},"body":{"injectables/CategoryEffects.html":{}}}],["category",{"_index":382,"title":{"interfaces/Category.html":{}},"body":{"modules/AppModule.html":{},"components/CatInfoModalPage.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"classes/Fetch-1.html":{},"classes/FetchFailed-1.html":{},"classes/FetchSuccess-1.html":{},"interfaces/IAppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["category.service",{"_index":878,"title":{},"body":{"injectables/HistoryService.html":{}}}],["categoryaction",{"_index":566,"title":{},"body":{"injectables/CategoryEffects.html":{},"injectables/CategoryService.html":{}}}],["categoryaction.all",{"_index":574,"title":{},"body":{"injectables/CategoryEffects.html":{},"miscellaneous/typealiases.html":{}}}],["categoryaction.fetch",{"_index":595,"title":{},"body":{"injectables/CategoryService.html":{}}}],["categoryaction.fetchfailed",{"_index":562,"title":{},"body":{"injectables/CategoryEffects.html":{}}}],["categoryeffects",{"_index":350,"title":{"injectables/CategoryEffects.html":{}},"body":{"modules/AppModule.html":{},"injectables/CategoryEffects.html":{},"coverage.html":{}}}],["categoryreducer",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["categoryreducer(state",{"_index":1712,"title":{},"body":{"miscellaneous/functions.html":{}}}],["categoryservice",{"_index":97,"title":{"injectables/CategoryService.html":{}},"body":{"components/AccountPage.html":{},"components/CatInfoModalPage.html":{},"injectables/CategoryService.html":{},"injectables/HistoryService.html":{},"components/TrainingPage.html":{},"coverage.html":{}}}],["categoryservice.getcategorytree",{"_index":885,"title":{},"body":{"injectables/HistoryService.html":{}}}],["categoryservice.getselectedcategory",{"_index":524,"title":{},"body":{"components/CatInfoModalPage.html":{}}}],["catinfomodalpage",{"_index":154,"title":{"components/CatInfoModalPage.html":{}},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"modules/CatInfoModalPageModule.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{},"coverage.html":{},"index.html":{}}}],["catinfomodalpagemodule",{"_index":309,"title":{"modules/CatInfoModalPageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatInfoModalPageModule.html":{},"index.html":{},"modules.html":{}}}],["catmatrix",{"_index":635,"title":{},"body":{"injectables/DataService.html":{}}}],["catname",{"_index":511,"title":{},"body":{"components/CatInfoModalPage.html":{}}}],["cattree",{"_index":1292,"title":{},"body":{"components/TrainingPage.html":{}}}],["challenge",{"_index":438,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChallengePage.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{}}}],["challenge'},{'name",{"_index":158,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["challenge.page",{"_index":615,"title":{},"body":{"modules/ChallengePageModule.html":{}}}],["challenge.page.html",{"_index":604,"title":{},"body":{"components/ChallengePage.html":{}}}],["challenge.page.scss",{"_index":603,"title":{},"body":{"components/ChallengePage.html":{}}}],["challenge/challenge.module#challengepagemodule",{"_index":439,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["challenge['description",{"_index":608,"title":{},"body":{"components/ChallengePage.html":{}}}],["challenge['title",{"_index":607,"title":{},"body":{"components/ChallengePage.html":{}}}],["challenge[\\'description",{"_index":610,"title":{},"body":{"components/ChallengePage.html":{}}}],["challenge[\\'title",{"_index":609,"title":{},"body":{"components/ChallengePage.html":{}}}],["challengepage",{"_index":157,"title":{"components/ChallengePage.html":{}},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"modules/ChallengePageModule.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{},"coverage.html":{},"index.html":{}}}],["challengepagemodule",{"_index":611,"title":{"modules/ChallengePageModule.html":{}},"body":{"modules/ChallengePageModule.html":{},"index.html":{},"modules.html":{}}}],["change",{"_index":1092,"title":{},"body":{"components/Tab1Page.html":{}}}],["changes.length",{"_index":1435,"title":{},"body":{"injectables/UserEffects.html":{}}}],["changes.map((value",{"_index":555,"title":{},"body":{"injectables/CategoryEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/QuestionEffects.html":{}}}],["changes.map(c",{"_index":1342,"title":{},"body":{"components/TrainingPage.html":{}}}],["check",{"_index":1086,"title":{},"body":{"components/Tab1Page.html":{},"components/VerifyEmailPage.html":{}}}],["checkterms",{"_index":1011,"title":{},"body":{"components/SignUpPage.html":{}}}],["children",{"_index":1150,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["chạy",{"_index":229,"title":{},"body":{"components/AdPagePage.html":{}}}],["class",{"_index":102,"title":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{}},"body":{"components/AccountPage.html":{},"modules/AccountPageModule.html":{},"components/AdPagePage.html":{},"modules/AdPagePageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BeforeStartPage.html":{},"modules/BeforeStartPageModule.html":{},"guards/BeforeTestGuard.html":{},"components/CatInfoModalPage.html":{},"modules/CatInfoModalPageModule.html":{},"injectables/CategoryEffects.html":{},"injectables/CategoryService.html":{},"components/ChallengePage.html":{},"modules/ChallengePageModule.html":{},"injectables/ConfigEffects.html":{},"injectables/DataService.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"components/EditProfileModalPage.html":{},"modules/EditProfileModalPageModule.html":{},"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"guards/InTestGuard.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"classes/LoginSuccess.html":{},"guards/OnFinishTestGuard.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"injectables/QuestionEffects.html":{},"injectables/QuestionService.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"components/SignUpPage.html":{},"modules/SignUpPageModule.html":{},"injectables/SysLogEffects.html":{},"injectables/SyslogService.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"modules/Tab3PageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TestResultPage.html":{},"modules/TestResultPageModule.html":{},"components/TestRoomPage.html":{},"modules/TestRoomPageModule.html":{},"injectables/TimeService.html":{},"components/TrainingPage.html":{},"modules/TrainingPageModule.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/VerifyEmailPage.html":{},"modules/VerifyEmailPageModule.html":{},"components/WelcomePage.html":{},"modules/WelcomePageModule.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{},"coverage.html":{}}}],["classes",{"_index":669,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{},"index.html":{}}}],["clearinterval(this.interval",{"_index":1287,"title":{},"body":{"injectables/TimeService.html":{}}}],["close",{"_index":513,"title":{},"body":{"components/CatInfoModalPage.html":{},"components/EditProfileModalPage.html":{}}}],["cluster_accountpagemodule",{"_index":197,"title":{},"body":{"modules/AccountPageModule.html":{},"index.html":{}}}],["cluster_accountpagemodule_declarations",{"_index":198,"title":{},"body":{"modules/AccountPageModule.html":{},"index.html":{}}}],["cluster_adpagepagemodule",{"_index":276,"title":{},"body":{"modules/AdPagePageModule.html":{},"index.html":{}}}],["cluster_adpagepagemodule_declarations",{"_index":277,"title":{},"body":{"modules/AdPagePageModule.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_beforestartpagemodule",{"_index":483,"title":{},"body":{"modules/BeforeStartPageModule.html":{},"index.html":{}}}],["cluster_beforestartpagemodule_declarations",{"_index":484,"title":{},"body":{"modules/BeforeStartPageModule.html":{},"index.html":{}}}],["cluster_catinfomodalpagemodule",{"_index":537,"title":{},"body":{"modules/CatInfoModalPageModule.html":{},"index.html":{}}}],["cluster_catinfomodalpagemodule_declarations",{"_index":538,"title":{},"body":{"modules/CatInfoModalPageModule.html":{},"index.html":{}}}],["cluster_challengepagemodule",{"_index":612,"title":{},"body":{"modules/ChallengePageModule.html":{},"index.html":{}}}],["cluster_challengepagemodule_declarations",{"_index":613,"title":{},"body":{"modules/ChallengePageModule.html":{},"index.html":{}}}],["cluster_editprofilemodalpagemodule",{"_index":776,"title":{},"body":{"modules/EditProfileModalPageModule.html":{},"index.html":{}}}],["cluster_editprofilemodalpagemodule_declarations",{"_index":777,"title":{},"body":{"modules/EditProfileModalPageModule.html":{},"index.html":{}}}],["cluster_loginpagemodule",{"_index":966,"title":{},"body":{"modules/LoginPageModule.html":{},"index.html":{}}}],["cluster_loginpagemodule_declarations",{"_index":967,"title":{},"body":{"modules/LoginPageModule.html":{},"index.html":{}}}],["cluster_signuppagemodule",{"_index":1039,"title":{},"body":{"modules/SignUpPageModule.html":{},"index.html":{}}}],["cluster_signuppagemodule_declarations",{"_index":1040,"title":{},"body":{"modules/SignUpPageModule.html":{},"index.html":{}}}],["cluster_tab1pagemodule",{"_index":1105,"title":{},"body":{"modules/Tab1PageModule.html":{},"index.html":{}}}],["cluster_tab1pagemodule_declarations",{"_index":1106,"title":{},"body":{"modules/Tab1PageModule.html":{},"index.html":{}}}],["cluster_tab2pagemodule",{"_index":1116,"title":{},"body":{"modules/Tab2PageModule.html":{},"index.html":{}}}],["cluster_tab2pagemodule_declarations",{"_index":1117,"title":{},"body":{"modules/Tab2PageModule.html":{},"index.html":{}}}],["cluster_tab3pagemodule",{"_index":1126,"title":{},"body":{"modules/Tab3PageModule.html":{},"index.html":{}}}],["cluster_tab3pagemodule_declarations",{"_index":1127,"title":{},"body":{"modules/Tab3PageModule.html":{},"index.html":{}}}],["cluster_tabspagemodule",{"_index":1142,"title":{},"body":{"modules/TabsPageModule.html":{},"index.html":{}}}],["cluster_tabspagemodule_declarations",{"_index":1143,"title":{},"body":{"modules/TabsPageModule.html":{},"index.html":{}}}],["cluster_tabspagemodule_imports",{"_index":1144,"title":{},"body":{"modules/TabsPageModule.html":{},"index.html":{}}}],["cluster_testresultpagemodule",{"_index":1179,"title":{},"body":{"modules/TestResultPageModule.html":{},"index.html":{}}}],["cluster_testresultpagemodule_declarations",{"_index":1180,"title":{},"body":{"modules/TestResultPageModule.html":{},"index.html":{}}}],["cluster_testroompagemodule",{"_index":1264,"title":{},"body":{"modules/TestRoomPageModule.html":{},"index.html":{}}}],["cluster_testroompagemodule_declarations",{"_index":1265,"title":{},"body":{"modules/TestRoomPageModule.html":{},"index.html":{}}}],["cluster_trainingpagemodule",{"_index":1392,"title":{},"body":{"modules/TrainingPageModule.html":{},"index.html":{}}}],["cluster_trainingpagemodule_declarations",{"_index":1393,"title":{},"body":{"modules/TrainingPageModule.html":{},"index.html":{}}}],["cluster_verifyemailpagemodule",{"_index":1546,"title":{},"body":{"modules/VerifyEmailPageModule.html":{},"index.html":{}}}],["cluster_verifyemailpagemodule_declarations",{"_index":1547,"title":{},"body":{"modules/VerifyEmailPageModule.html":{},"index.html":{}}}],["cluster_welcomepagemodule",{"_index":1583,"title":{},"body":{"modules/WelcomePageModule.html":{},"index.html":{}}}],["cluster_welcomepagemodule_declarations",{"_index":1584,"title":{},"body":{"modules/WelcomePageModule.html":{},"index.html":{}}}],["common",{"_index":632,"title":{},"body":{"injectables/DataService.html":{}}}],["commonmodule",{"_index":203,"title":{},"body":{"modules/AccountPageModule.html":{},"modules/AdPagePageModule.html":{},"modules/BeforeStartPageModule.html":{},"modules/CatInfoModalPageModule.html":{},"modules/ChallengePageModule.html":{},"modules/EditProfileModalPageModule.html":{},"modules/LoginPageModule.html":{},"modules/SignUpPageModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"modules/TestResultPageModule.html":{},"modules/TestRoomPageModule.html":{},"modules/TrainingPageModule.html":{},"modules/VerifyEmailPageModule.html":{},"modules/WelcomePageModule.html":{}}}],["compat",{"_index":1692,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}},"body":{"components/AccountPage.html":{},"modules/AccountPageModule.html":{},"components/AdPagePage.html":{},"modules/AdPagePageModule.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"modules/BeforeStartPageModule.html":{},"components/CatInfoModalPage.html":{},"modules/CatInfoModalPageModule.html":{},"components/ChallengePage.html":{},"modules/ChallengePageModule.html":{},"components/EditProfileModalPage.html":{},"modules/EditProfileModalPageModule.html":{},"guards/InTestGuard.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/SignUpPage.html":{},"modules/SignUpPageModule.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"modules/Tab3PageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TestResultPage.html":{},"modules/TestResultPageModule.html":{},"components/TestRoomPage.html":{},"modules/TestRoomPageModule.html":{},"components/TrainingPage.html":{},"modules/TrainingPageModule.html":{},"components/VerifyEmailPage.html":{},"modules/VerifyEmailPageModule.html":{},"components/WelcomePage.html":{},"modules/WelcomePageModule.html":{},"coverage.html":{}}}],["component_template",{"_index":143,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{},"index.html":{}}}],["concatmap",{"_index":1491,"title":{},"body":{"injectables/UserEffects.html":{}}}],["conditions",{"_index":1037,"title":{},"body":{"components/SignUpPage.html":{},"injectables/UserEffects.html":{}}}],["config",{"_index":381,"title":{"interfaces/Config.html":{}},"body":{"modules/AppModule.html":{},"interfaces/Config.html":{},"injectables/ConfigEffects.html":{},"injectables/DataService.html":{},"classes/Fetch.html":{},"classes/FetchFailed.html":{},"classes/FetchSuccess.html":{},"interfaces/IAppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configaction",{"_index":626,"title":{},"body":{"injectables/ConfigEffects.html":{},"injectables/DataService.html":{}}}],["configaction.all",{"_index":630,"title":{},"body":{"injectables/ConfigEffects.html":{},"miscellaneous/typealiases.html":{}}}],["configaction.fetch",{"_index":667,"title":{},"body":{"injectables/DataService.html":{}}}],["configaction.fetchfailed(err.message",{"_index":624,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["configeffects",{"_index":346,"title":{"injectables/ConfigEffects.html":{}},"body":{"modules/AppModule.html":{},"injectables/ConfigEffects.html":{},"coverage.html":{}}}],["configreducer",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["configreducer(state",{"_index":1713,"title":{},"body":{"miscellaneous/functions.html":{}}}],["configuration",{"_index":891,"title":{},"body":{"interfaces/IAppState.html":{}}}],["console.log(\"open",{"_index":112,"title":{},"body":{"components/AccountPage.html":{}}}],["console.log(\"sign",{"_index":119,"title":{},"body":{"components/AccountPage.html":{}}}],["console.log(categories",{"_index":560,"title":{},"body":{"injectables/CategoryEffects.html":{}}}],["console.log(changes",{"_index":1434,"title":{},"body":{"injectables/UserEffects.html":{}}}],["console.log(event['detail']['checked",{"_index":960,"title":{},"body":{"components/LoginPage.html":{}}}],["console.log(majorkeys",{"_index":1385,"title":{},"body":{"components/TrainingPage.html":{}}}],["console.log(minorkeys",{"_index":1386,"title":{},"body":{"components/TrainingPage.html":{}}}],["console.log(subkey",{"_index":1387,"title":{},"body":{"components/TrainingPage.html":{}}}],["console.log(this.questions",{"_index":1373,"title":{},"body":{"components/TrainingPage.html":{}}}],["console.log(value",{"_index":956,"title":{},"body":{"components/LoginPage.html":{}}}],["const",{"_index":114,"title":{},"body":{"components/AccountPage.html":{},"modules/AccountPageModule.html":{},"modules/AdPagePageModule.html":{},"modules/AppRoutingModule.html":{},"modules/BeforeStartPageModule.html":{},"modules/CatInfoModalPageModule.html":{},"modules/ChallengePageModule.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"modules/EditProfileModalPageModule.html":{},"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"components/SignUpPage.html":{},"modules/SignUpPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TestResultPageModule.html":{},"components/TestRoomPage.html":{},"modules/TestRoomPageModule.html":{},"components/TrainingPage.html":{},"modules/TrainingPageModule.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserEffects.html":{},"modules/VerifyEmailPageModule.html":{},"modules/WelcomePageModule.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{}}}],["constructor",{"_index":33,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"guards/BeforeTestGuard.html":{},"components/CatInfoModalPage.html":{},"injectables/CategoryEffects.html":{},"injectables/CategoryService.html":{},"components/ChallengePage.html":{},"injectables/ConfigEffects.html":{},"injectables/DataService.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"components/EditProfileModalPage.html":{},"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"guards/InTestGuard.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"classes/LoginSuccess.html":{},"guards/OnFinishTestGuard.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"injectables/QuestionEffects.html":{},"injectables/QuestionService.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"components/SignUpPage.html":{},"injectables/SysLogEffects.html":{},"injectables/SyslogService.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"injectables/TimeService.html":{},"components/TrainingPage.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{}}}],["constructor(action",{"_index":981,"title":{},"body":{"injectables/QuestionEffects.html":{}}}],["constructor(actions",{"_index":546,"title":{},"body":{"injectables/CategoryEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/SysLogEffects.html":{},"injectables/UserEffects.html":{}}}],["constructor(afauth",{"_index":34,"title":{},"body":{"components/AccountPage.html":{},"components/SignUpPage.html":{},"components/VerifyEmailPage.html":{}}}],["constructor(categoryservice",{"_index":514,"title":{},"body":{"components/CatInfoModalPage.html":{}}}],["constructor(dataservice",{"_index":448,"title":{},"body":{"components/BeforeStartPage.html":{},"guards/BeforeTestGuard.html":{},"guards/InTestGuard.html":{},"guards/OnFinishTestGuard.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{}}}],["constructor(db",{"_index":1309,"title":{},"body":{"components/TrainingPage.html":{}}}],["constructor(navparams",{"_index":755,"title":{},"body":{"components/EditProfileModalPage.html":{}}}],["constructor(payload",{"_index":672,"title":{},"body":{"classes/EditInfo.html":{},"classes/FetchFailed.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/GetInfo.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/UpdateCredit.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/Write.html":{}}}],["constructor(platform",{"_index":222,"title":{},"body":{"components/AdPagePage.html":{},"components/AppComponent.html":{}}}],["constructor(private",{"_index":103,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/BeforeStartPage.html":{},"guards/BeforeTestGuard.html":{},"components/CatInfoModalPage.html":{},"injectables/CategoryEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/DataService.html":{},"components/EditProfileModalPage.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"guards/InTestGuard.html":{},"guards/OnFinishTestGuard.html":{},"injectables/QuestionEffects.html":{},"injectables/QuestionService.html":{},"injectables/SysLogEffects.html":{},"injectables/SyslogService.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"injectables/UserEffects.html":{},"components/VerifyEmailPage.html":{}}}],["constructor(public",{"_index":715,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{}}}],["constructor(router",{"_index":919,"title":{},"body":{"components/LoginPage.html":{}}}],["constructor(store",{"_index":581,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/DataService.html":{},"injectables/HistoryService.html":{},"injectables/QuestionService.html":{},"injectables/SyslogService.html":{},"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":1135,"title":{},"body":{"components/TabsPage.html":{}}}],["content",{"_index":1054,"title":{},"body":{"injectables/SysLogEffects.html":{},"components/TestRoomPage.html":{}}}],["content.replace(raw[i",{"_index":1248,"title":{},"body":{"components/TestRoomPage.html":{}}}],["continue",{"_index":1544,"title":{},"body":{"components/VerifyEmailPage.html":{}}}],["cordova",{"_index":1667,"title":{},"body":{"dependencies.html":{}}}],["core",{"_index":1682,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":886,"title":{},"body":{"injectables/HistoryService.html":{},"components/TestRoomPage.html":{},"injectables/UserService.html":{}}}],["correctnum",{"_index":1172,"title":{},"body":{"components/TestResultPage.html":{}}}],["coverage",{"_index":1596,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1012,"title":{},"body":{"components/SignUpPage.html":{},"injectables/UserEffects.html":{}}}],["created",{"_index":1081,"title":{},"body":{"components/Tab1Page.html":{}}}],["credit",{"_index":464,"title":{},"body":{"components/BeforeStartPage.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"miscellaneous/variables.html":{}}}],["credit(s",{"_index":133,"title":{},"body":{"components/AccountPage.html":{},"injectables/UserEffects.html":{}}}],["credits",{"_index":238,"title":{},"body":{"components/AdPagePage.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["cur",{"_index":1362,"title":{},"body":{"components/TrainingPage.html":{}}}],["currentimage",{"_index":1293,"title":{},"body":{"components/TrainingPage.html":{}}}],["currentindex",{"_index":1187,"title":{},"body":{"components/TestRoomPage.html":{}}}],["currentindex+1",{"_index":1251,"title":{},"body":{"components/TestRoomPage.html":{}}}],["currentroute",{"_index":898,"title":{},"body":{"guards/InTestGuard.html":{}}}],["currentstate",{"_index":899,"title":{},"body":{"guards/InTestGuard.html":{}}}],["currentuser",{"_index":717,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"miscellaneous/variables.html":{}}}],["cáo",{"_index":66,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{}}}],["của",{"_index":59,"title":{},"body":{"components/AccountPage.html":{}}}],["data",{"_index":634,"title":{},"body":{"injectables/DataService.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"injectables/HistoryService.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["data.service",{"_index":89,"title":{},"body":{"components/AccountPage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"guards/BeforeTestGuard.html":{},"guards/InTestGuard.html":{},"components/LoginPage.html":{},"guards/OnFinishTestGuard.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["database",{"_index":1581,"title":{},"body":{"components/WelcomePage.html":{}}}],["databaseurl",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dataservice",{"_index":43,"title":{"injectables/DataService.html":{}},"body":{"components/AccountPage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"guards/BeforeTestGuard.html":{},"injectables/DataService.html":{},"guards/InTestGuard.html":{},"components/LoginPage.html":{},"guards/OnFinishTestGuard.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["date",{"_index":1051,"title":{},"body":{"injectables/SysLogEffects.html":{}}}],["date.now",{"_index":1052,"title":{},"body":{"injectables/SysLogEffects.html":{},"injectables/UserService.html":{}}}],["db",{"_index":37,"title":{},"body":{"components/AccountPage.html":{},"injectables/CategoryEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/QuestionEffects.html":{},"injectables/SysLogEffects.html":{},"components/TrainingPage.html":{},"injectables/UserEffects.html":{}}}],["declarations",{"_index":193,"title":{},"body":{"modules/AccountPageModule.html":{},"modules/AdPagePageModule.html":{},"modules/AppModule.html":{},"modules/BeforeStartPageModule.html":{},"modules/CatInfoModalPageModule.html":{},"modules/ChallengePageModule.html":{},"modules/EditProfileModalPageModule.html":{},"modules/LoginPageModule.html":{},"modules/SignUpPageModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"modules/TestResultPageModule.html":{},"modules/TestRoomPageModule.html":{},"modules/TrainingPageModule.html":{},"modules/VerifyEmailPageModule.html":{},"modules/WelcomePageModule.html":{},"index.html":{}}}],["decorators",{"_index":563,"title":{},"body":{"injectables/CategoryEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/QuestionEffects.html":{},"injectables/SysLogEffects.html":{},"components/TestRoomPage.html":{},"injectables/UserEffects.html":{}}}],["default",{"_index":234,"title":{},"body":{"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"injectables/CategoryEffects.html":{},"injectables/ConfigEffects.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"interfaces/History.html":{},"injectables/HistoryEffects.html":{},"interfaces/IAppState.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"interfaces/Question.html":{},"injectables/QuestionEffects.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"interfaces/SysLog.html":{},"injectables/SysLogEffects.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"injectables/TimeService.html":{},"components/TrainingPage.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{},"miscellaneous/variables.html":{}}}],["defaultcategory",{"_index":1623,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultconfig",{"_index":1625,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaulthistory",{"_index":1627,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultquestion",{"_index":1629,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultstate",{"_index":1633,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultsyslog",{"_index":1631,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":45,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"guards/BeforeTestGuard.html":{},"components/CatInfoModalPage.html":{},"injectables/CategoryEffects.html":{},"injectables/CategoryService.html":{},"components/ChallengePage.html":{},"injectables/ConfigEffects.html":{},"injectables/DataService.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"components/EditProfileModalPage.html":{},"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"guards/InTestGuard.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"classes/LoginSuccess.html":{},"guards/OnFinishTestGuard.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"injectables/QuestionEffects.html":{},"injectables/QuestionService.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"components/SignUpPage.html":{},"injectables/SysLogEffects.html":{},"injectables/SyslogService.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"injectables/TimeService.html":{},"components/TrainingPage.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{}}}],["delay",{"_index":628,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["deny",{"_index":973,"title":{},"body":{"guards/OnFinishTestGuard.html":{}}}],["dependencies",{"_index":192,"title":{"dependencies.html":{}},"body":{"modules/AccountPageModule.html":{},"modules/AdPagePageModule.html":{},"modules/AppModule.html":{},"modules/BeforeStartPageModule.html":{},"modules/CatInfoModalPageModule.html":{},"modules/ChallengePageModule.html":{},"modules/EditProfileModalPageModule.html":{},"modules/LoginPageModule.html":{},"modules/SignUpPageModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"modules/TestResultPageModule.html":{},"modules/TestRoomPageModule.html":{},"modules/TrainingPageModule.html":{},"modules/VerifyEmailPageModule.html":{},"modules/WelcomePageModule.html":{},"dependencies.html":{},"index.html":{}}}],["description",{"_index":491,"title":{},"body":{"guards/BeforeTestGuard.html":{},"injectables/DataService.html":{},"interfaces/IAppState.html":{},"guards/InTestGuard.html":{},"guards/OnFinishTestGuard.html":{}}}],["development",{"_index":1570,"title":{},"body":{"components/WelcomePage.html":{}}}],["device",{"_index":268,"title":{},"body":{"components/AdPagePage.html":{},"dependencies.html":{}}}],["devtools",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["directive",{"_index":141,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["directives",{"_index":184,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["dispatch",{"_index":1496,"title":{},"body":{"injectables/UserEffects.html":{}}}],["displayname",{"_index":23,"title":{},"body":{"components/AccountPage.html":{},"injectables/UserEffects.html":{}}}],["documentation",{"_index":1090,"title":{},"body":{"components/Tab1Page.html":{},"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["domains",{"_index":1565,"title":{},"body":{"components/WelcomePage.html":{}}}],["driverorder",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["duration",{"_index":945,"title":{},"body":{"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/TestRoomPage.html":{}}}],["dynamic",{"_index":1645,"title":{},"body":{"dependencies.html":{}}}],["edit",{"_index":85,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"modules/EditProfileModalPageModule.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["editinfo",{"_index":668,"title":{"classes/EditInfo.html":{}},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserEffects.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["editinfo_failed",{"_index":693,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editinfo_success",{"_index":692,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editinfofailed",{"_index":733,"title":{"classes/EditInfoFailed.html":{}},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["editinfosuccess",{"_index":732,"title":{"classes/EditInfoSuccess.html":{}},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["editor",{"_index":1701,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["editprofilemodalpage",{"_index":84,"title":{"components/EditProfileModalPage.html":{}},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"modules/EditProfileModalPageModule.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{},"coverage.html":{},"index.html":{}}}],["editprofilemodalpagemodule",{"_index":310,"title":{"modules/EditProfileModalPageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EditProfileModalPageModule.html":{},"index.html":{},"modules.html":{}}}],["effect",{"_index":564,"title":{},"body":{"injectables/CategoryEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/QuestionEffects.html":{},"injectables/SysLogEffects.html":{},"components/TestRoomPage.html":{},"injectables/UserEffects.html":{}}}],["effect({dispatch",{"_index":1472,"title":{},"body":{"injectables/UserEffects.html":{}}}],["effectsmodule",{"_index":340,"title":{},"body":{"modules/AppModule.html":{}}}],["effectsmodule.forroot([usereffects",{"_index":389,"title":{},"body":{"modules/AppModule.html":{}}}],["elapsedtime",{"_index":1270,"title":{},"body":{"injectables/TimeService.html":{}}}],["element",{"_index":140,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["email",{"_index":24,"title":{},"body":{"components/AccountPage.html":{},"modules/AppRoutingModule.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"components/SignUpPage.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/VerifyEmailPage.html":{}}}],["email'},{'name",{"_index":181,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["email.module#verifyemailpagemodule",{"_index":421,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["email.module.ts",{"_index":1548,"title":{},"body":{"modules/VerifyEmailPageModule.html":{}}}],["email.page",{"_index":1549,"title":{},"body":{"modules/VerifyEmailPageModule.html":{}}}],["email.page.html",{"_index":1535,"title":{},"body":{"components/VerifyEmailPage.html":{}}}],["email.page.scss",{"_index":1534,"title":{},"body":{"components/VerifyEmailPage.html":{}}}],["email.page.ts",{"_index":1533,"title":{},"body":{"components/VerifyEmailPage.html":{},"coverage.html":{}}}],["email.page.ts:13",{"_index":1538,"title":{},"body":{"components/VerifyEmailPage.html":{}}}],["email.page.ts:17",{"_index":1539,"title":{},"body":{"components/VerifyEmailPage.html":{}}}],["email.page.ts:9",{"_index":1537,"title":{},"body":{"components/VerifyEmailPage.html":{}}}],["email/verify",{"_index":420,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/VerifyEmailPage.html":{},"modules/VerifyEmailPageModule.html":{},"coverage.html":{}}}],["entrycomponents",{"_index":368,"title":{},"body":{"modules/AppModule.html":{}}}],["enumerations",{"_index":1697,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":327,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":1410,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":931,"title":{},"body":{"components/LoginPage.html":{}}}],["event['detail']['checked",{"_index":961,"title":{},"body":{"components/LoginPage.html":{}}}],["examination",{"_index":1566,"title":{},"body":{"components/WelcomePage.html":{}}}],["exhaustmap",{"_index":1490,"title":{},"body":{"injectables/UserEffects.html":{}}}],["expand",{"_index":1563,"title":{},"body":{"components/WelcomePage.html":{}}}],["export",{"_index":101,"title":{},"body":{"components/AccountPage.html":{},"modules/AccountPageModule.html":{},"components/AdPagePage.html":{},"modules/AdPagePageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BeforeStartPage.html":{},"modules/BeforeStartPageModule.html":{},"guards/BeforeTestGuard.html":{},"components/CatInfoModalPage.html":{},"modules/CatInfoModalPageModule.html":{},"interfaces/Category.html":{},"injectables/CategoryEffects.html":{},"injectables/CategoryService.html":{},"components/ChallengePage.html":{},"modules/ChallengePageModule.html":{},"interfaces/Config.html":{},"injectables/ConfigEffects.html":{},"injectables/DataService.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"components/EditProfileModalPage.html":{},"modules/EditProfileModalPageModule.html":{},"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"interfaces/History.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"interfaces/IAppState.html":{},"guards/InTestGuard.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"classes/LoginSuccess.html":{},"guards/OnFinishTestGuard.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"interfaces/Question.html":{},"injectables/QuestionEffects.html":{},"injectables/QuestionService.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"components/SignUpPage.html":{},"modules/SignUpPageModule.html":{},"interfaces/SysLog.html":{},"injectables/SysLogEffects.html":{},"injectables/SyslogService.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"modules/Tab3PageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TestResultPage.html":{},"modules/TestResultPageModule.html":{},"components/TestRoomPage.html":{},"modules/TestRoomPageModule.html":{},"injectables/TimeService.html":{},"components/TrainingPage.html":{},"modules/TrainingPageModule.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/VerifyEmailPage.html":{},"modules/VerifyEmailPageModule.html":{},"components/WelcomePage.html":{},"modules/WelcomePageModule.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{}}}],["exports",{"_index":196,"title":{},"body":{"modules/AccountPageModule.html":{},"modules/AdPagePageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BeforeStartPageModule.html":{},"modules/CatInfoModalPageModule.html":{},"modules/ChallengePageModule.html":{},"modules/EditProfileModalPageModule.html":{},"modules/LoginPageModule.html":{},"modules/SignUpPageModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TestResultPageModule.html":{},"modules/TestRoomPageModule.html":{},"modules/TrainingPageModule.html":{},"modules/VerifyEmailPageModule.html":{},"modules/WelcomePageModule.html":{},"index.html":{}}}],["failed",{"_index":679,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserEffects.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":122,"title":{},"body":{"components/AccountPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BeforeStartPage.html":{},"injectables/DataService.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"injectables/UserEffects.html":{},"miscellaneous/variables.html":{}}}],["features",{"_index":1085,"title":{},"body":{"components/Tab1Page.html":{},"components/WelcomePage.html":{}}}],["feedback",{"_index":1252,"title":{},"body":{"components/TestRoomPage.html":{}}}],["fetch",{"_index":545,"title":{"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{}},"body":{"injectables/CategoryEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/DataService.html":{},"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"injectables/QuestionEffects.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["fetch_failed",{"_index":781,"title":{},"body":{"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fetch_generated_log",{"_index":790,"title":{},"body":{"classes/Fetch-2.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess-2.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fetch_generated_log_success",{"_index":791,"title":{},"body":{"classes/Fetch-2.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess-2.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fetch_success",{"_index":780,"title":{},"body":{"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fetchconfig",{"_index":641,"title":{},"body":{"injectables/DataService.html":{}}}],["fetchfailed",{"_index":783,"title":{"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{}},"body":{"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["fetchgenerated",{"_index":831,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["fetchgeneratedlog",{"_index":795,"title":{"classes/FetchGeneratedLog.html":{}},"body":{"classes/Fetch-2.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess-2.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["fetchgeneratedlogsuccess",{"_index":796,"title":{"classes/FetchGeneratedLogSuccess.html":{}},"body":{"classes/Fetch-2.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess-2.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["fetchlog",{"_index":832,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["fetchsuccess",{"_index":782,"title":{"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{}},"body":{"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AccountPage.html":{},"modules/AccountPageModule.html":{},"components/AdPagePage.html":{},"modules/AdPagePageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BeforeStartPage.html":{},"modules/BeforeStartPageModule.html":{},"guards/BeforeTestGuard.html":{},"components/CatInfoModalPage.html":{},"modules/CatInfoModalPageModule.html":{},"interfaces/Category.html":{},"injectables/CategoryEffects.html":{},"injectables/CategoryService.html":{},"components/ChallengePage.html":{},"modules/ChallengePageModule.html":{},"interfaces/Config.html":{},"injectables/ConfigEffects.html":{},"injectables/DataService.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"components/EditProfileModalPage.html":{},"modules/EditProfileModalPageModule.html":{},"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"interfaces/History.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"interfaces/IAppState.html":{},"guards/InTestGuard.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"classes/LoginSuccess.html":{},"guards/OnFinishTestGuard.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"interfaces/Question.html":{},"injectables/QuestionEffects.html":{},"injectables/QuestionService.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"components/SignUpPage.html":{},"modules/SignUpPageModule.html":{},"interfaces/SysLog.html":{},"injectables/SysLogEffects.html":{},"injectables/SyslogService.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"modules/Tab3PageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TestResultPage.html":{},"modules/TestResultPageModule.html":{},"components/TestRoomPage.html":{},"modules/TestRoomPageModule.html":{},"injectables/TimeService.html":{},"components/TrainingPage.html":{},"modules/TrainingPageModule.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/VerifyEmailPage.html":{},"modules/VerifyEmailPageModule.html":{},"components/WelcomePage.html":{},"modules/WelcomePageModule.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{},"coverage.html":{}}}],["finance",{"_index":1575,"title":{},"body":{"components/WelcomePage.html":{}}}],["finish",{"_index":414,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/InTestGuard.html":{},"guards/OnFinishTestGuard.html":{},"coverage.html":{}}}],["firebase",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataService.html":{},"injectables/UserEffects.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["first",{"_index":1555,"title":{},"body":{"components/WelcomePage.html":{}}}],["flip",{"_index":1212,"title":{},"body":{"components/TestRoomPage.html":{}}}],["forgot",{"_index":695,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"miscellaneous/variables.html":{}}}],["forgot_password",{"_index":694,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forgot_password_sent_failed",{"_index":699,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forgot_password_sent_success",{"_index":697,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forgotpassword",{"_index":734,"title":{"classes/ForgotPassword.html":{}},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserEffects.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["forgotpasswordsentfailed",{"_index":736,"title":{"classes/ForgotPasswordSentFailed.html":{}},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["forgotpasswordsentsuccess",{"_index":735,"title":{"classes/ForgotPasswordSentSuccess.html":{}},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["formsmodule",{"_index":205,"title":{},"body":{"modules/AccountPageModule.html":{},"modules/AdPagePageModule.html":{},"modules/BeforeStartPageModule.html":{},"modules/CatInfoModalPageModule.html":{},"modules/ChallengePageModule.html":{},"modules/EditProfileModalPageModule.html":{},"modules/LoginPageModule.html":{},"modules/SignUpPageModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"modules/TestResultPageModule.html":{},"modules/TestRoomPageModule.html":{},"modules/TrainingPageModule.html":{},"modules/VerifyEmailPageModule.html":{},"modules/WelcomePageModule.html":{}}}],["from(this.afauth.auth.createuserwithemailandpassword(payload.email",{"_index":1466,"title":{},"body":{"injectables/UserEffects.html":{}}}],["from(this.afauth.auth.currentuser.updateprofile",{"_index":1419,"title":{},"body":{"injectables/UserEffects.html":{}}}],["from(this.afauth.auth.sendpasswordresetemail(payload.email",{"_index":1426,"title":{},"body":{"injectables/UserEffects.html":{}}}],["from(this.afauth.auth.signinwithcredential(auth.googleauthprovider.credential(gplususer",{"_index":1456,"title":{},"body":{"injectables/UserEffects.html":{}}}],["from(this.afauth.auth.signinwithemailandpassword(payload.email",{"_index":1438,"title":{},"body":{"injectables/UserEffects.html":{}}}],["from(this.db.list('syslog/').push",{"_index":1050,"title":{},"body":{"injectables/SysLogEffects.html":{}}}],["from(this.db.list('users",{"_index":1431,"title":{},"body":{"injectables/UserEffects.html":{}}}],["full",{"_index":771,"title":{},"body":{"components/EditProfileModalPage.html":{},"modules/TabsPageRoutingModule.html":{}}}],["function",{"_index":1622,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1705,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gain",{"_index":1561,"title":{},"body":{"components/WelcomePage.html":{}}}],["generated",{"_index":536,"title":{},"body":{"components/CatInfoModalPage.html":{},"classes/Fetch-2.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess-2.html":{},"interfaces/History.html":{},"injectables/HistoryEffects.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"miscellaneous/variables.html":{}}}],["generated/').snapshotchanges",{"_index":837,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["getcategorytree",{"_index":578,"title":{},"body":{"injectables/CategoryService.html":{}}}],["getcategorytree(initleaf",{"_index":583,"title":{},"body":{"injectables/CategoryService.html":{}}}],["getinfo",{"_index":689,"title":{"classes/GetInfo.html":{}},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserEffects.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["getinfo_failed",{"_index":691,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getinfo_success",{"_index":690,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getinfofailed",{"_index":729,"title":{"classes/GetInfoFailed.html":{}},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserEffects.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getinfosuccess",{"_index":728,"title":{"classes/GetInfoSuccess.html":{}},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getpaytype",{"_index":1502,"title":{},"body":{"injectables/UserService.html":{}}}],["getquestionforfe",{"_index":1302,"title":{},"body":{"components/TrainingPage.html":{}}}],["getquestionforfe(major",{"_index":1312,"title":{},"body":{"components/TrainingPage.html":{}}}],["getquestionforip",{"_index":1303,"title":{},"body":{"components/TrainingPage.html":{}}}],["getquestionforip(major",{"_index":1314,"title":{},"body":{"components/TrainingPage.html":{}}}],["getrole",{"_index":1503,"title":{},"body":{"injectables/UserService.html":{}}}],["getselectedcategory",{"_index":579,"title":{},"body":{"injectables/CategoryService.html":{}}}],["getsubcatpercent",{"_index":863,"title":{},"body":{"injectables/HistoryService.html":{}}}],["getsubcatpercent(subcatid",{"_index":867,"title":{},"body":{"injectables/HistoryService.html":{}}}],["gettime",{"_index":1272,"title":{},"body":{"injectables/TimeService.html":{}}}],["gfm",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["givereward",{"_index":220,"title":{},"body":{"components/AdPagePage.html":{}}}],["global",{"_index":633,"title":{},"body":{"injectables/DataService.html":{}}}],["go",{"_index":974,"title":{},"body":{"guards/OnFinishTestGuard.html":{}}}],["goback",{"_index":447,"title":{},"body":{"components/BeforeStartPage.html":{},"components/TestResultPage.html":{}}}],["google",{"_index":681,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"miscellaneous/variables.html":{}}}],["googleplus",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["gotten",{"_index":273,"title":{},"body":{"components/AdPagePage.html":{}}}],["gplus",{"_index":1415,"title":{},"body":{"injectables/UserEffects.html":{}}}],["gplususer",{"_index":1449,"title":{},"body":{"injectables/UserEffects.html":{}}}],["graph",{"_index":1727,"title":{},"body":{"modules.html":{}}}],["gs://itpassport",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["guard",{"_index":487,"title":{"guards/BeforeTestGuard.html":{},"guards/InTestGuard.html":{},"guards/OnFinishTestGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":488,"title":{},"body":{"guards/BeforeTestGuard.html":{},"guards/InTestGuard.html":{},"guards/OnFinishTestGuard.html":{},"index.html":{}}}],["guards/before",{"_index":411,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guards/in",{"_index":406,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guards/on",{"_index":413,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["hardwarebackbutton",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["haserror",{"_index":1413,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":1099,"title":{},"body":{"components/Tab1Page.html":{},"components/TrainingPage.html":{}}}],["hidden",{"_index":1102,"title":{},"body":{"components/Tab1Page.html":{},"components/TrainingPage.html":{}}}],["history",{"_index":383,"title":{"interfaces/History.html":{}},"body":{"modules/AppModule.html":{},"classes/Fetch-2.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess-2.html":{},"interfaces/History.html":{},"injectables/HistoryService.html":{},"interfaces/IAppState.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["history.service",{"_index":1522,"title":{},"body":{"injectables/UserService.html":{}}}],["historyaction",{"_index":859,"title":{},"body":{"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{}}}],["historyaction.all",{"_index":1742,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["historyaction.fetch",{"_index":881,"title":{},"body":{"injectables/HistoryService.html":{}}}],["historyaction.fetchgeneratedlog",{"_index":883,"title":{},"body":{"injectables/HistoryService.html":{}}}],["historyaction.updategeneratedlog",{"_index":848,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyaction.updategeneratedlogsuccess",{"_index":857,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyeffects",{"_index":357,"title":{"injectables/HistoryEffects.html":{}},"body":{"modules/AppModule.html":{},"injectables/HistoryEffects.html":{},"coverage.html":{}}}],["historyreducer",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["historyreducer(state",{"_index":1714,"title":{},"body":{"miscellaneous/functions.html":{}}}],["historyservice",{"_index":861,"title":{"injectables/HistoryService.html":{}},"body":{"injectables/HistoryService.html":{},"components/TestRoomPage.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["html",{"_index":139,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["https://itpassport",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hướng",{"_index":62,"title":{},"body":{"components/AccountPage.html":{}}}],["i+1",{"_index":1175,"title":{},"body":{"components/TestResultPage.html":{}}}],["iappstate",{"_index":91,"title":{"interfaces/IAppState.html":{}},"body":{"components/AccountPage.html":{},"injectables/CategoryService.html":{},"injectables/DataService.html":{},"components/EditProfileModalPage.html":{},"injectables/HistoryService.html":{},"interfaces/IAppState.html":{},"components/LoginPage.html":{},"injectables/QuestionService.html":{},"components/SignUpPage.html":{},"injectables/SyslogService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["identifier",{"_index":1597,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":1247,"title":{},"body":{"components/TestRoomPage.html":{}}}],["image.link",{"_index":1249,"title":{},"body":{"components/TestRoomPage.html":{}}}],["imagelink",{"_index":636,"title":{},"body":{"injectables/DataService.html":{},"components/TrainingPage.html":{}}}],["imagemapping",{"_index":1191,"title":{},"body":{"components/TestRoomPage.html":{}}}],["img",{"_index":1097,"title":{},"body":{"components/Tab1Page.html":{},"components/TrainingPage.html":{}}}],["img__(.*)jpg/gm",{"_index":1240,"title":{},"body":{"components/TestRoomPage.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/BeforeStartPage.html":{},"guards/BeforeTestGuard.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"components/EditProfileModalPage.html":{},"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"guards/InTestGuard.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"classes/LoginSuccess.html":{},"guards/OnFinishTestGuard.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"components/SignUpPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{}}}],["import",{"_index":80,"title":{},"body":{"components/AccountPage.html":{},"modules/AccountPageModule.html":{},"components/AdPagePage.html":{},"modules/AdPagePageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BeforeStartPage.html":{},"modules/BeforeStartPageModule.html":{},"guards/BeforeTestGuard.html":{},"components/CatInfoModalPage.html":{},"modules/CatInfoModalPageModule.html":{},"injectables/CategoryEffects.html":{},"injectables/CategoryService.html":{},"components/ChallengePage.html":{},"modules/ChallengePageModule.html":{},"injectables/ConfigEffects.html":{},"injectables/DataService.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"components/EditProfileModalPage.html":{},"modules/EditProfileModalPageModule.html":{},"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"interfaces/IAppState.html":{},"guards/InTestGuard.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"classes/LoginSuccess.html":{},"guards/OnFinishTestGuard.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"injectables/QuestionEffects.html":{},"injectables/QuestionService.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"components/SignUpPage.html":{},"modules/SignUpPageModule.html":{},"injectables/SysLogEffects.html":{},"injectables/SyslogService.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"modules/Tab3PageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TestResultPage.html":{},"modules/TestResultPageModule.html":{},"components/TestRoomPage.html":{},"modules/TestRoomPageModule.html":{},"injectables/TimeService.html":{},"components/TrainingPage.html":{},"modules/TrainingPageModule.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/VerifyEmailPage.html":{},"modules/VerifyEmailPageModule.html":{},"components/WelcomePage.html":{},"modules/WelcomePageModule.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{}}}],["imports",{"_index":212,"title":{},"body":{"modules/AccountPageModule.html":{},"modules/AdPagePageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BeforeStartPageModule.html":{},"modules/CatInfoModalPageModule.html":{},"modules/ChallengePageModule.html":{},"modules/EditProfileModalPageModule.html":{},"modules/LoginPageModule.html":{},"modules/SignUpPageModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TestResultPageModule.html":{},"modules/TestRoomPageModule.html":{},"modules/TrainingPageModule.html":{},"modules/VerifyEmailPageModule.html":{},"modules/WelcomePageModule.html":{}}}],["inactivated",{"_index":1703,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["incorrect",{"_index":887,"title":{},"body":{"injectables/HistoryService.html":{},"components/TestRoomPage.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"guards/BeforeTestGuard.html":{},"components/CatInfoModalPage.html":{},"interfaces/Category.html":{},"injectables/CategoryEffects.html":{},"injectables/CategoryService.html":{},"components/ChallengePage.html":{},"interfaces/Config.html":{},"injectables/ConfigEffects.html":{},"injectables/DataService.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"components/EditProfileModalPage.html":{},"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"interfaces/History.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"interfaces/IAppState.html":{},"guards/InTestGuard.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"classes/LoginSuccess.html":{},"guards/OnFinishTestGuard.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"interfaces/Question.html":{},"injectables/QuestionEffects.html":{},"injectables/QuestionService.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"components/SignUpPage.html":{},"interfaces/SysLog.html":{},"injectables/SysLogEffects.html":{},"injectables/SyslogService.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"injectables/TimeService.html":{},"components/TrainingPage.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexeddb",{"_index":375,"title":{},"body":{"modules/AppModule.html":{}}}],["infinity",{"_index":479,"title":{},"body":{"components/BeforeStartPage.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccountPage.html":{},"modules/AccountPageModule.html":{},"components/AdPagePage.html":{},"modules/AdPagePageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BeforeStartPage.html":{},"modules/BeforeStartPageModule.html":{},"guards/BeforeTestGuard.html":{},"components/CatInfoModalPage.html":{},"modules/CatInfoModalPageModule.html":{},"interfaces/Category.html":{},"injectables/CategoryEffects.html":{},"injectables/CategoryService.html":{},"components/ChallengePage.html":{},"modules/ChallengePageModule.html":{},"interfaces/Config.html":{},"injectables/ConfigEffects.html":{},"injectables/DataService.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"components/EditProfileModalPage.html":{},"modules/EditProfileModalPageModule.html":{},"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"interfaces/History.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"interfaces/IAppState.html":{},"guards/InTestGuard.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"classes/LoginSuccess.html":{},"guards/OnFinishTestGuard.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"interfaces/Question.html":{},"injectables/QuestionEffects.html":{},"injectables/QuestionService.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"components/SignUpPage.html":{},"modules/SignUpPageModule.html":{},"interfaces/SysLog.html":{},"injectables/SysLogEffects.html":{},"injectables/SyslogService.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"modules/Tab3PageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TestResultPage.html":{},"modules/TestResultPageModule.html":{},"components/TestRoomPage.html":{},"modules/TestRoomPageModule.html":{},"injectables/TimeService.html":{},"components/TrainingPage.html":{},"modules/TrainingPageModule.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/VerifyEmailPage.html":{},"modules/VerifyEmailPageModule.html":{},"components/WelcomePage.html":{},"modules/WelcomePageModule.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["information",{"_index":129,"title":{},"body":{"components/AccountPage.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"components/EditProfileModalPage.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"interfaces/IAppState.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"components/WelcomePage.html":{},"miscellaneous/variables.html":{}}}],["init",{"_index":701,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"miscellaneous/variables.html":{}}}],["init_info",{"_index":700,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initializeapp",{"_index":284,"title":{},"body":{"components/AppComponent.html":{}}}],["initinfo",{"_index":737,"title":{"classes/InitInfo.html":{}},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["initleaf",{"_index":585,"title":{},"body":{"injectables/CategoryService.html":{}}}],["injectable",{"_index":504,"title":{"injectables/CategoryEffects.html":{},"injectables/CategoryService.html":{},"injectables/ConfigEffects.html":{},"injectables/DataService.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"injectables/QuestionEffects.html":{},"injectables/QuestionService.html":{},"injectables/SysLogEffects.html":{},"injectables/SyslogService.html":{},"injectables/TimeService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}},"body":{"guards/BeforeTestGuard.html":{},"injectables/CategoryEffects.html":{},"injectables/CategoryService.html":{},"injectables/ConfigEffects.html":{},"injectables/DataService.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"guards/InTestGuard.html":{},"guards/OnFinishTestGuard.html":{},"injectables/QuestionEffects.html":{},"injectables/QuestionService.html":{},"components/SignUpPage.html":{},"injectables/SysLogEffects.html":{},"injectables/SyslogService.html":{},"injectables/TimeService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":543,"title":{},"body":{"injectables/CategoryEffects.html":{},"injectables/CategoryService.html":{},"injectables/ConfigEffects.html":{},"injectables/DataService.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"injectables/QuestionEffects.html":{},"injectables/QuestionService.html":{},"injectables/SysLogEffects.html":{},"injectables/SyslogService.html":{},"injectables/TimeService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"index.html":{}}}],["interface",{"_index":540,"title":{"interfaces/Category.html":{},"interfaces/Config.html":{},"interfaces/History.html":{},"interfaces/IAppState.html":{},"interfaces/Question.html":{},"interfaces/SysLog.html":{},"interfaces/User.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Config.html":{},"interfaces/History.html":{},"interfaces/IAppState.html":{},"interfaces/Question.html":{},"interfaces/SysLog.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":541,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Config.html":{},"interfaces/History.html":{},"interfaces/IAppState.html":{},"interfaces/Question.html":{},"interfaces/SysLog.html":{},"interfaces/User.html":{},"index.html":{}}}],["interval",{"_index":1271,"title":{},"body":{"injectables/TimeService.html":{}}}],["intestguard",{"_index":405,"title":{"guards/InTestGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/InTestGuard.html":{},"coverage.html":{}}}],["invalid",{"_index":958,"title":{},"body":{"components/LoginPage.html":{}}}],["ion",{"_index":1096,"title":{},"body":{"components/Tab1Page.html":{},"components/TrainingPage.html":{}}}],["ionic",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/Tab1Page.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["ionic/angular",{"_index":83,"title":{},"body":{"components/AccountPage.html":{},"modules/AccountPageModule.html":{},"components/AdPagePage.html":{},"modules/AdPagePageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BeforeStartPageModule.html":{},"components/CatInfoModalPage.html":{},"modules/CatInfoModalPageModule.html":{},"modules/ChallengePageModule.html":{},"components/EditProfileModalPage.html":{},"modules/EditProfileModalPageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/SignUpPage.html":{},"modules/SignUpPageModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"modules/TestResultPageModule.html":{},"components/TestRoomPage.html":{},"modules/TestRoomPageModule.html":{},"components/TrainingPage.html":{},"modules/TrainingPageModule.html":{},"modules/VerifyEmailPageModule.html":{},"modules/WelcomePageModule.html":{},"dependencies.html":{}}}],["ionic/pro",{"_index":1661,"title":{},"body":{"dependencies.html":{}}}],["ionic/storage",{"_index":99,"title":{},"body":{"components/AccountPage.html":{},"modules/AppModule.html":{},"components/LoginPage.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":209,"title":{},"body":{"modules/AccountPageModule.html":{},"modules/AdPagePageModule.html":{},"modules/AppModule.html":{},"modules/BeforeStartPageModule.html":{},"modules/CatInfoModalPageModule.html":{},"modules/ChallengePageModule.html":{},"modules/EditProfileModalPageModule.html":{},"modules/LoginPageModule.html":{},"modules/SignUpPageModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"modules/TestResultPageModule.html":{},"modules/TestRoomPageModule.html":{},"modules/TrainingPageModule.html":{},"modules/VerifyEmailPageModule.html":{},"modules/WelcomePageModule.html":{}}}],["ionicmodule.forroot",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicroutestrategy",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicstoragemodule",{"_index":334,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicstoragemodule.forroot",{"_index":372,"title":{},"body":{"modules/AppModule.html":{}}}],["ionslides",{"_index":1214,"title":{},"body":{"components/TestRoomPage.html":{}}}],["isenoughcredit",{"_index":446,"title":{},"body":{"components/BeforeStartPage.html":{},"injectables/UserService.html":{}}}],["isinactivated",{"_index":1134,"title":{},"body":{"components/TabsPage.html":{}}}],["isobsoleted",{"_index":915,"title":{},"body":{"components/LoginPage.html":{}}}],["istesting",{"_index":259,"title":{},"body":{"components/AdPagePage.html":{}}}],["itpassport",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iều",{"_index":61,"title":{},"body":{"components/AccountPage.html":{}}}],["join",{"_index":1032,"title":{},"body":{"components/SignUpPage.html":{}}}],["js",{"_index":1683,"title":{},"body":{"dependencies.html":{}}}],["key",{"_index":556,"title":{},"body":{"injectables/CategoryEffects.html":{},"injectables/CategoryService.html":{},"injectables/ConfigEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/QuestionEffects.html":{},"components/TrainingPage.html":{}}}],["keyboard",{"_index":1671,"title":{},"body":{"dependencies.html":{}}}],["keys",{"_index":531,"title":{},"body":{"components/CatInfoModalPage.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{}}}],["khi",{"_index":228,"title":{},"body":{"components/AdPagePage.html":{},"components/BeforeStartPage.html":{}}}],["khoản",{"_index":455,"title":{},"body":{"components/BeforeStartPage.html":{}}}],["không",{"_index":69,"title":{},"body":{"components/AccountPage.html":{}}}],["kiettuannguyense@gmail.com",{"_index":950,"title":{},"body":{"components/LoginPage.html":{}}}],["kiểm",{"_index":461,"title":{},"body":{"components/BeforeStartPage.html":{}}}],["knowledge",{"_index":1560,"title":{},"body":{"components/WelcomePage.html":{}}}],["layout",{"_index":1093,"title":{},"body":{"components/Tab1Page.html":{}}}],["leave",{"_index":895,"title":{},"body":{"guards/InTestGuard.html":{}}}],["legal",{"_index":1576,"title":{},"body":{"components/WelcomePage.html":{}}}],["legend",{"_index":138,"title":{},"body":{"components/AccountPage.html":{},"modules/AccountPageModule.html":{},"components/AdPagePage.html":{},"modules/AdPagePageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BeforeStartPage.html":{},"modules/BeforeStartPageModule.html":{},"components/CatInfoModalPage.html":{},"modules/CatInfoModalPageModule.html":{},"components/ChallengePage.html":{},"modules/ChallengePageModule.html":{},"components/EditProfileModalPage.html":{},"modules/EditProfileModalPageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/SignUpPage.html":{},"modules/SignUpPageModule.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"modules/Tab3PageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"components/TestResultPage.html":{},"modules/TestResultPageModule.html":{},"components/TestRoomPage.html":{},"modules/TestRoomPageModule.html":{},"components/TrainingPage.html":{},"modules/TrainingPageModule.html":{},"components/VerifyEmailPage.html":{},"modules/VerifyEmailPageModule.html":{},"components/WelcomePage.html":{},"modules/WelcomePageModule.html":{},"index.html":{}}}],["link",{"_index":1367,"title":{},"body":{"components/TrainingPage.html":{}}}],["list",{"_index":805,"title":{},"body":{"classes/Fetch-3.html":{},"classes/FetchSuccess-3.html":{},"interfaces/Question.html":{},"miscellaneous/variables.html":{}}}],["literal",{"_index":649,"title":{},"body":{"injectables/DataService.html":{},"classes/EditInfo.html":{},"classes/FetchFailed.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/GetInfo.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"interfaces/SysLog.html":{},"classes/UpdateCredit.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"interfaces/User.html":{},"classes/Write.html":{}}}],["load",{"_index":70,"title":{},"body":{"components/AccountPage.html":{}}}],["loadads",{"_index":221,"title":{},"body":{"components/AdPagePage.html":{}}}],["loadchildren",{"_index":415,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["loadimageurl",{"_index":1304,"title":{},"body":{"components/TrainingPage.html":{}}}],["loadingpercent",{"_index":1294,"title":{},"body":{"components/TrainingPage.html":{}}}],["loadquestion",{"_index":1305,"title":{},"body":{"components/TrainingPage.html":{}}}],["log",{"_index":712,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/Fetch-2.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess-2.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"interfaces/History.html":{},"injectables/HistoryEffects.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"interfaces/SysLog.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["log/').snapshotchanges",{"_index":842,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["logbycat",{"_index":601,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/HistoryService.html":{}}}],["login",{"_index":675,"title":{"classes/Login.html":{}},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserEffects.html":{},"components/VerifyEmailPage.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":160,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["login.page",{"_index":969,"title":{},"body":{"modules/LoginPageModule.html":{}}}],["login.page.html",{"_index":914,"title":{},"body":{"components/LoginPage.html":{}}}],["login.page.scss",{"_index":913,"title":{},"body":{"components/LoginPage.html":{}}}],["login/login.module#loginpagemodule",{"_index":416,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["login_failed",{"_index":678,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login_g",{"_index":680,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login_g_failed",{"_index":683,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login_g_success",{"_index":682,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login_success",{"_index":676,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginfailed",{"_index":718,"title":{"classes/LoginFailed.html":{}},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["loging",{"_index":720,"title":{"classes/LoginG.html":{}},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserEffects.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["logingfailed",{"_index":722,"title":{"classes/LoginGFailed.html":{}},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["logingsuccess",{"_index":721,"title":{"classes/LoginGSuccess.html":{}},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserEffects.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["loginpage",{"_index":159,"title":{"components/LoginPage.html":{}},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{},"coverage.html":{},"index.html":{}}}],["loginpagemodule",{"_index":965,"title":{"modules/LoginPageModule.html":{}},"body":{"modules/LoginPageModule.html":{},"index.html":{},"modules.html":{}}}],["loginsuccess",{"_index":716,"title":{"classes/LoginSuccess.html":{}},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserEffects.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["loginwithgoogle",{"_index":916,"title":{},"body":{"components/LoginPage.html":{}}}],["long",{"_index":1687,"title":{},"body":{"dependencies.html":{}}}],["m",{"_index":57,"title":{},"body":{"components/AccountPage.html":{}}}],["mail",{"_index":1543,"title":{},"body":{"components/VerifyEmailPage.html":{}}}],["main",{"_index":422,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main/account",{"_index":1156,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["major",{"_index":798,"title":{},"body":{"classes/Fetch-2.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess-2.html":{},"components/TrainingPage.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{}}}],["majorcat",{"_index":599,"title":{},"body":{"injectables/CategoryService.html":{}}}],["majorcat.title",{"_index":1389,"title":{},"body":{"components/TrainingPage.html":{}}}],["majorcatlist",{"_index":1295,"title":{},"body":{"components/TrainingPage.html":{}}}],["majorcatref",{"_index":1296,"title":{},"body":{"components/TrainingPage.html":{}}}],["majorkeys",{"_index":1379,"title":{},"body":{"components/TrainingPage.html":{}}}],["management",{"_index":1567,"title":{},"body":{"components/WelcomePage.html":{}}}],["map",{"_index":569,"title":{},"body":{"injectables/CategoryEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/QuestionEffects.html":{},"injectables/SysLogEffects.html":{},"components/TrainingPage.html":{},"injectables/UserEffects.html":{}}}],["map((action",{"_index":847,"title":{},"body":{"injectables/HistoryEffects.html":{},"injectables/SysLogEffects.html":{},"injectables/UserEffects.html":{}}}],["map((changes",{"_index":553,"title":{},"body":{"injectables/CategoryEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/QuestionEffects.html":{},"injectables/UserEffects.html":{}}}],["map((credential",{"_index":1457,"title":{},"body":{"injectables/UserEffects.html":{}}}],["map(changes",{"_index":622,"title":{},"body":{"injectables/ConfigEffects.html":{},"components/TrainingPage.html":{}}}],["map(respone",{"_index":1057,"title":{},"body":{"injectables/SysLogEffects.html":{},"injectables/UserEffects.html":{}}}],["markdown",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"modules/TestRoomPageModule.html":{},"dependencies.html":{}}}],["markdownmodule",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"modules/TestRoomPageModule.html":{}}}],["markdownmodule.forchild",{"_index":1268,"title":{},"body":{"modules/TestRoomPageModule.html":{}}}],["markdownmodule.forroot",{"_index":390,"title":{},"body":{"modules/AppModule.html":{}}}],["markedoptions",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":187,"title":{},"body":{"components/AccountPage.html":{},"modules/AccountPageModule.html":{},"components/AdPagePage.html":{},"modules/AdPagePageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BeforeStartPage.html":{},"modules/BeforeStartPageModule.html":{},"guards/BeforeTestGuard.html":{},"components/CatInfoModalPage.html":{},"modules/CatInfoModalPageModule.html":{},"interfaces/Category.html":{},"injectables/CategoryEffects.html":{},"injectables/CategoryService.html":{},"components/ChallengePage.html":{},"modules/ChallengePageModule.html":{},"interfaces/Config.html":{},"injectables/ConfigEffects.html":{},"injectables/DataService.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"components/EditProfileModalPage.html":{},"modules/EditProfileModalPageModule.html":{},"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"interfaces/History.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"interfaces/IAppState.html":{},"guards/InTestGuard.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"classes/LoginSuccess.html":{},"guards/OnFinishTestGuard.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"interfaces/Question.html":{},"injectables/QuestionEffects.html":{},"injectables/QuestionService.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"components/SignUpPage.html":{},"modules/SignUpPageModule.html":{},"interfaces/SysLog.html":{},"injectables/SysLogEffects.html":{},"injectables/SyslogService.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"modules/Tab3PageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TestResultPage.html":{},"modules/TestResultPageModule.html":{},"components/TestRoomPage.html":{},"modules/TestRoomPageModule.html":{},"injectables/TimeService.html":{},"components/TrainingPage.html":{},"modules/TrainingPageModule.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/VerifyEmailPage.html":{},"modules/VerifyEmailPageModule.html":{},"components/WelcomePage.html":{},"modules/WelcomePageModule.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.random",{"_index":1224,"title":{},"body":{"components/TestRoomPage.html":{}}}],["max",{"_index":1098,"title":{},"body":{"components/Tab1Page.html":{},"components/TrainingPage.html":{}}}],["maxage",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["maximage",{"_index":1297,"title":{},"body":{"components/TrainingPage.html":{}}}],["maximum_question",{"_index":657,"title":{},"body":{"injectables/DataService.html":{}}}],["mergemap",{"_index":570,"title":{},"body":{"injectables/CategoryEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/SysLogEffects.html":{},"injectables/UserEffects.html":{}}}],["mergemap((payload",{"_index":1418,"title":{},"body":{"injectables/UserEffects.html":{}}}],["mergemap(async",{"_index":1448,"title":{},"body":{"injectables/UserEffects.html":{}}}],["message",{"_index":719,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/Fetch.html":{},"classes/FetchFailed.html":{},"classes/FetchSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"components/SignUpPage.html":{},"injectables/SyslogService.html":{},"components/TestRoomPage.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{},"miscellaneous/variables.html":{}}}],["messagingsenderid",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["methodology",{"_index":1574,"title":{},"body":{"components/WelcomePage.html":{}}}],["methods",{"_index":27,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"guards/BeforeTestGuard.html":{},"components/CatInfoModalPage.html":{},"injectables/CategoryService.html":{},"components/ChallengePage.html":{},"injectables/DataService.html":{},"components/EditProfileModalPage.html":{},"injectables/HistoryService.html":{},"guards/InTestGuard.html":{},"components/LoginPage.html":{},"guards/OnFinishTestGuard.html":{},"components/SignUpPage.html":{},"injectables/SyslogService.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"injectables/TimeService.html":{},"components/TrainingPage.html":{},"injectables/UserService.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["minor",{"_index":799,"title":{},"body":{"classes/Fetch-2.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess-2.html":{},"components/TrainingPage.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{}}}],["minorcat.title",{"_index":1390,"title":{},"body":{"components/TrainingPage.html":{}}}],["minorcatlist",{"_index":1298,"title":{},"body":{"components/TrainingPage.html":{}}}],["minorcatref",{"_index":1299,"title":{},"body":{"components/TrainingPage.html":{}}}],["minorkeys",{"_index":1381,"title":{},"body":{"components/TrainingPage.html":{}}}],["miscellaneous",{"_index":1696,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":113,"title":{},"body":{"components/AccountPage.html":{},"modules/AppRoutingModule.html":{},"components/CatInfoModalPage.html":{},"components/EditProfileModalPage.html":{}}}],["modal'},{'name",{"_index":156,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["modal.module",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["modal.module#catinfomodalpagemodule",{"_index":436,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modal.module#editprofilemodalpagemodule",{"_index":424,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modal.module.ts",{"_index":539,"title":{},"body":{"modules/CatInfoModalPageModule.html":{},"modules/EditProfileModalPageModule.html":{}}}],["modal.page",{"_index":87,"title":{},"body":{"components/AccountPage.html":{},"modules/CatInfoModalPageModule.html":{},"modules/EditProfileModalPageModule.html":{},"components/TrainingPage.html":{}}}],["modal.page.html",{"_index":509,"title":{},"body":{"components/CatInfoModalPage.html":{},"components/EditProfileModalPage.html":{}}}],["modal.page.scss",{"_index":508,"title":{},"body":{"components/CatInfoModalPage.html":{},"components/EditProfileModalPage.html":{}}}],["modal.page.ts",{"_index":507,"title":{},"body":{"components/CatInfoModalPage.html":{},"components/EditProfileModalPage.html":{},"coverage.html":{}}}],["modal.page.ts:13",{"_index":520,"title":{},"body":{"components/CatInfoModalPage.html":{}}}],["modal.page.ts:14",{"_index":519,"title":{},"body":{"components/CatInfoModalPage.html":{}}}],["modal.page.ts:15",{"_index":522,"title":{},"body":{"components/CatInfoModalPage.html":{},"components/EditProfileModalPage.html":{}}}],["modal.page.ts:17",{"_index":516,"title":{},"body":{"components/CatInfoModalPage.html":{}}}],["modal.page.ts:24",{"_index":757,"title":{},"body":{"components/EditProfileModalPage.html":{}}}],["modal.page.ts:31",{"_index":760,"title":{},"body":{"components/EditProfileModalPage.html":{}}}],["modal.page.ts:32",{"_index":761,"title":{},"body":{"components/EditProfileModalPage.html":{}}}],["modal.page.ts:33",{"_index":762,"title":{},"body":{"components/EditProfileModalPage.html":{}}}],["modal.page.ts:34",{"_index":518,"title":{},"body":{"components/CatInfoModalPage.html":{}}}],["modal.page.ts:35",{"_index":758,"title":{},"body":{"components/EditProfileModalPage.html":{}}}],["modal.page.ts:37",{"_index":517,"title":{},"body":{"components/CatInfoModalPage.html":{}}}],["modal.page.ts:40",{"_index":759,"title":{},"body":{"components/EditProfileModalPage.html":{}}}],["modal.present",{"_index":118,"title":{},"body":{"components/AccountPage.html":{}}}],["modal/cat",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CatInfoModalPage.html":{},"modules/CatInfoModalPageModule.html":{},"components/TrainingPage.html":{},"coverage.html":{}}}],["modal/edit",{"_index":86,"title":{},"body":{"components/AccountPage.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditProfileModalPage.html":{},"modules/EditProfileModalPageModule.html":{},"coverage.html":{}}}],["modalcontroller",{"_index":36,"title":{},"body":{"components/AccountPage.html":{},"components/CatInfoModalPage.html":{},"components/EditProfileModalPage.html":{},"components/TrainingPage.html":{}}}],["modalctrl",{"_index":515,"title":{},"body":{"components/CatInfoModalPage.html":{}}}],["models/user.model",{"_index":1492,"title":{},"body":{"injectables/UserEffects.html":{}}}],["module",{"_index":189,"title":{"modules/AccountPageModule.html":{},"modules/AdPagePageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BeforeStartPageModule.html":{},"modules/CatInfoModalPageModule.html":{},"modules/ChallengePageModule.html":{},"modules/EditProfileModalPageModule.html":{},"modules/LoginPageModule.html":{},"modules/SignUpPageModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TestResultPageModule.html":{},"modules/TestRoomPageModule.html":{},"modules/TrainingPageModule.html":{},"modules/VerifyEmailPageModule.html":{},"modules/WelcomePageModule.html":{}},"body":{"modules/AccountPageModule.html":{},"modules/AdPagePageModule.html":{},"modules/AppModule.html":{},"modules/BeforeStartPageModule.html":{},"modules/CatInfoModalPageModule.html":{},"modules/ChallengePageModule.html":{},"modules/EditProfileModalPageModule.html":{},"modules/LoginPageModule.html":{},"modules/SignUpPageModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"modules/TestResultPageModule.html":{},"modules/TestRoomPageModule.html":{},"modules/TrainingPageModule.html":{},"modules/VerifyEmailPageModule.html":{},"modules/WelcomePageModule.html":{},"index.html":{}}}],["modules",{"_index":191,"title":{"modules.html":{}},"body":{"modules/AccountPageModule.html":{},"modules/AdPagePageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BeforeStartPageModule.html":{},"modules/CatInfoModalPageModule.html":{},"modules/ChallengePageModule.html":{},"modules/EditProfileModalPageModule.html":{},"modules/LoginPageModule.html":{},"modules/SignUpPageModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TestResultPageModule.html":{},"modules/TestRoomPageModule.html":{},"modules/TrainingPageModule.html":{},"modules/VerifyEmailPageModule.html":{},"modules/WelcomePageModule.html":{},"index.html":{},"modules.html":{}}}],["moment",{"_index":242,"title":{},"body":{"components/AdPagePage.html":{}}}],["more",{"_index":237,"title":{},"body":{"components/AdPagePage.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["n",{"_index":63,"title":{},"body":{"components/AccountPage.html":{}}}],["name",{"_index":49,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BeforeStartPage.html":{},"guards/BeforeTestGuard.html":{},"components/CatInfoModalPage.html":{},"injectables/CategoryEffects.html":{},"injectables/CategoryService.html":{},"components/ChallengePage.html":{},"injectables/ConfigEffects.html":{},"injectables/DataService.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"components/EditProfileModalPage.html":{},"classes/FetchFailed.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"guards/InTestGuard.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"classes/LoginSuccess.html":{},"guards/OnFinishTestGuard.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"injectables/QuestionEffects.html":{},"injectables/QuestionService.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"components/SignUpPage.html":{},"injectables/SysLogEffects.html":{},"injectables/SyslogService.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{},"classes/Write.html":{},"miscellaneous/functions.html":{}}}],["native/core",{"_index":1652,"title":{},"body":{"dependencies.html":{}}}],["native/google",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["native/splash",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["native/status",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["navigate",{"_index":494,"title":{},"body":{"guards/BeforeTestGuard.html":{}}}],["navparams",{"_index":756,"title":{},"body":{"components/EditProfileModalPage.html":{}}}],["navstate",{"_index":637,"title":{},"body":{"injectables/DataService.html":{}}}],["network",{"_index":1579,"title":{},"body":{"components/WelcomePage.html":{}}}],["new",{"_index":526,"title":{},"body":{"components/CatInfoModalPage.html":{},"injectables/HistoryEffects.html":{},"components/SignUpPage.html":{},"injectables/SysLogEffects.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"injectables/UserEffects.html":{},"coverage.html":{}}}],["newarr",{"_index":1355,"title":{},"body":{"components/TrainingPage.html":{}}}],["newname",{"_index":730,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"components/EditProfileModalPage.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{}}}],["newphone",{"_index":731,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"components/EditProfileModalPage.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{}}}],["next",{"_index":501,"title":{},"body":{"guards/BeforeTestGuard.html":{},"guards/OnFinishTestGuard.html":{},"components/Tab1Page.html":{}}}],["nextstate",{"_index":900,"title":{},"body":{"guards/InTestGuard.html":{}}}],["ng",{"_index":73,"title":{},"body":{"components/AccountPage.html":{}}}],["ngmodule",{"_index":202,"title":{},"body":{"modules/AccountPageModule.html":{},"modules/AdPagePageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BeforeStartPageModule.html":{},"modules/CatInfoModalPageModule.html":{},"modules/ChallengePageModule.html":{},"modules/EditProfileModalPageModule.html":{},"modules/LoginPageModule.html":{},"modules/SignUpPageModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TestResultPageModule.html":{},"modules/TestRoomPageModule.html":{},"modules/TrainingPageModule.html":{},"modules/VerifyEmailPageModule.html":{},"modules/WelcomePageModule.html":{}}}],["ngoninit",{"_index":28,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["ngrx/core",{"_index":1664,"title":{},"body":{"dependencies.html":{}}}],["ngrx/effects",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"injectables/CategoryEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/QuestionEffects.html":{},"injectables/SysLogEffects.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":90,"title":{},"body":{"components/AccountPage.html":{},"modules/AppModule.html":{},"injectables/CategoryService.html":{},"injectables/DataService.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"components/EditProfileModalPage.html":{},"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"injectables/QuestionService.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"components/SignUpPage.html":{},"injectables/SyslogService.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserService.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{},"dependencies.html":{}}}],["ngx",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"modules/TestRoomPageModule.html":{},"dependencies.html":{}}}],["nhận",{"_index":225,"title":{},"body":{"components/AdPagePage.html":{}}}],["no_more_credits",{"_index":710,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["normal",{"_index":1702,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["now",{"_index":1080,"title":{},"body":{"components/Tab1Page.html":{}}}],["number",{"_index":741,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"components/EditProfileModalPage.html":{},"classes/Fetch-2.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess-2.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"injectables/TimeService.html":{},"components/TrainingPage.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserService.html":{}}}],["numofquestion",{"_index":1188,"title":{},"body":{"components/TestRoomPage.html":{}}}],["nếu",{"_index":67,"title":{},"body":{"components/AccountPage.html":{}}}],["object",{"_index":1211,"title":{},"body":{"components/TestRoomPage.html":{},"miscellaneous/variables.html":{}}}],["object.keys(data",{"_index":888,"title":{},"body":{"injectables/HistoryService.html":{}}}],["object.keys(question",{"_index":987,"title":{},"body":{"injectables/QuestionEffects.html":{}}}],["object.keys(rawgenerated",{"_index":839,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["object.keys(rawlog",{"_index":844,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["object.keys(this.category",{"_index":532,"title":{},"body":{"components/CatInfoModalPage.html":{}}}],["object.keys(this.category['cat",{"_index":600,"title":{},"body":{"injectables/CategoryService.html":{}}}],["object.keys(this.questions",{"_index":1380,"title":{},"body":{"components/TrainingPage.html":{}}}],["object.keys(this.questions[major][minorkeys[minor",{"_index":1388,"title":{},"body":{"components/TrainingPage.html":{}}}],["object.keys(this.questions[majorkeys[major",{"_index":1382,"title":{},"body":{"components/TrainingPage.html":{}}}],["object.keys(this.questions[majorkeys[major]][minorkeys[minor",{"_index":1384,"title":{},"body":{"components/TrainingPage.html":{}}}],["objectunsubscribederror",{"_index":1337,"title":{},"body":{"components/TrainingPage.html":{}}}],["observable",{"_index":78,"title":{},"body":{"components/AccountPage.html":{},"guards/BeforeTestGuard.html":{},"injectables/CategoryEffects.html":{},"injectables/CategoryService.html":{},"injectables/ConfigEffects.html":{},"injectables/DataService.html":{},"components/EditProfileModalPage.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"guards/InTestGuard.html":{},"components/LoginPage.html":{},"guards/OnFinishTestGuard.html":{},"injectables/QuestionEffects.html":{},"injectables/QuestionService.html":{},"components/SignUpPage.html":{},"injectables/SysLogEffects.html":{},"components/TrainingPage.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["of(new",{"_index":561,"title":{},"body":{"injectables/CategoryEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/SysLogEffects.html":{},"injectables/UserEffects.html":{}}}],["offline",{"_index":1454,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype",{"_index":568,"title":{},"body":{"injectables/CategoryEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/QuestionEffects.html":{},"injectables/SysLogEffects.html":{},"injectables/UserEffects.html":{}}}],["oftype(categoryaction.fetch",{"_index":550,"title":{},"body":{"injectables/CategoryEffects.html":{}}}],["oftype(configaction.fetch",{"_index":620,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["oftype(historyaction.fetch",{"_index":841,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["oftype(historyaction.fetch_generated_log",{"_index":834,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["oftype(historyaction.update_generated_log",{"_index":846,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["oftype(questionaction.fetch",{"_index":984,"title":{},"body":{"injectables/QuestionEffects.html":{}}}],["oftype(syslogaction.write",{"_index":1048,"title":{},"body":{"injectables/SysLogEffects.html":{}}}],["oftype(useraction.editinfo",{"_index":1417,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useraction.forgot_password",{"_index":1425,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useraction.getinfo",{"_index":1430,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useraction.login",{"_index":1437,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useraction.login_g",{"_index":1447,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useraction.login_success",{"_index":1460,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useraction.signin",{"_index":1463,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useraction.signout",{"_index":1471,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useraction.update_credit",{"_index":1474,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useraction.update_log",{"_index":1483,"title":{},"body":{"injectables/UserEffects.html":{}}}],["one",{"_index":1078,"title":{},"body":{"components/Tab1Page.html":{}}}],["onfinishtestguard",{"_index":412,"title":{"guards/OnFinishTestGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/OnFinishTestGuard.html":{},"coverage.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["onselected",{"_index":1306,"title":{},"body":{"components/TrainingPage.html":{}}}],["openeditprofile",{"_index":30,"title":{},"body":{"components/AccountPage.html":{}}}],["openinfo",{"_index":1307,"title":{},"body":{"components/TrainingPage.html":{}}}],["openinfo(i",{"_index":1320,"title":{},"body":{"components/TrainingPage.html":{}}}],["opportunity",{"_index":1562,"title":{},"body":{"components/WelcomePage.html":{}}}],["optional",{"_index":51,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"guards/BeforeTestGuard.html":{},"components/CatInfoModalPage.html":{},"injectables/CategoryEffects.html":{},"injectables/CategoryService.html":{},"injectables/ConfigEffects.html":{},"injectables/DataService.html":{},"classes/EditInfo.html":{},"components/EditProfileModalPage.html":{},"classes/FetchFailed.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/GetInfo.html":{},"classes/GetInfoSuccess.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"guards/InTestGuard.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"classes/LoginSuccess.html":{},"guards/OnFinishTestGuard.html":{},"classes/PayCredits.html":{},"injectables/QuestionEffects.html":{},"injectables/QuestionService.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"components/SignUpPage.html":{},"injectables/SysLogEffects.html":{},"injectables/SyslogService.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"classes/UpdateCredit.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/VerifyEmailPage.html":{},"classes/Write.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":120,"title":{},"body":{"components/AccountPage.html":{},"modules/AccountPageModule.html":{},"modules/AdPagePageModule.html":{},"modules/AppModule.html":{},"modules/BeforeStartPageModule.html":{},"modules/CatInfoModalPageModule.html":{},"modules/ChallengePageModule.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"modules/EditProfileModalPageModule.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"modules/LoginPageModule.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"modules/SignUpPageModule.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"modules/TestResultPageModule.html":{},"modules/TestRoomPageModule.html":{},"modules/TrainingPageModule.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"modules/VerifyEmailPageModule.html":{},"modules/WelcomePageModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["overflow",{"_index":1101,"title":{},"body":{"components/Tab1Page.html":{},"components/TrainingPage.html":{}}}],["overview",{"_index":1718,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":1640,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":128,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"modules/AppRoutingModule.html":{}}}],["page'},{'name",{"_index":148,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["page.module#adpagepagemodule",{"_index":440,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["page.module.ts",{"_index":278,"title":{},"body":{"modules/AdPagePageModule.html":{}}}],["page.page",{"_index":279,"title":{},"body":{"modules/AdPagePageModule.html":{}}}],["page.page.html",{"_index":218,"title":{},"body":{"components/AdPagePage.html":{}}}],["page.page.scss",{"_index":217,"title":{},"body":{"components/AdPagePage.html":{}}}],["page.page.ts",{"_index":216,"title":{},"body":{"components/AdPagePage.html":{},"coverage.html":{}}}],["page.page.ts:13",{"_index":223,"title":{},"body":{"components/AdPagePage.html":{}}}],["page.page.ts:61",{"_index":231,"title":{},"body":{"components/AdPagePage.html":{}}}],["page.page.ts:68",{"_index":224,"title":{},"body":{"components/AdPagePage.html":{}}}],["page.page.ts:73",{"_index":232,"title":{},"body":{"components/AdPagePage.html":{}}}],["page/ad",{"_index":215,"title":{},"body":{"components/AdPagePage.html":{},"modules/AdPagePageModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["parameters",{"_index":47,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"guards/BeforeTestGuard.html":{},"components/CatInfoModalPage.html":{},"injectables/CategoryEffects.html":{},"injectables/CategoryService.html":{},"injectables/ConfigEffects.html":{},"injectables/DataService.html":{},"classes/EditInfo.html":{},"components/EditProfileModalPage.html":{},"classes/FetchFailed.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/GetInfo.html":{},"classes/GetInfoSuccess.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"guards/InTestGuard.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"classes/LoginSuccess.html":{},"guards/OnFinishTestGuard.html":{},"classes/PayCredits.html":{},"injectables/QuestionEffects.html":{},"injectables/QuestionService.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"components/SignUpPage.html":{},"injectables/SysLogEffects.html":{},"injectables/SyslogService.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"classes/UpdateCredit.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/VerifyEmailPage.html":{},"classes/Write.html":{},"miscellaneous/functions.html":{}}}],["passport",{"_index":962,"title":{},"body":{"components/LoginPage.html":{},"components/WelcomePage.html":{}}}],["password",{"_index":696,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"components/SignUpPage.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserEffects.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":211,"title":{},"body":{"modules/AccountPageModule.html":{},"modules/AdPagePageModule.html":{},"modules/AppRoutingModule.html":{},"modules/BeforeStartPageModule.html":{},"modules/CatInfoModalPageModule.html":{},"modules/ChallengePageModule.html":{},"modules/EditProfileModalPageModule.html":{},"modules/LoginPageModule.html":{},"modules/SignUpPageModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TestResultPageModule.html":{},"modules/TestRoomPageModule.html":{},"modules/TrainingPageModule.html":{},"modules/VerifyEmailPageModule.html":{},"modules/WelcomePageModule.html":{}}}],["pathmatch",{"_index":1155,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["pay",{"_index":706,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"miscellaneous/variables.html":{}}}],["pay_credits",{"_index":705,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pay_credits_success",{"_index":707,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pay_for_question",{"_index":1499,"title":{},"body":{"injectables/UserService.html":{}}}],["paycredits",{"_index":744,"title":{"classes/PayCredits.html":{}},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["paycreditssuccess",{"_index":745,"title":{"classes/PayCreditsSuccess.html":{}},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["payload",{"_index":558,"title":{},"body":{"injectables/CategoryEffects.html":{},"injectables/CategoryService.html":{},"injectables/ConfigEffects.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"injectables/HistoryService.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"injectables/QuestionEffects.html":{},"injectables/QuestionService.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserService.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{}}}],["payload.agreeterm",{"_index":1465,"title":{},"body":{"injectables/UserEffects.html":{}}}],["payload.currentuser.displayname",{"_index":765,"title":{},"body":{"components/EditProfileModalPage.html":{}}}],["payload.currentuser.phonenumber",{"_index":767,"title":{},"body":{"components/EditProfileModalPage.html":{}}}],["payload.email.replace(/\\./g",{"_index":1432,"title":{},"body":{"injectables/UserEffects.html":{}}}],["payload.major",{"_index":854,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["payload.minor",{"_index":855,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["payload.newname",{"_index":1420,"title":{},"body":{"injectables/UserEffects.html":{}}}],["payload.password",{"_index":1439,"title":{},"body":{"injectables/UserEffects.html":{}}}],["payload.registration.haserror",{"_index":1029,"title":{},"body":{"components/SignUpPage.html":{}}}],["payload.retypepassword",{"_index":1464,"title":{},"body":{"injectables/UserEffects.html":{}}}],["paytype",{"_index":1500,"title":{},"body":{"injectables/UserService.html":{}}}],["pedantic",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["percent",{"_index":1161,"title":{},"body":{"components/TestResultPage.html":{}}}],["personal",{"_index":770,"title":{},"body":{"components/EditProfileModalPage.html":{}}}],["phone",{"_index":25,"title":{},"body":{"components/AccountPage.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"components/EditProfileModalPage.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{}}}],["photourl",{"_index":1421,"title":{},"body":{"injectables/UserEffects.html":{}}}],["pipe",{"_index":1056,"title":{},"body":{"injectables/SysLogEffects.html":{},"injectables/UserEffects.html":{}}}],["platform",{"_index":39,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{}}}],["please",{"_index":240,"title":{},"body":{"components/AdPagePage.html":{},"injectables/UserEffects.html":{},"components/VerifyEmailPage.html":{}}}],["plugin",{"_index":1668,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":1654,"title":{},"body":{"dependencies.html":{}}}],["plus/ionic",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["plus/ngx",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserEffects.html":{}}}],["position",{"_index":1235,"title":{},"body":{"components/TestRoomPage.html":{}}}],["preparestart",{"_index":1308,"title":{},"body":{"components/TrainingPage.html":{}}}],["presenttoast",{"_index":917,"title":{},"body":{"components/LoginPage.html":{},"components/SignUpPage.html":{}}}],["presenttoast(message",{"_index":927,"title":{},"body":{"components/LoginPage.html":{},"components/SignUpPage.html":{}}}],["press",{"_index":1688,"title":{},"body":{"dependencies.html":{}}}],["private",{"_index":104,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"injectables/CategoryEffects.html":{},"injectables/CategoryService.html":{},"injectables/ConfigEffects.html":{},"injectables/DataService.html":{},"components/EditProfileModalPage.html":{},"injectables/HistoryEffects.html":{},"components/LoginPage.html":{},"injectables/QuestionEffects.html":{},"components/SignUpPage.html":{},"injectables/SysLogEffects.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"injectables/TimeService.html":{},"components/TrainingPage.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["production",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":58,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"modules/EditProfileModalPageModule.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"injectables/UserEffects.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{},"coverage.html":{}}}],["progress",{"_index":534,"title":{},"body":{"components/CatInfoModalPage.html":{},"components/TrainingPage.html":{}}}],["project",{"_index":1571,"title":{},"body":{"components/WelcomePage.html":{}}}],["projectid",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":502,"title":{},"body":{"guards/BeforeTestGuard.html":{},"guards/InTestGuard.html":{},"guards/OnFinishTestGuard.html":{}}}],["proof",{"_index":1558,"title":{},"body":{"components/WelcomePage.html":{}}}],["properties",{"_index":22,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"interfaces/Category.html":{},"injectables/CategoryEffects.html":{},"injectables/CategoryService.html":{},"interfaces/Config.html":{},"injectables/ConfigEffects.html":{},"injectables/DataService.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"components/EditProfileModalPage.html":{},"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"interfaces/History.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"interfaces/IAppState.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"interfaces/Question.html":{},"injectables/QuestionEffects.html":{},"injectables/QuestionService.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"components/SignUpPage.html":{},"interfaces/SysLog.html":{},"injectables/SysLogEffects.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"injectables/TimeService.html":{},"components/TrainingPage.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{}}}],["protect",{"_index":492,"title":{},"body":{"guards/BeforeTestGuard.html":{},"guards/InTestGuard.html":{},"guards/OnFinishTestGuard.html":{}}}],["provide",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":505,"title":{},"body":{"guards/BeforeTestGuard.html":{},"injectables/CategoryService.html":{},"injectables/DataService.html":{},"injectables/HistoryService.html":{},"guards/InTestGuard.html":{},"guards/OnFinishTestGuard.html":{},"injectables/QuestionService.html":{},"injectables/SyslogService.html":{},"injectables/TimeService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":195,"title":{},"body":{"modules/AccountPageModule.html":{},"modules/AdPagePageModule.html":{},"modules/AppModule.html":{},"modules/BeforeStartPageModule.html":{},"modules/CatInfoModalPageModule.html":{},"modules/ChallengePageModule.html":{},"modules/EditProfileModalPageModule.html":{},"modules/LoginPageModule.html":{},"modules/SignUpPageModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"modules/TestResultPageModule.html":{},"modules/TestRoomPageModule.html":{},"modules/TrainingPageModule.html":{},"modules/VerifyEmailPageModule.html":{},"modules/WelcomePageModule.html":{},"index.html":{}}}],["pub",{"_index":245,"title":{},"body":{"components/AdPagePage.html":{}}}],["public",{"_index":577,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/DataService.html":{},"classes/EditInfo.html":{},"classes/FetchFailed.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/GetInfo.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"components/SignUpPage.html":{},"injectables/SyslogService.html":{},"components/TabsPage.html":{},"injectables/TimeService.html":{},"classes/UpdateCredit.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"injectables/UserService.html":{},"classes/Write.html":{}}}],["publisherid",{"_index":261,"title":{},"body":{"components/AdPagePage.html":{}}}],["quay",{"_index":452,"title":{},"body":{"components/BeforeStartPage.html":{}}}],["quesgenoption",{"_index":638,"title":{},"body":{"injectables/DataService.html":{}}}],["question",{"_index":384,"title":{"interfaces/Question.html":{}},"body":{"modules/AppModule.html":{},"classes/Fetch-3.html":{},"classes/FetchSuccess-3.html":{},"interfaces/IAppState.html":{},"interfaces/Question.html":{},"injectables/QuestionEffects.html":{},"injectables/QuestionService.html":{},"components/TestRoomPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["questionaction",{"_index":989,"title":{},"body":{"injectables/QuestionEffects.html":{},"injectables/QuestionService.html":{}}}],["questionaction.all",{"_index":991,"title":{},"body":{"injectables/QuestionEffects.html":{},"miscellaneous/typealiases.html":{}}}],["questionaction.fetch",{"_index":999,"title":{},"body":{"injectables/QuestionService.html":{}}}],["questioneffects",{"_index":359,"title":{"injectables/QuestionEffects.html":{}},"body":{"modules/AppModule.html":{},"injectables/QuestionEffects.html":{},"coverage.html":{}}}],["questionid",{"_index":800,"title":{},"body":{"classes/Fetch-2.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess-2.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{}}}],["questionlist",{"_index":986,"title":{},"body":{"injectables/QuestionEffects.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{}}}],["questionlist[currentindex]['a",{"_index":1254,"title":{},"body":{"components/TestRoomPage.html":{}}}],["questionlist[currentindex]['b",{"_index":1255,"title":{},"body":{"components/TestRoomPage.html":{}}}],["questionlist[currentindex]['c",{"_index":1256,"title":{},"body":{"components/TestRoomPage.html":{}}}],["questionlist[currentindex]['d",{"_index":1257,"title":{},"body":{"components/TestRoomPage.html":{}}}],["questionlist[currentindex]['title",{"_index":1253,"title":{},"body":{"components/TestRoomPage.html":{}}}],["questionlist[currentindex][\\'a",{"_index":1259,"title":{},"body":{"components/TestRoomPage.html":{}}}],["questionlist[currentindex][\\'b",{"_index":1260,"title":{},"body":{"components/TestRoomPage.html":{}}}],["questionlist[currentindex][\\'c",{"_index":1261,"title":{},"body":{"components/TestRoomPage.html":{}}}],["questionlist[currentindex][\\'d",{"_index":1262,"title":{},"body":{"components/TestRoomPage.html":{}}}],["questionlist[currentindex][\\'title",{"_index":1258,"title":{},"body":{"components/TestRoomPage.html":{}}}],["questionreducer",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["questionreducer(state",{"_index":1715,"title":{},"body":{"miscellaneous/functions.html":{}}}],["questions",{"_index":1300,"title":{},"body":{"components/TrainingPage.html":{},"injectables/UserEffects.html":{},"components/WelcomePage.html":{}}}],["questionservice",{"_index":992,"title":{"injectables/QuestionService.html":{}},"body":{"injectables/QuestionService.html":{},"components/TrainingPage.html":{},"coverage.html":{}}}],["questlist",{"_index":1378,"title":{},"body":{"components/TrainingPage.html":{}}}],["quiz",{"_index":480,"title":{},"body":{"components/BeforeStartPage.html":{}}}],["quảng",{"_index":65,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{}}}],["raw",{"_index":623,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["raw[i].length).replace(/[^a",{"_index":1243,"title":{},"body":{"components/TestRoomPage.html":{}}}],["raw[i].slice(5",{"_index":1242,"title":{},"body":{"components/TestRoomPage.html":{}}}],["rawgenerated",{"_index":838,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["rawlog",{"_index":843,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["rc.0",{"_index":1660,"title":{},"body":{"dependencies.html":{}}}],["re",{"_index":1239,"title":{},"body":{"components/TestRoomPage.html":{},"components/VerifyEmailPage.html":{}}}],["read",{"_index":1034,"title":{},"body":{"components/SignUpPage.html":{},"injectables/UserEffects.html":{}}}],["readonly",{"_index":671,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{}}}],["ready",{"_index":477,"title":{},"body":{"components/BeforeStartPage.html":{}}}],["redirectto",{"_index":1153,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["redux",{"_index":647,"title":{},"body":{"injectables/DataService.html":{}}}],["ref",{"_index":1350,"title":{},"body":{"components/TrainingPage.html":{}}}],["ref.snapshotchanges().pipe",{"_index":1352,"title":{},"body":{"components/TrainingPage.html":{}}}],["registration",{"_index":1411,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["remove",{"_index":709,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"miscellaneous/variables.html":{}}}],["remove_credits",{"_index":708,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resend",{"_index":1536,"title":{},"body":{"components/VerifyEmailPage.html":{}}}],["reset",{"_index":200,"title":{},"body":{"modules/AccountPageModule.html":{},"modules/AdPagePageModule.html":{},"modules/AppModule.html":{},"modules/BeforeStartPageModule.html":{},"modules/CatInfoModalPageModule.html":{},"modules/ChallengePageModule.html":{},"modules/EditProfileModalPageModule.html":{},"modules/LoginPageModule.html":{},"modules/SignUpPageModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"modules/TestResultPageModule.html":{},"modules/TestRoomPageModule.html":{},"modules/TrainingPageModule.html":{},"modules/VerifyEmailPageModule.html":{},"modules/WelcomePageModule.html":{},"index.html":{}}}],["resettimer",{"_index":1273,"title":{},"body":{"injectables/TimeService.html":{}}}],["resources",{"_index":1087,"title":{},"body":{"components/Tab1Page.html":{}}}],["result",{"_index":186,"title":{},"body":{"components/AccountPage.html":{},"modules/AccountPageModule.html":{},"components/AdPagePage.html":{},"modules/AdPagePageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BeforeStartPage.html":{},"modules/BeforeStartPageModule.html":{},"guards/BeforeTestGuard.html":{},"components/CatInfoModalPage.html":{},"modules/CatInfoModalPageModule.html":{},"interfaces/Category.html":{},"injectables/CategoryEffects.html":{},"injectables/CategoryService.html":{},"components/ChallengePage.html":{},"modules/ChallengePageModule.html":{},"interfaces/Config.html":{},"injectables/ConfigEffects.html":{},"injectables/DataService.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"components/EditProfileModalPage.html":{},"modules/EditProfileModalPageModule.html":{},"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"interfaces/History.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"interfaces/IAppState.html":{},"guards/InTestGuard.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"classes/LoginSuccess.html":{},"guards/OnFinishTestGuard.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"interfaces/Question.html":{},"injectables/QuestionEffects.html":{},"injectables/QuestionService.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"components/SignUpPage.html":{},"modules/SignUpPageModule.html":{},"interfaces/SysLog.html":{},"injectables/SysLogEffects.html":{},"injectables/SyslogService.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"modules/Tab3PageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TestResultPage.html":{},"modules/TestResultPageModule.html":{},"components/TestRoomPage.html":{},"modules/TestRoomPageModule.html":{},"injectables/TimeService.html":{},"components/TrainingPage.html":{},"modules/TrainingPageModule.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/VerifyEmailPage.html":{},"modules/VerifyEmailPageModule.html":{},"components/WelcomePage.html":{},"modules/WelcomePageModule.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result'},{'name",{"_index":174,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["result.module#testresultpagemodule",{"_index":435,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["result.module.ts",{"_index":1181,"title":{},"body":{"modules/TestResultPageModule.html":{}}}],["result.page",{"_index":1182,"title":{},"body":{"modules/TestResultPageModule.html":{}}}],["result.page.html",{"_index":1160,"title":{},"body":{"components/TestResultPage.html":{}}}],["result.page.scss",{"_index":1159,"title":{},"body":{"components/TestResultPage.html":{}}}],["result.page.ts",{"_index":1158,"title":{},"body":{"components/TestResultPage.html":{},"coverage.html":{}}}],["result.page.ts:10",{"_index":1163,"title":{},"body":{"components/TestResultPage.html":{}}}],["result.page.ts:14",{"_index":1166,"title":{},"body":{"components/TestResultPage.html":{}}}],["result.page.ts:15",{"_index":1167,"title":{},"body":{"components/TestResultPage.html":{}}}],["result.page.ts:17",{"_index":1164,"title":{},"body":{"components/TestResultPage.html":{}}}],["result.page.ts:21",{"_index":1165,"title":{},"body":{"components/TestResultPage.html":{}}}],["result.question['title",{"_index":1176,"title":{},"body":{"components/TestResultPage.html":{}}}],["result.question[\\'title",{"_index":1177,"title":{},"body":{"components/TestResultPage.html":{}}}],["result/test",{"_index":434,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TestResultPage.html":{},"modules/TestResultPageModule.html":{},"coverage.html":{}}}],["resultlist",{"_index":1162,"title":{},"body":{"components/TestResultPage.html":{}}}],["results",{"_index":188,"title":{},"body":{"components/AccountPage.html":{},"modules/AccountPageModule.html":{},"components/AdPagePage.html":{},"modules/AdPagePageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BeforeStartPage.html":{},"modules/BeforeStartPageModule.html":{},"guards/BeforeTestGuard.html":{},"components/CatInfoModalPage.html":{},"modules/CatInfoModalPageModule.html":{},"interfaces/Category.html":{},"injectables/CategoryEffects.html":{},"injectables/CategoryService.html":{},"components/ChallengePage.html":{},"modules/ChallengePageModule.html":{},"interfaces/Config.html":{},"injectables/ConfigEffects.html":{},"injectables/DataService.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"components/EditProfileModalPage.html":{},"modules/EditProfileModalPageModule.html":{},"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"interfaces/History.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"interfaces/IAppState.html":{},"guards/InTestGuard.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"classes/LoginSuccess.html":{},"guards/OnFinishTestGuard.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"interfaces/Question.html":{},"injectables/QuestionEffects.html":{},"injectables/QuestionService.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"components/SignUpPage.html":{},"modules/SignUpPageModule.html":{},"interfaces/SysLog.html":{},"injectables/SysLogEffects.html":{},"injectables/SyslogService.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"modules/Tab3PageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TestResultPage.html":{},"modules/TestResultPageModule.html":{},"components/TestRoomPage.html":{},"modules/TestRoomPageModule.html":{},"injectables/TimeService.html":{},"components/TrainingPage.html":{},"modules/TrainingPageModule.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/VerifyEmailPage.html":{},"modules/VerifyEmailPageModule.html":{},"components/WelcomePage.html":{},"modules/WelcomePageModule.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":117,"title":{},"body":{"components/AccountPage.html":{},"guards/BeforeTestGuard.html":{},"injectables/CategoryService.html":{},"injectables/HistoryEffects.html":{},"guards/InTestGuard.html":{},"components/LoginPage.html":{},"guards/OnFinishTestGuard.html":{},"injectables/SysLogEffects.html":{},"components/TabsPage.html":{},"components/TestRoomPage.html":{},"injectables/TimeService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":54,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"guards/BeforeTestGuard.html":{},"components/CatInfoModalPage.html":{},"injectables/CategoryService.html":{},"components/ChallengePage.html":{},"injectables/DataService.html":{},"components/EditProfileModalPage.html":{},"injectables/HistoryService.html":{},"guards/InTestGuard.html":{},"components/LoginPage.html":{},"guards/OnFinishTestGuard.html":{},"components/SignUpPage.html":{},"injectables/SyslogService.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"injectables/TimeService.html":{},"components/TrainingPage.html":{},"injectables/UserService.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["retype",{"_index":1033,"title":{},"body":{"components/SignUpPage.html":{}}}],["retypepassword",{"_index":723,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"components/SignUpPage.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{}}}],["reward",{"_index":137,"title":{},"body":{"components/AccountPage.html":{}}}],["rewardedadid",{"_index":258,"title":{},"body":{"components/AdPagePage.html":{}}}],["room",{"_index":431,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/InTestGuard.html":{},"guards/OnFinishTestGuard.html":{},"components/TestRoomPage.html":{},"injectables/UserEffects.html":{}}}],["room'},{'name",{"_index":176,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["room.module#testroompagemodule",{"_index":433,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["room.module.ts",{"_index":1266,"title":{},"body":{"modules/TestRoomPageModule.html":{}}}],["room.page",{"_index":1267,"title":{},"body":{"modules/TestRoomPageModule.html":{}}}],["room.page.html",{"_index":1185,"title":{},"body":{"components/TestRoomPage.html":{}}}],["room.page.scss",{"_index":1184,"title":{},"body":{"components/TestRoomPage.html":{}}}],["room.page.ts",{"_index":1183,"title":{},"body":{"components/TestRoomPage.html":{},"coverage.html":{}}}],["room.page.ts:105",{"_index":1197,"title":{},"body":{"components/TestRoomPage.html":{}}}],["room.page.ts:15",{"_index":1196,"title":{},"body":{"components/TestRoomPage.html":{}}}],["room.page.ts:37",{"_index":1216,"title":{},"body":{"components/TestRoomPage.html":{}}}],["room.page.ts:39",{"_index":1213,"title":{},"body":{"components/TestRoomPage.html":{}}}],["room.page.ts:43",{"_index":1209,"title":{},"body":{"components/TestRoomPage.html":{}}}],["room.page.ts:45",{"_index":1207,"title":{},"body":{"components/TestRoomPage.html":{}}}],["room.page.ts:47",{"_index":1208,"title":{},"body":{"components/TestRoomPage.html":{}}}],["room.page.ts:49",{"_index":1210,"title":{},"body":{"components/TestRoomPage.html":{}}}],["room.page.ts:50",{"_index":1206,"title":{},"body":{"components/TestRoomPage.html":{}}}],["room.page.ts:52",{"_index":1198,"title":{},"body":{"components/TestRoomPage.html":{}}}],["room.page.ts:56",{"_index":1204,"title":{},"body":{"components/TestRoomPage.html":{}}}],["room.page.ts:62",{"_index":1205,"title":{},"body":{"components/TestRoomPage.html":{}}}],["room.page.ts:88",{"_index":1200,"title":{},"body":{"components/TestRoomPage.html":{}}}],["room.page.ts:93",{"_index":1202,"title":{},"body":{"components/TestRoomPage.html":{}}}],["room/test",{"_index":432,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TestRoomPage.html":{},"modules/TestRoomPageModule.html":{},"coverage.html":{}}}],["root",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"guards/BeforeTestGuard.html":{},"injectables/CategoryService.html":{},"injectables/DataService.html":{},"injectables/HistoryService.html":{},"guards/InTestGuard.html":{},"guards/OnFinishTestGuard.html":{},"injectables/QuestionService.html":{},"injectables/SyslogService.html":{},"injectables/TimeService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":150,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["router",{"_index":41,"title":{},"body":{"components/AccountPage.html":{},"components/BeforeStartPage.html":{},"guards/BeforeTestGuard.html":{},"components/CatInfoModalPage.html":{},"injectables/ConfigEffects.html":{},"guards/InTestGuard.html":{},"components/LoginPage.html":{},"guards/OnFinishTestGuard.html":{},"components/SignUpPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"injectables/UserEffects.html":{}}}],["routereusestrategy",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":208,"title":{},"body":{"modules/AccountPageModule.html":{},"modules/AdPagePageModule.html":{},"modules/AppRoutingModule.html":{},"modules/BeforeStartPageModule.html":{},"modules/CatInfoModalPageModule.html":{},"modules/ChallengePageModule.html":{},"modules/EditProfileModalPageModule.html":{},"modules/LoginPageModule.html":{},"components/SignUpPage.html":{},"modules/SignUpPageModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TestResultPageModule.html":{},"modules/TestRoomPageModule.html":{},"modules/TrainingPageModule.html":{},"modules/VerifyEmailPageModule.html":{},"modules/WelcomePageModule.html":{}}}],["routermodule.forchild",{"_index":1109,"title":{},"body":{"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{}}}],["routermodule.forchild(routes",{"_index":213,"title":{},"body":{"modules/AccountPageModule.html":{},"modules/AdPagePageModule.html":{},"modules/BeforeStartPageModule.html":{},"modules/CatInfoModalPageModule.html":{},"modules/ChallengePageModule.html":{},"modules/EditProfileModalPageModule.html":{},"modules/LoginPageModule.html":{},"modules/SignUpPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TestResultPageModule.html":{},"modules/TestRoomPageModule.html":{},"modules/TrainingPageModule.html":{},"modules/VerifyEmailPageModule.html":{},"modules/WelcomePageModule.html":{}}}],["routermodule.forroot(routes",{"_index":441,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":499,"title":{},"body":{"guards/BeforeTestGuard.html":{},"guards/InTestGuard.html":{},"guards/OnFinishTestGuard.html":{}}}],["routes",{"_index":207,"title":{"routes.html":{}},"body":{"modules/AccountPageModule.html":{},"modules/AdPagePageModule.html":{},"modules/AppRoutingModule.html":{},"modules/BeforeStartPageModule.html":{},"modules/CatInfoModalPageModule.html":{},"modules/ChallengePageModule.html":{},"modules/EditProfileModalPageModule.html":{},"modules/LoginPageModule.html":{},"modules/SignUpPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TestResultPageModule.html":{},"modules/TestRoomPageModule.html":{},"modules/TrainingPageModule.html":{},"modules/VerifyEmailPageModule.html":{},"modules/WelcomePageModule.html":{},"index.html":{},"routes.html":{}}}],["routing.module",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":404,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rt7ogdkjl6mh1mc8qlmppfqs419l45nh.apps.googleusercontent.com",{"_index":1453,"title":{},"body":{"injectables/UserEffects.html":{}}}],["rxjs",{"_index":92,"title":{},"body":{"components/AccountPage.html":{},"guards/BeforeTestGuard.html":{},"injectables/CategoryEffects.html":{},"injectables/CategoryService.html":{},"injectables/ConfigEffects.html":{},"injectables/DataService.html":{},"components/EditProfileModalPage.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"guards/InTestGuard.html":{},"components/LoginPage.html":{},"guards/OnFinishTestGuard.html":{},"injectables/QuestionEffects.html":{},"injectables/QuestionService.html":{},"components/SignUpPage.html":{},"injectables/SysLogEffects.html":{},"components/TrainingPage.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/observable/timer",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["rxjs/operators",{"_index":572,"title":{},"body":{"injectables/CategoryEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/QuestionEffects.html":{},"injectables/SysLogEffects.html":{},"components/TrainingPage.html":{},"injectables/UserEffects.html":{}}}],["sanitize",{"_index":397,"title":{},"body":{"modules/AppModule.html":{}}}],["sau",{"_index":227,"title":{},"body":{"components/AdPagePage.html":{}}}],["save",{"_index":775,"title":{},"body":{"components/EditProfileModalPage.html":{}}}],["saveandexit",{"_index":753,"title":{},"body":{"components/EditProfileModalPage.html":{}}}],["scaffold",{"_index":1091,"title":{},"body":{"components/Tab1Page.html":{}}}],["scopes",{"_index":1455,"title":{},"body":{"injectables/UserEffects.html":{}}}],["screen",{"_index":1655,"title":{},"body":{"dependencies.html":{}}}],["screen/ngx",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["security",{"_index":1580,"title":{},"body":{"components/WelcomePage.html":{}}}],["selectanswer",{"_index":1192,"title":{},"body":{"components/TestRoomPage.html":{}}}],["selectanswer(index",{"_index":1199,"title":{},"body":{"components/TestRoomPage.html":{}}}],["selectcategory",{"_index":580,"title":{},"body":{"injectables/CategoryService.html":{}}}],["selectcategory(key",{"_index":587,"title":{},"body":{"injectables/CategoryService.html":{}}}],["selectedkey",{"_index":576,"title":{},"body":{"injectables/CategoryService.html":{}}}],["selectedquestion",{"_index":1301,"title":{},"body":{"components/TrainingPage.html":{}}}],["selectedquestions",{"_index":639,"title":{},"body":{"injectables/DataService.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["send",{"_index":772,"title":{},"body":{"components/EditProfileModalPage.html":{}}}],["sendverifycode",{"_index":754,"title":{},"body":{"components/EditProfileModalPage.html":{}}}],["sent",{"_index":698,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"components/VerifyEmailPage.html":{},"miscellaneous/variables.html":{}}}],["services/category.service",{"_index":98,"title":{},"body":{"components/AccountPage.html":{},"components/CatInfoModalPage.html":{},"components/TrainingPage.html":{}}}],["services/history.service",{"_index":1218,"title":{},"body":{"components/TestRoomPage.html":{}}}],["services/syslog.service",{"_index":1493,"title":{},"body":{"injectables/UserEffects.html":{}}}],["services/time.service",{"_index":465,"title":{},"body":{"components/BeforeStartPage.html":{},"components/TestRoomPage.html":{}}}],["services/user.service",{"_index":96,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/BeforeStartPage.html":{},"components/TabsPage.html":{},"components/TestRoomPage.html":{},"injectables/UserEffects.html":{}}}],["setautologin",{"_index":918,"title":{},"body":{"components/LoginPage.html":{}}}],["setautologin(event",{"_index":929,"title":{},"body":{"components/LoginPage.html":{}}}],["setcategoryservice",{"_index":864,"title":{},"body":{"injectables/HistoryService.html":{}}}],["setcategoryservice(categoryservice",{"_index":870,"title":{},"body":{"injectables/HistoryService.html":{}}}],["sethistoryservice",{"_index":1504,"title":{},"body":{"injectables/UserService.html":{}}}],["sethistoryservice(historyservice",{"_index":1512,"title":{},"body":{"injectables/UserService.html":{}}}],["setinterval",{"_index":1284,"title":{},"body":{"injectables/TimeService.html":{}}}],["show",{"_index":239,"title":{},"body":{"components/AdPagePage.html":{}}}],["show_title",{"_index":658,"title":{},"body":{"injectables/DataService.html":{},"components/TestRoomPage.html":{}}}],["showads",{"_index":31,"title":{},"body":{"components/AccountPage.html":{}}}],["showsplash",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["showtoast",{"_index":1193,"title":{},"body":{"components/TestRoomPage.html":{}}}],["showtoast(text",{"_index":1201,"title":{},"body":{"components/TestRoomPage.html":{}}}],["sign",{"_index":162,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"components/EditProfileModalPage.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"components/SignUpPage.html":{},"modules/SignUpPageModule.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{},"miscellaneous/variables.html":{}}}],["signin",{"_index":684,"title":{"classes/SignIn.html":{}},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserEffects.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["signin_failed",{"_index":686,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["signin_success",{"_index":685,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["signinfailed",{"_index":726,"title":{"classes/SignInFailed.html":{}},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["signing",{"_index":1412,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["signinsuccess",{"_index":725,"title":{"classes/SignInSuccess.html":{}},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["signout",{"_index":32,"title":{"classes/SignOut.html":{}},"body":{"components/AccountPage.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserEffects.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["signuppage",{"_index":161,"title":{"components/SignUpPage.html":{}},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"modules/SignUpPageModule.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{},"coverage.html":{},"index.html":{}}}],["signuppagemodule",{"_index":1038,"title":{"modules/SignUpPageModule.html":{}},"body":{"modules/SignUpPageModule.html":{},"index.html":{},"modules.html":{}}}],["size",{"_index":481,"title":{},"body":{"components/BeforeStartPage.html":{}}}],["skill",{"_index":1559,"title":{},"body":{"components/WelcomePage.html":{}}}],["slidechanged",{"_index":1194,"title":{},"body":{"components/TestRoomPage.html":{}}}],["slideopts",{"_index":1189,"title":{},"body":{"components/TestRoomPage.html":{}}}],["slides",{"_index":1190,"title":{},"body":{"components/TestRoomPage.html":{}}}],["smartlists",{"_index":398,"title":{},"body":{"modules/AppModule.html":{}}}],["smartypants",{"_index":399,"title":{},"body":{"modules/AppModule.html":{}}}],["sms",{"_index":773,"title":{},"body":{"components/EditProfileModalPage.html":{}}}],["snapshot.foreach((value",{"_index":1363,"title":{},"body":{"components/TrainingPage.html":{}}}],["snapshot.foreach(value",{"_index":1349,"title":{},"body":{"components/TrainingPage.html":{}}}],["snapshot.length",{"_index":1361,"title":{},"body":{"components/TrainingPage.html":{}}}],["snapshotchanges",{"_index":1433,"title":{},"body":{"injectables/UserEffects.html":{}}}],["society",{"_index":1557,"title":{},"body":{"components/WelcomePage.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccountPage.html":{},"modules/AccountPageModule.html":{},"components/AdPagePage.html":{},"modules/AdPagePageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BeforeStartPage.html":{},"modules/BeforeStartPageModule.html":{},"guards/BeforeTestGuard.html":{},"components/CatInfoModalPage.html":{},"modules/CatInfoModalPageModule.html":{},"interfaces/Category.html":{},"injectables/CategoryEffects.html":{},"injectables/CategoryService.html":{},"components/ChallengePage.html":{},"modules/ChallengePageModule.html":{},"interfaces/Config.html":{},"injectables/ConfigEffects.html":{},"injectables/DataService.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"components/EditProfileModalPage.html":{},"modules/EditProfileModalPageModule.html":{},"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"interfaces/History.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"interfaces/IAppState.html":{},"guards/InTestGuard.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"classes/LoginSuccess.html":{},"guards/OnFinishTestGuard.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"interfaces/Question.html":{},"injectables/QuestionEffects.html":{},"injectables/QuestionService.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"components/SignUpPage.html":{},"modules/SignUpPageModule.html":{},"interfaces/SysLog.html":{},"injectables/SysLogEffects.html":{},"injectables/SyslogService.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"modules/Tab3PageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TestResultPage.html":{},"modules/TestResultPageModule.html":{},"components/TestRoomPage.html":{},"modules/TestRoomPageModule.html":{},"injectables/TimeService.html":{},"components/TrainingPage.html":{},"modules/TrainingPageModule.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/VerifyEmailPage.html":{},"modules/VerifyEmailPageModule.html":{},"components/WelcomePage.html":{},"modules/WelcomePageModule.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{}}}],["splashscreen",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["sqlite",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["src/.../category.action.ts",{"_index":1736,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../category.effect.ts",{"_index":1732,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../category.reducer.ts",{"_index":1706,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../config.action.ts",{"_index":1741,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../config.effect.ts",{"_index":1733,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../config.reducer.ts",{"_index":1707,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../history.action.ts",{"_index":1740,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../history.reducer.ts",{"_index":1708,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../question.action.ts",{"_index":1739,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../question.effect.ts",{"_index":1731,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../question.reducer.ts",{"_index":1709,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../syslog.actions.ts",{"_index":1738,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../syslog.effect.ts",{"_index":1734,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../syslog.reducer.ts",{"_index":1710,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.actions.ts",{"_index":1737,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.effects.ts",{"_index":1735,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../user.reducer.ts",{"_index":1711,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../usertype.ts",{"_index":1698,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/account/account.module.ts",{"_index":201,"title":{},"body":{"modules/AccountPageModule.html":{}}}],["src/app/account/account.page.ts",{"_index":10,"title":{},"body":{"components/AccountPage.html":{},"coverage.html":{}}}],["src/app/account/account.page.ts:23",{"_index":46,"title":{},"body":{"components/AccountPage.html":{}}}],["src/app/account/account.page.ts:41",{"_index":76,"title":{},"body":{"components/AccountPage.html":{}}}],["src/app/account/account.page.ts:42",{"_index":75,"title":{},"body":{"components/AccountPage.html":{}}}],["src/app/account/account.page.ts:43",{"_index":77,"title":{},"body":{"components/AccountPage.html":{}}}],["src/app/account/account.page.ts:47",{"_index":79,"title":{},"body":{"components/AccountPage.html":{}}}],["src/app/account/account.page.ts:49",{"_index":53,"title":{},"body":{"components/AccountPage.html":{}}}],["src/app/account/account.page.ts:57",{"_index":56,"title":{},"body":{"components/AccountPage.html":{}}}],["src/app/account/account.page.ts:66",{"_index":72,"title":{},"body":{"components/AccountPage.html":{}}}],["src/app/account/account.page.ts:78",{"_index":60,"title":{},"body":{"components/AccountPage.html":{}}}],["src/app/ad",{"_index":214,"title":{},"body":{"components/AdPagePage.html":{},"modules/AdPagePageModule.html":{},"coverage.html":{}}}],["src/app/app",{"_index":403,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/before",{"_index":442,"title":{},"body":{"components/BeforeStartPage.html":{},"modules/BeforeStartPageModule.html":{},"coverage.html":{}}}],["src/app/cat",{"_index":506,"title":{},"body":{"components/CatInfoModalPage.html":{},"modules/CatInfoModalPageModule.html":{},"coverage.html":{}}}],["src/app/challenge/challenge.module.ts",{"_index":614,"title":{},"body":{"modules/ChallengePageModule.html":{}}}],["src/app/challenge/challenge.page.ts",{"_index":602,"title":{},"body":{"components/ChallengePage.html":{},"coverage.html":{}}}],["src/app/challenge/challenge.page.ts:12",{"_index":606,"title":{},"body":{"components/ChallengePage.html":{}}}],["src/app/challenge/challenge.page.ts:8",{"_index":605,"title":{},"body":{"components/ChallengePage.html":{}}}],["src/app/data.service.ts",{"_index":631,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["src/app/data.service.ts:14",{"_index":642,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/data.service.ts:25",{"_index":644,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/data.service.ts:26",{"_index":648,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/data.service.ts:30",{"_index":646,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/data.service.ts:34",{"_index":645,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/data.service.ts:35",{"_index":652,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/data.service.ts:36",{"_index":651,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/data.service.ts:40",{"_index":653,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/data.service.ts:41",{"_index":650,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/data.service.ts:46",{"_index":643,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/edit",{"_index":752,"title":{},"body":{"components/EditProfileModalPage.html":{},"modules/EditProfileModalPageModule.html":{},"coverage.html":{}}}],["src/app/guards/before",{"_index":489,"title":{},"body":{"guards/BeforeTestGuard.html":{},"coverage.html":{}}}],["src/app/guards/in",{"_index":894,"title":{},"body":{"guards/InTestGuard.html":{},"coverage.html":{}}}],["src/app/guards/on",{"_index":972,"title":{},"body":{"guards/OnFinishTestGuard.html":{},"coverage.html":{}}}],["src/app/iappstate.ts",{"_index":889,"title":{},"body":{"interfaces/IAppState.html":{},"coverage.html":{}}}],["src/app/login/login.module.ts",{"_index":968,"title":{},"body":{"modules/LoginPageModule.html":{}}}],["src/app/login/login.page.ts",{"_index":912,"title":{},"body":{"components/LoginPage.html":{},"coverage.html":{}}}],["src/app/login/login.page.ts:20",{"_index":932,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:21",{"_index":933,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:23",{"_index":921,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:47",{"_index":926,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:51",{"_index":923,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:55",{"_index":928,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:63",{"_index":925,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:69",{"_index":924,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:92",{"_index":922,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:96",{"_index":930,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/services/category.service.ts",{"_index":575,"title":{},"body":{"injectables/CategoryService.html":{},"coverage.html":{}}}],["src/app/services/category.service.ts:14",{"_index":589,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/services/category.service.ts:15",{"_index":582,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/services/category.service.ts:25",{"_index":590,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/services/category.service.ts:27",{"_index":588,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/services/category.service.ts:31",{"_index":586,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/services/category.service.ts:35",{"_index":584,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/services/history.service.ts",{"_index":862,"title":{},"body":{"injectables/HistoryService.html":{},"coverage.html":{}}}],["src/app/services/history.service.ts:14",{"_index":875,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history.service.ts:15",{"_index":874,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history.service.ts:16",{"_index":866,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history.service.ts:27",{"_index":868,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history.service.ts:31",{"_index":871,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history.service.ts:35",{"_index":873,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/question.service.ts",{"_index":993,"title":{},"body":{"injectables/QuestionService.html":{},"coverage.html":{}}}],["src/app/services/question.service.ts:14",{"_index":995,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:15",{"_index":994,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/syslog.service.ts",{"_index":1066,"title":{},"body":{"injectables/SyslogService.html":{},"coverage.html":{}}}],["src/app/services/syslog.service.ts:14",{"_index":1069,"title":{},"body":{"injectables/SyslogService.html":{}}}],["src/app/services/syslog.service.ts:9",{"_index":1067,"title":{},"body":{"injectables/SyslogService.html":{}}}],["src/app/services/time.service.ts",{"_index":1269,"title":{},"body":{"injectables/TimeService.html":{},"coverage.html":{}}}],["src/app/services/time.service.ts:10",{"_index":1282,"title":{},"body":{"injectables/TimeService.html":{}}}],["src/app/services/time.service.ts:11",{"_index":1279,"title":{},"body":{"injectables/TimeService.html":{}}}],["src/app/services/time.service.ts:16",{"_index":1280,"title":{},"body":{"injectables/TimeService.html":{}}}],["src/app/services/time.service.ts:19",{"_index":1278,"title":{},"body":{"injectables/TimeService.html":{}}}],["src/app/services/time.service.ts:22",{"_index":1277,"title":{},"body":{"injectables/TimeService.html":{}}}],["src/app/services/time.service.ts:6",{"_index":1276,"title":{},"body":{"injectables/TimeService.html":{}}}],["src/app/services/time.service.ts:9",{"_index":1281,"title":{},"body":{"injectables/TimeService.html":{}}}],["src/app/services/user.service.ts",{"_index":1497,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:15",{"_index":1520,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:16",{"_index":1521,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:18",{"_index":1517,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:20",{"_index":1519,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:22",{"_index":1518,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:23",{"_index":1506,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:34",{"_index":1513,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:38",{"_index":1509,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:42",{"_index":1508,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:51",{"_index":1511,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:55",{"_index":1510,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:62",{"_index":1515,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/sign",{"_index":1007,"title":{},"body":{"components/SignUpPage.html":{},"modules/SignUpPageModule.html":{},"coverage.html":{}}}],["src/app/states/actions/category.action.ts",{"_index":785,"title":{},"body":{"classes/Fetch-1.html":{},"classes/FetchFailed-1.html":{},"classes/FetchSuccess-1.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/states/actions/category.action.ts:11",{"_index":814,"title":{},"body":{"classes/FetchSuccess-1.html":{}}}],["src/app/states/actions/category.action.ts:12",{"_index":815,"title":{},"body":{"classes/FetchSuccess-1.html":{}}}],["src/app/states/actions/category.action.ts:16",{"_index":808,"title":{},"body":{"classes/FetchFailed-1.html":{}}}],["src/app/states/actions/category.action.ts:7",{"_index":786,"title":{},"body":{"classes/Fetch-1.html":{}}}],["src/app/states/actions/config.action.ts",{"_index":778,"title":{},"body":{"classes/Fetch.html":{},"classes/FetchFailed.html":{},"classes/FetchSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/states/actions/config.action.ts:13",{"_index":812,"title":{},"body":{"classes/FetchSuccess.html":{}}}],["src/app/states/actions/config.action.ts:14",{"_index":813,"title":{},"body":{"classes/FetchSuccess.html":{}}}],["src/app/states/actions/config.action.ts:18",{"_index":806,"title":{},"body":{"classes/FetchFailed.html":{}}}],["src/app/states/actions/config.action.ts:19",{"_index":807,"title":{},"body":{"classes/FetchFailed.html":{}}}],["src/app/states/actions/config.action.ts:8",{"_index":779,"title":{},"body":{"classes/Fetch.html":{}}}],["src/app/states/actions/history.action.ts",{"_index":788,"title":{},"body":{"classes/Fetch-2.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess-2.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/states/actions/history.action.ts:12",{"_index":789,"title":{},"body":{"classes/Fetch-2.html":{}}}],["src/app/states/actions/history.action.ts:17",{"_index":816,"title":{},"body":{"classes/FetchSuccess-2.html":{}}}],["src/app/states/actions/history.action.ts:18",{"_index":817,"title":{},"body":{"classes/FetchSuccess-2.html":{}}}],["src/app/states/actions/history.action.ts:22",{"_index":809,"title":{},"body":{"classes/FetchGeneratedLog.html":{}}}],["src/app/states/actions/history.action.ts:27",{"_index":810,"title":{},"body":{"classes/FetchGeneratedLogSuccess.html":{}}}],["src/app/states/actions/history.action.ts:28",{"_index":811,"title":{},"body":{"classes/FetchGeneratedLogSuccess.html":{}}}],["src/app/states/actions/history.action.ts:32",{"_index":1400,"title":{},"body":{"classes/UpdateGeneratedLog.html":{}}}],["src/app/states/actions/history.action.ts:33",{"_index":1401,"title":{},"body":{"classes/UpdateGeneratedLog.html":{}}}],["src/app/states/actions/history.action.ts:37",{"_index":1402,"title":{},"body":{"classes/UpdateGeneratedLogSuccess.html":{}}}],["src/app/states/actions/question.action.ts",{"_index":803,"title":{},"body":{"classes/Fetch-3.html":{},"classes/FetchSuccess-3.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/states/actions/question.action.ts:13",{"_index":818,"title":{},"body":{"classes/FetchSuccess-3.html":{}}}],["src/app/states/actions/question.action.ts:14",{"_index":819,"title":{},"body":{"classes/FetchSuccess-3.html":{}}}],["src/app/states/actions/question.action.ts:8",{"_index":804,"title":{},"body":{"classes/Fetch-3.html":{}}}],["src/app/states/actions/syslog.actions.ts",{"_index":1587,"title":{},"body":{"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/states/actions/syslog.actions.ts:13",{"_index":1595,"title":{},"body":{"classes/WriteSuccess.html":{}}}],["src/app/states/actions/syslog.actions.ts:18",{"_index":1594,"title":{},"body":{"classes/WriteFailed.html":{}}}],["src/app/states/actions/syslog.actions.ts:8",{"_index":1588,"title":{},"body":{"classes/Write.html":{}}}],["src/app/states/actions/syslog.actions.ts:9",{"_index":1589,"title":{},"body":{"classes/Write.html":{}}}],["src/app/states/actions/user.actions.ts",{"_index":670,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/states/actions/user.actions.ts:102",{"_index":826,"title":{},"body":{"classes/GetInfoFailed.html":{}}}],["src/app/states/actions/user.actions.ts:107",{"_index":673,"title":{},"body":{"classes/EditInfo.html":{}}}],["src/app/states/actions/user.actions.ts:108",{"_index":674,"title":{},"body":{"classes/EditInfo.html":{}}}],["src/app/states/actions/user.actions.ts:112",{"_index":751,"title":{},"body":{"classes/EditInfoSuccess.html":{}}}],["src/app/states/actions/user.actions.ts:117",{"_index":750,"title":{},"body":{"classes/EditInfoFailed.html":{}}}],["src/app/states/actions/user.actions.ts:122",{"_index":820,"title":{},"body":{"classes/ForgotPassword.html":{}}}],["src/app/states/actions/user.actions.ts:123",{"_index":821,"title":{},"body":{"classes/ForgotPassword.html":{}}}],["src/app/states/actions/user.actions.ts:127",{"_index":823,"title":{},"body":{"classes/ForgotPasswordSentSuccess.html":{}}}],["src/app/states/actions/user.actions.ts:132",{"_index":822,"title":{},"body":{"classes/ForgotPasswordSentFailed.html":{}}}],["src/app/states/actions/user.actions.ts:137",{"_index":902,"title":{},"body":{"classes/InitInfo.html":{}}}],["src/app/states/actions/user.actions.ts:138",{"_index":903,"title":{},"body":{"classes/InitInfo.html":{}}}],["src/app/states/actions/user.actions.ts:142",{"_index":1396,"title":{},"body":{"classes/UpdateCredit.html":{}}}],["src/app/states/actions/user.actions.ts:143",{"_index":1397,"title":{},"body":{"classes/UpdateCredit.html":{}}}],["src/app/states/actions/user.actions.ts:147",{"_index":1399,"title":{},"body":{"classes/UpdateCreditSuccess.html":{}}}],["src/app/states/actions/user.actions.ts:152",{"_index":1398,"title":{},"body":{"classes/UpdateCreditFailed.html":{}}}],["src/app/states/actions/user.actions.ts:157",{"_index":976,"title":{},"body":{"classes/PayCredits.html":{}}}],["src/app/states/actions/user.actions.ts:158",{"_index":977,"title":{},"body":{"classes/PayCredits.html":{}}}],["src/app/states/actions/user.actions.ts:162",{"_index":978,"title":{},"body":{"classes/PayCreditsSuccess.html":{}}}],["src/app/states/actions/user.actions.ts:167",{"_index":1405,"title":{},"body":{"classes/UpdateLog.html":{}}}],["src/app/states/actions/user.actions.ts:168",{"_index":1406,"title":{},"body":{"classes/UpdateLog.html":{}}}],["src/app/states/actions/user.actions.ts:172",{"_index":1408,"title":{},"body":{"classes/UpdateLogSuccess.html":{}}}],["src/app/states/actions/user.actions.ts:177",{"_index":1407,"title":{},"body":{"classes/UpdateLogFailed.html":{}}}],["src/app/states/actions/user.actions.ts:38",{"_index":904,"title":{},"body":{"classes/Login.html":{}}}],["src/app/states/actions/user.actions.ts:39",{"_index":905,"title":{},"body":{"classes/Login.html":{}}}],["src/app/states/actions/user.actions.ts:43",{"_index":970,"title":{},"body":{"classes/LoginSuccess.html":{}}}],["src/app/states/actions/user.actions.ts:44",{"_index":971,"title":{},"body":{"classes/LoginSuccess.html":{}}}],["src/app/states/actions/user.actions.ts:48",{"_index":906,"title":{},"body":{"classes/LoginFailed.html":{}}}],["src/app/states/actions/user.actions.ts:49",{"_index":907,"title":{},"body":{"classes/LoginFailed.html":{}}}],["src/app/states/actions/user.actions.ts:53",{"_index":908,"title":{},"body":{"classes/LoginG.html":{}}}],["src/app/states/actions/user.actions.ts:58",{"_index":910,"title":{},"body":{"classes/LoginGSuccess.html":{}}}],["src/app/states/actions/user.actions.ts:59",{"_index":911,"title":{},"body":{"classes/LoginGSuccess.html":{}}}],["src/app/states/actions/user.actions.ts:63",{"_index":909,"title":{},"body":{"classes/LoginGFailed.html":{}}}],["src/app/states/actions/user.actions.ts:67",{"_index":1006,"title":{},"body":{"classes/SignOut.html":{}}}],["src/app/states/actions/user.actions.ts:72",{"_index":1001,"title":{},"body":{"classes/SignIn.html":{}}}],["src/app/states/actions/user.actions.ts:73",{"_index":1002,"title":{},"body":{"classes/SignIn.html":{}}}],["src/app/states/actions/user.actions.ts:77",{"_index":1005,"title":{},"body":{"classes/SignInSuccess.html":{}}}],["src/app/states/actions/user.actions.ts:82",{"_index":1003,"title":{},"body":{"classes/SignInFailed.html":{}}}],["src/app/states/actions/user.actions.ts:83",{"_index":1004,"title":{},"body":{"classes/SignInFailed.html":{}}}],["src/app/states/actions/user.actions.ts:87",{"_index":1403,"title":{},"body":{"classes/UpdateInfo.html":{}}}],["src/app/states/actions/user.actions.ts:88",{"_index":1404,"title":{},"body":{"classes/UpdateInfo.html":{}}}],["src/app/states/actions/user.actions.ts:92",{"_index":824,"title":{},"body":{"classes/GetInfo.html":{}}}],["src/app/states/actions/user.actions.ts:93",{"_index":825,"title":{},"body":{"classes/GetInfo.html":{}}}],["src/app/states/actions/user.actions.ts:97",{"_index":827,"title":{},"body":{"classes/GetInfoSuccess.html":{}}}],["src/app/states/actions/user.actions.ts:98",{"_index":828,"title":{},"body":{"classes/GetInfoSuccess.html":{}}}],["src/app/states/effects/category.effect.ts",{"_index":544,"title":{},"body":{"injectables/CategoryEffects.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/states/effects/category.effect.ts:11",{"_index":548,"title":{},"body":{"injectables/CategoryEffects.html":{}}}],["src/app/states/effects/category.effect.ts:15",{"_index":565,"title":{},"body":{"injectables/CategoryEffects.html":{}}}],["src/app/states/effects/config.effect.ts",{"_index":618,"title":{},"body":{"injectables/ConfigEffects.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/states/effects/config.effect.ts:14",{"_index":619,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/states/effects/config.effect.ts:18",{"_index":625,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/states/effects/history.effect.ts",{"_index":830,"title":{},"body":{"injectables/HistoryEffects.html":{},"coverage.html":{}}}],["src/app/states/effects/history.effect.ts:14",{"_index":833,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["src/app/states/effects/history.effect.ts:18",{"_index":845,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["src/app/states/effects/history.effect.ts:33",{"_index":840,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["src/app/states/effects/history.effect.ts:48",{"_index":858,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["src/app/states/effects/question.effect.ts",{"_index":980,"title":{},"body":{"injectables/QuestionEffects.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/states/effects/question.effect.ts:12",{"_index":982,"title":{},"body":{"injectables/QuestionEffects.html":{}}}],["src/app/states/effects/question.effect.ts:16",{"_index":988,"title":{},"body":{"injectables/QuestionEffects.html":{}}}],["src/app/states/effects/syslog.effect.ts",{"_index":1045,"title":{},"body":{"injectables/SysLogEffects.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/states/effects/syslog.effect.ts:12",{"_index":1047,"title":{},"body":{"injectables/SysLogEffects.html":{}}}],["src/app/states/effects/syslog.effect.ts:16",{"_index":1061,"title":{},"body":{"injectables/SysLogEffects.html":{}}}],["src/app/states/effects/user.effects.ts",{"_index":1414,"title":{},"body":{"injectables/UserEffects.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/states/effects/user.effects.ts:102",{"_index":1470,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/states/effects/user.effects.ts:121",{"_index":1429,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/states/effects/user.effects.ts:133",{"_index":1436,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/states/effects/user.effects.ts:164",{"_index":1482,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/states/effects/user.effects.ts:179",{"_index":1488,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/states/effects/user.effects.ts:23",{"_index":1416,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/states/effects/user.effects.ts:35",{"_index":1446,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/states/effects/user.effects.ts:56",{"_index":1459,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/states/effects/user.effects.ts:74",{"_index":1462,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/states/effects/user.effects.ts:80",{"_index":1473,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/states/effects/user.effects.ts:89",{"_index":1424,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/states/models/category.model.ts",{"_index":542,"title":{},"body":{"interfaces/Category.html":{},"coverage.html":{}}}],["src/app/states/models/config.model.ts",{"_index":616,"title":{},"body":{"interfaces/Config.html":{},"coverage.html":{}}}],["src/app/states/models/history.model.ts",{"_index":829,"title":{},"body":{"interfaces/History.html":{},"coverage.html":{}}}],["src/app/states/models/question.model.ts",{"_index":979,"title":{},"body":{"interfaces/Question.html":{},"coverage.html":{}}}],["src/app/states/models/syslog.model.ts",{"_index":1043,"title":{},"body":{"interfaces/SysLog.html":{},"coverage.html":{}}}],["src/app/states/models/user.model.ts",{"_index":1409,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/states/reducers/category.reducer.ts",{"_index":1621,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/states/reducers/config.reducer.ts",{"_index":1624,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/states/reducers/history.reducer.ts",{"_index":1626,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/states/reducers/question.reducer.ts",{"_index":1628,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/states/reducers/syslog.reducer.ts",{"_index":1630,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/states/reducers/user.reducer.ts",{"_index":1632,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/tab1/tab1.module.ts",{"_index":1107,"title":{},"body":{"modules/Tab1PageModule.html":{}}}],["src/app/tab1/tab1.page.ts",{"_index":1073,"title":{},"body":{"components/Tab1Page.html":{},"coverage.html":{}}}],["src/app/tab2/tab2.module.ts",{"_index":1118,"title":{},"body":{"modules/Tab2PageModule.html":{}}}],["src/app/tab2/tab2.page.ts",{"_index":1110,"title":{},"body":{"components/Tab2Page.html":{},"coverage.html":{}}}],["src/app/tab3/tab3.module.ts",{"_index":1128,"title":{},"body":{"modules/Tab3PageModule.html":{}}}],["src/app/tab3/tab3.page.ts",{"_index":1120,"title":{},"body":{"components/Tab3Page.html":{},"coverage.html":{}}}],["src/app/tabs/tabs.module.ts",{"_index":1146,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["src/app/tabs/tabs.page.ts",{"_index":1130,"title":{},"body":{"components/TabsPage.html":{},"coverage.html":{}}}],["src/app/tabs/tabs.page.ts:10",{"_index":1136,"title":{},"body":{"components/TabsPage.html":{}}}],["src/app/tabs/tabs.page.ts:12",{"_index":1137,"title":{},"body":{"components/TabsPage.html":{}}}],["src/app/tabs/tabs.router.module.ts",{"_index":1149,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["src/app/test",{"_index":1157,"title":{},"body":{"components/TestResultPage.html":{},"modules/TestResultPageModule.html":{},"components/TestRoomPage.html":{},"modules/TestRoomPageModule.html":{},"coverage.html":{}}}],["src/app/training/training.module.ts",{"_index":1394,"title":{},"body":{"modules/TrainingPageModule.html":{}}}],["src/app/training/training.page.ts",{"_index":1288,"title":{},"body":{"components/TrainingPage.html":{},"coverage.html":{}}}],["src/app/training/training.page.ts:100",{"_index":1317,"title":{},"body":{"components/TrainingPage.html":{}}}],["src/app/training/training.page.ts:115",{"_index":1319,"title":{},"body":{"components/TrainingPage.html":{}}}],["src/app/training/training.page.ts:133",{"_index":1313,"title":{},"body":{"components/TrainingPage.html":{}}}],["src/app/training/training.page.ts:152",{"_index":1315,"title":{},"body":{"components/TrainingPage.html":{}}}],["src/app/training/training.page.ts:169",{"_index":1322,"title":{},"body":{"components/TrainingPage.html":{}}}],["src/app/training/training.page.ts:17",{"_index":1311,"title":{},"body":{"components/TrainingPage.html":{}}}],["src/app/training/training.page.ts:175",{"_index":1321,"title":{},"body":{"components/TrainingPage.html":{}}}],["src/app/training/training.page.ts:28",{"_index":1330,"title":{},"body":{"components/TrainingPage.html":{}}}],["src/app/training/training.page.ts:29",{"_index":1328,"title":{},"body":{"components/TrainingPage.html":{}}}],["src/app/training/training.page.ts:31",{"_index":1333,"title":{},"body":{"components/TrainingPage.html":{}}}],["src/app/training/training.page.ts:32",{"_index":1332,"title":{},"body":{"components/TrainingPage.html":{}}}],["src/app/training/training.page.ts:34",{"_index":1334,"title":{},"body":{"components/TrainingPage.html":{}}}],["src/app/training/training.page.ts:35",{"_index":1335,"title":{},"body":{"components/TrainingPage.html":{}}}],["src/app/training/training.page.ts:36",{"_index":1336,"title":{},"body":{"components/TrainingPage.html":{}}}],["src/app/training/training.page.ts:38",{"_index":1326,"title":{},"body":{"components/TrainingPage.html":{}}}],["src/app/training/training.page.ts:40",{"_index":1323,"title":{},"body":{"components/TrainingPage.html":{}}}],["src/app/training/training.page.ts:41",{"_index":1327,"title":{},"body":{"components/TrainingPage.html":{}}}],["src/app/training/training.page.ts:42",{"_index":1331,"title":{},"body":{"components/TrainingPage.html":{}}}],["src/app/training/training.page.ts:43",{"_index":1325,"title":{},"body":{"components/TrainingPage.html":{}}}],["src/app/training/training.page.ts:45",{"_index":1324,"title":{},"body":{"components/TrainingPage.html":{}}}],["src/app/training/training.page.ts:47",{"_index":1318,"title":{},"body":{"components/TrainingPage.html":{}}}],["src/app/training/training.page.ts:84",{"_index":1316,"title":{},"body":{"components/TrainingPage.html":{}}}],["src/app/usertype.ts",{"_index":1699,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/verify",{"_index":1532,"title":{},"body":{"components/VerifyEmailPage.html":{},"modules/VerifyEmailPageModule.html":{},"coverage.html":{}}}],["src/app/welcome/welcome.module.ts",{"_index":1585,"title":{},"body":{"modules/WelcomePageModule.html":{}}}],["src/app/welcome/welcome.page.ts",{"_index":1550,"title":{},"body":{"components/WelcomePage.html":{},"coverage.html":{}}}],["src/app/welcome/welcome.page.ts:12",{"_index":1554,"title":{},"body":{"components/WelcomePage.html":{}}}],["src/app/welcome/welcome.page.ts:8",{"_index":1553,"title":{},"body":{"components/WelcomePage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1636,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1637,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":427,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BeforeStartPage.html":{},"guards/BeforeTestGuard.html":{},"components/Tab1Page.html":{},"components/TrainingPage.html":{}}}],["start'},{'name",{"_index":153,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["start.module#beforestartpagemodule",{"_index":429,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["start.module.ts",{"_index":485,"title":{},"body":{"modules/BeforeStartPageModule.html":{}}}],["start.page",{"_index":486,"title":{},"body":{"modules/BeforeStartPageModule.html":{}}}],["start.page.html",{"_index":445,"title":{},"body":{"components/BeforeStartPage.html":{}}}],["start.page.scss",{"_index":444,"title":{},"body":{"components/BeforeStartPage.html":{}}}],["start.page.ts",{"_index":443,"title":{},"body":{"components/BeforeStartPage.html":{},"coverage.html":{}}}],["start.page.ts:12",{"_index":450,"title":{},"body":{"components/BeforeStartPage.html":{}}}],["start.page.ts:21",{"_index":463,"title":{},"body":{"components/BeforeStartPage.html":{}}}],["start.page.ts:23",{"_index":456,"title":{},"body":{"components/BeforeStartPage.html":{}}}],["start.page.ts:29",{"_index":457,"title":{},"body":{"components/BeforeStartPage.html":{}}}],["start.page.ts:48",{"_index":451,"title":{},"body":{"components/BeforeStartPage.html":{}}}],["start/before",{"_index":428,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BeforeStartPage.html":{},"modules/BeforeStartPageModule.html":{},"coverage.html":{}}}],["started",{"_index":1079,"title":{},"body":{"components/Tab1Page.html":{}}}],["starttimer",{"_index":1274,"title":{},"body":{"injectables/TimeService.html":{}}}],["state",{"_index":498,"title":{},"body":{"guards/BeforeTestGuard.html":{},"guards/OnFinishTestGuard.html":{},"miscellaneous/functions.html":{}}}],["statements",{"_index":1598,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":890,"title":{},"body":{"interfaces/IAppState.html":{}}}],["states/actions/category.action",{"_index":591,"title":{},"body":{"injectables/CategoryService.html":{}}}],["states/actions/config.action",{"_index":655,"title":{},"body":{"injectables/DataService.html":{}}}],["states/actions/history.action",{"_index":877,"title":{},"body":{"injectables/HistoryService.html":{}}}],["states/actions/question.action",{"_index":996,"title":{},"body":{"injectables/QuestionService.html":{}}}],["states/actions/syslog.actions",{"_index":1071,"title":{},"body":{"injectables/SyslogService.html":{}}}],["states/actions/user.actions",{"_index":95,"title":{},"body":{"components/AccountPage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"injectables/UserService.html":{}}}],["states/effects/category.effect",{"_index":351,"title":{},"body":{"modules/AppModule.html":{}}}],["states/effects/config.effect",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["states/effects/history.effect",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["states/effects/question.effect",{"_index":360,"title":{},"body":{"modules/AppModule.html":{}}}],["states/effects/user.effects",{"_index":343,"title":{},"body":{"modules/AppModule.html":{}}}],["states/models/category.model",{"_index":592,"title":{},"body":{"injectables/CategoryService.html":{},"interfaces/IAppState.html":{}}}],["states/models/config.model",{"_index":654,"title":{},"body":{"injectables/DataService.html":{},"interfaces/IAppState.html":{}}}],["states/models/history.model",{"_index":876,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/IAppState.html":{}}}],["states/models/question.model",{"_index":892,"title":{},"body":{"interfaces/IAppState.html":{},"injectables/QuestionService.html":{}}}],["states/models/syslog.model",{"_index":893,"title":{},"body":{"interfaces/IAppState.html":{}}}],["states/models/user.model",{"_index":93,"title":{},"body":{"components/AccountPage.html":{},"components/EditProfileModalPage.html":{},"interfaces/IAppState.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"injectables/UserService.html":{}}}],["states/reducers/category.reducer",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["states/reducers/config.reducer",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["states/reducers/history.reducer",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["states/reducers/question.reducer",{"_index":362,"title":{},"body":{"modules/AppModule.html":{}}}],["states/reducers/syslog.reducer",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["statusbar",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["step",{"_index":1556,"title":{},"body":{"components/WelcomePage.html":{}}}],["steps",{"_index":1089,"title":{},"body":{"components/Tab1Page.html":{}}}],["stoptimer",{"_index":1275,"title":{},"body":{"injectables/TimeService.html":{}}}],["storage",{"_index":42,"title":{},"body":{"components/AccountPage.html":{},"components/LoginPage.html":{},"components/TrainingPage.html":{},"dependencies.html":{}}}],["storagebucket",{"_index":325,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":44,"title":{},"body":{"components/AccountPage.html":{},"injectables/CategoryService.html":{},"injectables/DataService.html":{},"components/EditProfileModalPage.html":{},"injectables/HistoryService.html":{},"interfaces/IAppState.html":{},"components/LoginPage.html":{},"injectables/QuestionService.html":{},"components/SignUpPage.html":{},"injectables/SyslogService.html":{},"injectables/UserService.html":{}}}],["store.dispatch(new",{"_index":594,"title":{},"body":{"injectables/CategoryService.html":{}}}],["store.select('category",{"_index":593,"title":{},"body":{"injectables/CategoryService.html":{}}}],["store.select('history",{"_index":880,"title":{},"body":{"injectables/HistoryService.html":{}}}],["store.select('question",{"_index":998,"title":{},"body":{"injectables/QuestionService.html":{}}}],["store.select('user",{"_index":934,"title":{},"body":{"components/LoginPage.html":{},"components/SignUpPage.html":{},"injectables/UserService.html":{}}}],["storedevtoolsmodule",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule.forroot",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["strategy",{"_index":1572,"title":{},"body":{"components/WelcomePage.html":{}}}],["string",{"_index":233,"title":{},"body":{"components/AdPagePage.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/Fetch.html":{},"classes/Fetch-2.html":{},"classes/FetchFailed.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-2.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"injectables/SyslogService.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["subcat",{"_index":535,"title":{},"body":{"components/CatInfoModalPage.html":{}}}],["subcatid",{"_index":869,"title":{},"body":{"injectables/HistoryService.html":{}}}],["subcatlist",{"_index":512,"title":{},"body":{"components/CatInfoModalPage.html":{}}}],["subkey",{"_index":1383,"title":{},"body":{"components/TrainingPage.html":{}}}],["submit",{"_index":1195,"title":{},"body":{"components/TestRoomPage.html":{}}}],["success",{"_index":677,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserEffects.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":269,"title":{},"body":{"components/AdPagePage.html":{},"modules.html":{}}}],["svg",{"_index":1725,"title":{},"body":{"modules.html":{}}}],["swipebackenabled",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["switchmap",{"_index":551,"title":{},"body":{"injectables/CategoryEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/QuestionEffects.html":{},"injectables/SysLogEffects.html":{},"injectables/UserEffects.html":{}}}],["switchmap((payload",{"_index":850,"title":{},"body":{"injectables/HistoryEffects.html":{},"injectables/UserEffects.html":{}}}],["syslog",{"_index":385,"title":{"interfaces/SysLog.html":{}},"body":{"modules/AppModule.html":{},"interfaces/IAppState.html":{},"interfaces/SysLog.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["syslogaction",{"_index":1062,"title":{},"body":{"injectables/SysLogEffects.html":{}}}],["syslogaction.all",{"_index":1064,"title":{},"body":{"injectables/SysLogEffects.html":{},"miscellaneous/typealiases.html":{}}}],["syslogaction.write",{"_index":1049,"title":{},"body":{"injectables/SysLogEffects.html":{}}}],["syslogaction.writefailed",{"_index":1060,"title":{},"body":{"injectables/SysLogEffects.html":{}}}],["syslogaction.writesuccess",{"_index":1058,"title":{},"body":{"injectables/SysLogEffects.html":{}}}],["syslogactions",{"_index":1070,"title":{},"body":{"injectables/SyslogService.html":{}}}],["syslogactions.write",{"_index":1072,"title":{},"body":{"injectables/SyslogService.html":{}}}],["syslogeffects",{"_index":1044,"title":{"injectables/SysLogEffects.html":{}},"body":{"injectables/SysLogEffects.html":{},"coverage.html":{}}}],["syslogreducer",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["syslogreducer(state",{"_index":1716,"title":{},"body":{"miscellaneous/functions.html":{}}}],["syslogservice",{"_index":1065,"title":{"injectables/SyslogService.html":{}},"body":{"injectables/SyslogService.html":{},"injectables/UserEffects.html":{},"coverage.html":{}}}],["system",{"_index":617,"title":{},"body":{"interfaces/Config.html":{},"classes/Fetch.html":{},"classes/FetchFailed.html":{},"classes/FetchSuccess.html":{},"components/WelcomePage.html":{},"miscellaneous/variables.html":{}}}],["tab",{"_index":1077,"title":{},"body":{"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{}}}],["tab1",{"_index":1074,"title":{},"body":{"components/Tab1Page.html":{}}}],["tab1'},{'name",{"_index":165,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["tab1.page",{"_index":1108,"title":{},"body":{"modules/Tab1PageModule.html":{}}}],["tab1.page.html",{"_index":1076,"title":{},"body":{"components/Tab1Page.html":{}}}],["tab1.page.scss",{"_index":1075,"title":{},"body":{"components/Tab1Page.html":{}}}],["tab1page",{"_index":164,"title":{"components/Tab1Page.html":{}},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{},"coverage.html":{},"index.html":{}}}],["tab1pagemodule",{"_index":1104,"title":{"modules/Tab1PageModule.html":{}},"body":{"modules/Tab1PageModule.html":{},"index.html":{},"modules.html":{}}}],["tab2",{"_index":1111,"title":{},"body":{"components/Tab2Page.html":{}}}],["tab2'},{'name",{"_index":167,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["tab2.page",{"_index":1119,"title":{},"body":{"modules/Tab2PageModule.html":{}}}],["tab2.page.html",{"_index":1113,"title":{},"body":{"components/Tab2Page.html":{}}}],["tab2.page.scss",{"_index":1112,"title":{},"body":{"components/Tab2Page.html":{}}}],["tab2page",{"_index":166,"title":{"components/Tab2Page.html":{}},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{},"coverage.html":{},"index.html":{}}}],["tab2pagemodule",{"_index":1115,"title":{"modules/Tab2PageModule.html":{}},"body":{"modules/Tab2PageModule.html":{},"index.html":{},"modules.html":{}}}],["tab3",{"_index":1121,"title":{},"body":{"components/Tab3Page.html":{},"modules/TabsPageRoutingModule.html":{}}}],["tab3'},{'name",{"_index":169,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["tab3.page",{"_index":1129,"title":{},"body":{"modules/Tab3PageModule.html":{}}}],["tab3.page.html",{"_index":1123,"title":{},"body":{"components/Tab3Page.html":{}}}],["tab3.page.scss",{"_index":1122,"title":{},"body":{"components/Tab3Page.html":{}}}],["tab3/tab3.module#tab3pagemodule",{"_index":1152,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["tab3page",{"_index":168,"title":{"components/Tab3Page.html":{}},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"modules/Tab3PageModule.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{},"coverage.html":{},"index.html":{}}}],["tab3pagemodule",{"_index":1125,"title":{"modules/Tab3PageModule.html":{}},"body":{"modules/Tab3PageModule.html":{},"index.html":{},"modules.html":{}}}],["table",{"_index":1639,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1638,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":1131,"title":{},"body":{"components/TabsPage.html":{}}}],["tabs'},{'name",{"_index":171,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["tabs.page",{"_index":1148,"title":{},"body":{"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["tabs.page.html",{"_index":1133,"title":{},"body":{"components/TabsPage.html":{}}}],["tabs.page.scss",{"_index":1132,"title":{},"body":{"components/TabsPage.html":{}}}],["tabs.router.module",{"_index":1147,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["tabs/account",{"_index":1154,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["tabs/tabs.module#tabspagemodule",{"_index":423,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tabspage",{"_index":170,"title":{"components/TabsPage.html":{}},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{},"coverage.html":{},"index.html":{}}}],["tabspagemodule",{"_index":1141,"title":{"modules/TabsPageModule.html":{}},"body":{"modules/TabsPageModule.html":{},"index.html":{},"modules.html":{}}}],["tabspageroutingmodule",{"_index":1145,"title":{"modules/TabsPageRoutingModule.html":{}},"body":{"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["tap",{"_index":629,"title":{},"body":{"injectables/ConfigEffects.html":{},"injectables/UserEffects.html":{}}}],["technical",{"_index":1578,"title":{},"body":{"components/WelcomePage.html":{}}}],["technology",{"_index":1577,"title":{},"body":{"components/WelcomePage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["terms",{"_index":1036,"title":{},"body":{"components/SignUpPage.html":{},"injectables/UserEffects.html":{}}}],["test",{"_index":173,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BeforeStartPage.html":{},"guards/BeforeTestGuard.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"guards/InTestGuard.html":{},"components/LoginPage.html":{},"guards/OnFinishTestGuard.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"modules/TestResultPageModule.html":{},"components/TestRoomPage.html":{},"modules/TestRoomPageModule.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["test.guard",{"_index":407,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["test.guard.ts",{"_index":490,"title":{},"body":{"guards/BeforeTestGuard.html":{},"guards/InTestGuard.html":{},"guards/OnFinishTestGuard.html":{},"coverage.html":{}}}],["test.guard.ts:12",{"_index":495,"title":{},"body":{"guards/BeforeTestGuard.html":{},"guards/InTestGuard.html":{},"guards/OnFinishTestGuard.html":{}}}],["test.guard.ts:14",{"_index":975,"title":{},"body":{"guards/OnFinishTestGuard.html":{}}}],["test.guard.ts:15",{"_index":500,"title":{},"body":{"guards/BeforeTestGuard.html":{},"guards/InTestGuard.html":{}}}],["testfinish",{"_index":662,"title":{},"body":{"injectables/DataService.html":{}}}],["testing",{"_index":661,"title":{},"body":{"injectables/DataService.html":{}}}],["testresult",{"_index":640,"title":{},"body":{"injectables/DataService.html":{}}}],["testresultpage",{"_index":172,"title":{"components/TestResultPage.html":{}},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"modules/TestResultPageModule.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{},"coverage.html":{},"index.html":{}}}],["testresultpagemodule",{"_index":1178,"title":{"modules/TestResultPageModule.html":{}},"body":{"modules/TestResultPageModule.html":{},"index.html":{},"modules.html":{}}}],["testroompage",{"_index":175,"title":{"components/TestRoomPage.html":{}},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"modules/TestRoomPageModule.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{},"coverage.html":{},"index.html":{}}}],["testroompagemodule",{"_index":1263,"title":{"modules/TestRoomPageModule.html":{}},"body":{"modules/TestRoomPageModule.html":{},"index.html":{},"modules.html":{}}}],["text",{"_index":1203,"title":{},"body":{"components/TestRoomPage.html":{}}}],["theme",{"_index":1094,"title":{},"body":{"components/Tab1Page.html":{}}}],["this.action.pipe",{"_index":983,"title":{},"body":{"injectables/QuestionEffects.html":{}}}],["this.actions.pipe",{"_index":549,"title":{},"body":{"injectables/CategoryEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/SysLogEffects.html":{},"injectables/UserEffects.html":{}}}],["this.admob.on(this.admob.events.reward_video_reward).subscribe",{"_index":252,"title":{},"body":{"components/AdPagePage.html":{}}}],["this.admob.onadloaded().subscribe((ad",{"_index":264,"title":{},"body":{"components/AdPagePage.html":{}}}],["this.admob.onrewardedad().subscribe",{"_index":263,"title":{},"body":{"components/AdPagePage.html":{}}}],["this.admob.requestrewardedad",{"_index":266,"title":{},"body":{"components/AdPagePage.html":{}}}],["this.admob.rewardvideo.config(config",{"_index":251,"title":{},"body":{"components/AdPagePage.html":{}}}],["this.admob.rewardvideo.isready",{"_index":254,"title":{},"body":{"components/AdPagePage.html":{}}}],["this.admob.rewardvideo.prepare().then",{"_index":255,"title":{},"body":{"components/AdPagePage.html":{}}}],["this.admob.rewardvideo.show",{"_index":256,"title":{},"body":{"components/AdPagePage.html":{}}}],["this.admob.setoptions",{"_index":257,"title":{},"body":{"components/AdPagePage.html":{}}}],["this.admob.showrewardedad",{"_index":265,"title":{},"body":{"components/AdPagePage.html":{}}}],["this.afauth.auth.currentuser",{"_index":1442,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.afauth.auth.currentuser.email",{"_index":109,"title":{},"body":{"components/AccountPage.html":{}}}],["this.afauth.auth.currentuser.email.replace",{"_index":836,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["this.afauth.auth.currentuser.email.replace(/\\./g",{"_index":1485,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.afauth.auth.currentuser.sendemailverification",{"_index":1541,"title":{},"body":{"components/VerifyEmailPage.html":{}}}],["this.afauth.auth.currentuser.uid",{"_index":1053,"title":{},"body":{"injectables/SysLogEffects.html":{}}}],["this.afauth.auth.signout",{"_index":125,"title":{},"body":{"components/AccountPage.html":{}}}],["this.answers",{"_index":1223,"title":{},"body":{"components/TestRoomPage.html":{}}}],["this.caption",{"_index":267,"title":{},"body":{"components/AdPagePage.html":{}}}],["this.catdescription",{"_index":529,"title":{},"body":{"components/CatInfoModalPage.html":{}}}],["this.category",{"_index":523,"title":{},"body":{"components/CatInfoModalPage.html":{},"injectables/CategoryService.html":{}}}],["this.category$.subscribe((payload",{"_index":596,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.category['cat'][this.selectedkey",{"_index":598,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.category['description",{"_index":530,"title":{},"body":{"components/CatInfoModalPage.html":{}}}],["this.category['title",{"_index":528,"title":{},"body":{"components/CatInfoModalPage.html":{}}}],["this.catname",{"_index":527,"title":{},"body":{"components/CatInfoModalPage.html":{}}}],["this.cattree",{"_index":1348,"title":{},"body":{"components/TrainingPage.html":{}}}],["this.checkterms",{"_index":1028,"title":{},"body":{"components/SignUpPage.html":{}}}],["this.config",{"_index":663,"title":{},"body":{"injectables/DataService.html":{}}}],["this.config$.subscribe((value",{"_index":665,"title":{},"body":{"injectables/DataService.html":{}}}],["this.currentindex",{"_index":1231,"title":{},"body":{"components/TestRoomPage.html":{}}}],["this.dataservice.catmatrix",{"_index":1374,"title":{},"body":{"components/TrainingPage.html":{}}}],["this.dataservice.config['annonymous_mode",{"_index":111,"title":{},"body":{"components/AccountPage.html":{},"injectables/UserEffects.html":{}}}],["this.dataservice.config['is_obsolete",{"_index":942,"title":{},"body":{"components/LoginPage.html":{}}}],["this.dataservice.config['price",{"_index":469,"title":{},"body":{"components/BeforeStartPage.html":{},"injectables/UserService.html":{}}}],["this.dataservice.fetchconfig",{"_index":935,"title":{},"body":{"components/LoginPage.html":{}}}],["this.dataservice.imagelink",{"_index":1369,"title":{},"body":{"components/TrainingPage.html":{}}}],["this.dataservice.navstate['canenterbeforestart",{"_index":471,"title":{},"body":{"components/BeforeStartPage.html":{},"guards/BeforeTestGuard.html":{}}}],["this.dataservice.navstate['testfinish",{"_index":473,"title":{},"body":{"components/BeforeStartPage.html":{},"guards/OnFinishTestGuard.html":{},"components/TestRoomPage.html":{}}}],["this.dataservice.navstate['testing",{"_index":472,"title":{},"body":{"components/BeforeStartPage.html":{},"guards/InTestGuard.html":{},"components/TestRoomPage.html":{}}}],["this.dataservice.quesgenoption.maximum_question",{"_index":1220,"title":{},"body":{"components/TestRoomPage.html":{}}}],["this.dataservice.quesgenoption.show_title",{"_index":1222,"title":{},"body":{"components/TestRoomPage.html":{}}}],["this.dataservice.selectedquestions",{"_index":1228,"title":{},"body":{"components/TestRoomPage.html":{},"components/TrainingPage.html":{}}}],["this.dataservice.selectedquestions.length",{"_index":1173,"title":{},"body":{"components/TestResultPage.html":{}}}],["this.dataservice.testresult",{"_index":1232,"title":{},"body":{"components/TestRoomPage.html":{}}}],["this.db.list('config/').snapshotchanges",{"_index":621,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.db.list('imgs/').snapshotchanges().subscribe((snapshot",{"_index":1359,"title":{},"body":{"components/TrainingPage.html":{}}}],["this.db.list('questions/').snapshotchanges",{"_index":985,"title":{},"body":{"injectables/QuestionEffects.html":{}}}],["this.db.list('questions/').snapshotchanges().pipe",{"_index":1370,"title":{},"body":{"components/TrainingPage.html":{}}}],["this.db.list('titles",{"_index":1339,"title":{},"body":{"components/TrainingPage.html":{}}}],["this.db.list('titles/').snapshotchanges",{"_index":552,"title":{},"body":{"injectables/CategoryEffects.html":{}}}],["this.db.list('users",{"_index":835,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["this.db.object('users",{"_index":853,"title":{},"body":{"injectables/HistoryEffects.html":{},"injectables/UserEffects.html":{}}}],["this.elapsedtime",{"_index":1285,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.email",{"_index":939,"title":{},"body":{"components/LoginPage.html":{},"components/SignUpPage.html":{}}}],["this.email.trim",{"_index":1025,"title":{},"body":{"components/SignUpPage.html":{}}}],["this.givereward",{"_index":253,"title":{},"body":{"components/AdPagePage.html":{}}}],["this.gplus.login",{"_index":1450,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.history",{"_index":879,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.history$.subscribe((payload",{"_index":882,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.historyservice",{"_index":1524,"title":{},"body":{"injectables/UserService.html":{}}}],["this.historyservice.writegeneratedlog(correct",{"_index":1530,"title":{},"body":{"injectables/UserService.html":{}}}],["this.historyservice.writegeneratedlog(incorrect",{"_index":1531,"title":{},"body":{"injectables/UserService.html":{}}}],["this.imagelink",{"_index":1358,"title":{},"body":{"components/TrainingPage.html":{}}}],["this.imagelink.push",{"_index":1366,"title":{},"body":{"components/TrainingPage.html":{}}}],["this.imagemapping",{"_index":1229,"title":{},"body":{"components/TestRoomPage.html":{}}}],["this.initializeapp",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["this.interval",{"_index":1283,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.isenoughcredit",{"_index":466,"title":{},"body":{"components/BeforeStartPage.html":{}}}],["this.isobsoleted",{"_index":948,"title":{},"body":{"components/LoginPage.html":{}}}],["this.loadimageurl",{"_index":1356,"title":{},"body":{"components/TrainingPage.html":{}}}],["this.loadingpercent",{"_index":1368,"title":{},"body":{"components/TrainingPage.html":{}}}],["this.loadquestion",{"_index":1357,"title":{},"body":{"components/TrainingPage.html":{}}}],["this.log.write(\"login",{"_index":1440,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.log.write(\"used",{"_index":1478,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.logbycat",{"_index":884,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.login",{"_index":941,"title":{},"body":{"components/LoginPage.html":{}}}],["this.majorcatlist",{"_index":1340,"title":{},"body":{"components/TrainingPage.html":{}}}],["this.majorcatlist.subscribe(snapshot",{"_index":1345,"title":{},"body":{"components/TrainingPage.html":{}}}],["this.majorcatref",{"_index":1338,"title":{},"body":{"components/TrainingPage.html":{}}}],["this.majorcatref.snapshotchanges().pipe",{"_index":1341,"title":{},"body":{"components/TrainingPage.html":{}}}],["this.maximage",{"_index":1360,"title":{},"body":{"components/TrainingPage.html":{}}}],["this.minorcatlist",{"_index":1347,"title":{},"body":{"components/TrainingPage.html":{}}}],["this.minorcatlist.push(val",{"_index":1354,"title":{},"body":{"components/TrainingPage.html":{}}}],["this.minorcatref",{"_index":1346,"title":{},"body":{"components/TrainingPage.html":{}}}],["this.minorcatref.push(ref",{"_index":1353,"title":{},"body":{"components/TrainingPage.html":{}}}],["this.modalcontroller.create",{"_index":116,"title":{},"body":{"components/AccountPage.html":{}}}],["this.modalcontroller.dismiss",{"_index":769,"title":{},"body":{"components/EditProfileModalPage.html":{}}}],["this.name",{"_index":764,"title":{},"body":{"components/EditProfileModalPage.html":{}}}],["this.navstate",{"_index":659,"title":{},"body":{"injectables/DataService.html":{}}}],["this.numofquestion",{"_index":1219,"title":{},"body":{"components/TestRoomPage.html":{}}}],["this.password",{"_index":940,"title":{},"body":{"components/LoginPage.html":{},"components/SignUpPage.html":{}}}],["this.paytype",{"_index":1525,"title":{},"body":{"injectables/UserService.html":{}}}],["this.percent",{"_index":1171,"title":{},"body":{"components/TestResultPage.html":{}}}],["this.phone",{"_index":766,"title":{},"body":{"components/EditProfileModalPage.html":{}}}],["this.platform.is('android",{"_index":248,"title":{},"body":{"components/AdPagePage.html":{}}}],["this.platform.is('ios",{"_index":249,"title":{},"body":{"components/AdPagePage.html":{}}}],["this.platform.ready().then",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["this.presenttoast('email",{"_index":957,"title":{},"body":{"components/LoginPage.html":{}}}],["this.presenttoast(payload.registration.message",{"_index":1031,"title":{},"body":{"components/SignUpPage.html":{}}}],["this.quesgenoption",{"_index":656,"title":{},"body":{"injectables/DataService.html":{}}}],["this.question",{"_index":997,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.question$.subscribe((payload",{"_index":1000,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.questionlist",{"_index":1226,"title":{},"body":{"components/TestRoomPage.html":{},"components/TrainingPage.html":{}}}],["this.questionlist.slice(0",{"_index":1227,"title":{},"body":{"components/TestRoomPage.html":{}}}],["this.questionlist.subscribe((value",{"_index":1371,"title":{},"body":{"components/TrainingPage.html":{}}}],["this.questionlist[i]['question",{"_index":1250,"title":{},"body":{"components/TestRoomPage.html":{}}}],["this.questions",{"_index":1372,"title":{},"body":{"components/TrainingPage.html":{}}}],["this.resend",{"_index":1540,"title":{},"body":{"components/VerifyEmailPage.html":{}}}],["this.resultlist",{"_index":1169,"title":{},"body":{"components/TestResultPage.html":{}}}],["this.retypepassword",{"_index":1027,"title":{},"body":{"components/SignUpPage.html":{}}}],["this.router.navigate",{"_index":1444,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.router.navigate([\"ad",{"_index":127,"title":{},"body":{"components/AccountPage.html":{}}}],["this.router.navigate(['/main/account",{"_index":476,"title":{},"body":{"components/BeforeStartPage.html":{},"components/LoginPage.html":{}}}],["this.router.navigate(['/test",{"_index":1479,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.router.navigate(['/verify",{"_index":1030,"title":{},"body":{"components/SignUpPage.html":{}}}],["this.router.navigate(['main/account",{"_index":1168,"title":{},"body":{"components/TestResultPage.html":{}}}],["this.selectedkey",{"_index":597,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.selectedquestion",{"_index":1377,"title":{},"body":{"components/TrainingPage.html":{}}}],["this.selectedquestion.length",{"_index":1376,"title":{},"body":{"components/TrainingPage.html":{}}}],["this.selectedquestion.splice(0",{"_index":1375,"title":{},"body":{"components/TrainingPage.html":{}}}],["this.show_title",{"_index":1221,"title":{},"body":{"components/TestRoomPage.html":{}}}],["this.showsplash",{"_index":302,"title":{},"body":{"components/AppComponent.html":{}}}],["this.slides.getactiveindex().then((value",{"_index":1230,"title":{},"body":{"components/TestRoomPage.html":{}}}],["this.splashscreen.hide",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["this.statusbar.styledefault",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storage.get(\"auto_login\").then((value",{"_index":936,"title":{},"body":{"components/LoginPage.html":{}}}],["this.storage.get(\"login_email\").then((email",{"_index":937,"title":{},"body":{"components/LoginPage.html":{}}}],["this.storage.get(\"login_password\").then((password",{"_index":938,"title":{},"body":{"components/LoginPage.html":{}}}],["this.storage.ref('ip_imgs",{"_index":1364,"title":{},"body":{"components/TrainingPage.html":{}}}],["this.storage.set(\"auto_login",{"_index":121,"title":{},"body":{"components/AccountPage.html":{},"components/LoginPage.html":{}}}],["this.storage.set(\"login_email",{"_index":123,"title":{},"body":{"components/AccountPage.html":{},"components/LoginPage.html":{}}}],["this.storage.set(\"login_password",{"_index":124,"title":{},"body":{"components/AccountPage.html":{},"components/LoginPage.html":{}}}],["this.store.dispatch(new",{"_index":107,"title":{},"body":{"components/AccountPage.html":{},"injectables/DataService.html":{},"components/EditProfileModalPage.html":{},"injectables/HistoryService.html":{},"components/LoginPage.html":{},"injectables/QuestionService.html":{},"components/SignUpPage.html":{},"injectables/SyslogService.html":{},"injectables/UserService.html":{}}}],["this.store.select('config",{"_index":664,"title":{},"body":{"injectables/DataService.html":{}}}],["this.store.select('user",{"_index":106,"title":{},"body":{"components/AccountPage.html":{},"components/EditProfileModalPage.html":{}}}],["this.subcatlist",{"_index":525,"title":{},"body":{"components/CatInfoModalPage.html":{}}}],["this.timeservice.resettimer",{"_index":474,"title":{},"body":{"components/BeforeStartPage.html":{}}}],["this.timeservice.starttimer",{"_index":475,"title":{},"body":{"components/BeforeStartPage.html":{}}}],["this.timeservice.stoptimer",{"_index":1233,"title":{},"body":{"components/TestRoomPage.html":{}}}],["this.toastcontroller.create",{"_index":944,"title":{},"body":{"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/TestRoomPage.html":{}}}],["this.user",{"_index":105,"title":{},"body":{"components/AccountPage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"injectables/UserService.html":{}}}],["this.user$.subscribe((payload",{"_index":1523,"title":{},"body":{"injectables/UserService.html":{}}}],["this.user.currentuser.email",{"_index":1527,"title":{},"body":{"injectables/UserService.html":{}}}],["this.user.data",{"_index":1526,"title":{},"body":{"injectables/UserService.html":{}}}],["this.user.data.credits",{"_index":1528,"title":{},"body":{"injectables/UserService.html":{}}}],["this.user.data.role",{"_index":1529,"title":{},"body":{"injectables/UserService.html":{}}}],["this.user.subscribe((payload",{"_index":763,"title":{},"body":{"components/EditProfileModalPage.html":{},"components/SignUpPage.html":{}}}],["this.user.subscribe((value",{"_index":953,"title":{},"body":{"components/LoginPage.html":{}}}],["this.userservice.add_more_credits",{"_index":272,"title":{},"body":{"components/AdPagePage.html":{}}}],["this.userservice.addcredits",{"_index":468,"title":{},"body":{"components/BeforeStartPage.html":{}}}],["this.userservice.addcredits(50",{"_index":271,"title":{},"body":{"components/AdPagePage.html":{}}}],["this.userservice.getpaytype",{"_index":1477,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.userservice.getrole",{"_index":1139,"title":{},"body":{"components/TabsPage.html":{}}}],["this.userservice.isenoughcredit",{"_index":467,"title":{},"body":{"components/BeforeStartPage.html":{}}}],["this.userservice.pay_for_question",{"_index":470,"title":{},"body":{"components/BeforeStartPage.html":{},"injectables/UserEffects.html":{}}}],["three",{"_index":1124,"title":{},"body":{"components/Tab3Page.html":{},"components/WelcomePage.html":{}}}],["thưởng",{"_index":226,"title":{},"body":{"components/AdPagePage.html":{}}}],["time",{"_index":478,"title":{},"body":{"components/BeforeStartPage.html":{},"injectables/UserService.html":{}}}],["timer",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["timer(3000).subscribe",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["timeservice",{"_index":449,"title":{"injectables/TimeService.html":{}},"body":{"components/BeforeStartPage.html":{},"components/TestRoomPage.html":{},"injectables/TimeService.html":{},"coverage.html":{}}}],["timestamp",{"_index":747,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserService.html":{}}}],["toast",{"_index":943,"title":{},"body":{"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/TestRoomPage.html":{}}}],["toast.present",{"_index":947,"title":{},"body":{"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/TestRoomPage.html":{}}}],["toastcontroller",{"_index":920,"title":{},"body":{"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/TestRoomPage.html":{}}}],["top",{"_index":1236,"title":{},"body":{"components/TestRoomPage.html":{}}}],["total",{"_index":1573,"title":{},"body":{"components/WelcomePage.html":{}}}],["tra",{"_index":462,"title":{},"body":{"components/BeforeStartPage.html":{}}}],["training",{"_index":425,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrainingPage.html":{}}}],["training'},{'name",{"_index":178,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["training.page",{"_index":1395,"title":{},"body":{"modules/TrainingPageModule.html":{}}}],["training.page.html",{"_index":1290,"title":{},"body":{"components/TrainingPage.html":{}}}],["training.page.scss",{"_index":1289,"title":{},"body":{"components/TrainingPage.html":{}}}],["training/training.module#trainingpagemodule",{"_index":426,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["trainingpage",{"_index":177,"title":{"components/TrainingPage.html":{}},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"modules/TrainingPageModule.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{},"coverage.html":{},"index.html":{}}}],["trainingpagemodule",{"_index":1391,"title":{"modules/TrainingPageModule.html":{}},"body":{"modules/TrainingPageModule.html":{},"index.html":{},"modules.html":{}}}],["trang",{"_index":64,"title":{},"body":{"components/AccountPage.html":{},"components/BeforeStartPage.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["true",{"_index":260,"title":{},"body":{"components/AdPagePage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BeforeStartPage.html":{},"injectables/DataService.html":{},"components/TabsPage.html":{},"components/TestRoomPage.html":{},"injectables/UserEffects.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":1114,"title":{},"body":{"components/Tab2Page.html":{}}}],["type",{"_index":50,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"guards/BeforeTestGuard.html":{},"components/CatInfoModalPage.html":{},"interfaces/Category.html":{},"injectables/CategoryEffects.html":{},"injectables/CategoryService.html":{},"interfaces/Config.html":{},"injectables/ConfigEffects.html":{},"injectables/DataService.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"components/EditProfileModalPage.html":{},"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"interfaces/History.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"interfaces/IAppState.html":{},"guards/InTestGuard.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"classes/LoginSuccess.html":{},"guards/OnFinishTestGuard.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"interfaces/Question.html":{},"injectables/QuestionEffects.html":{},"injectables/QuestionService.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"components/SignUpPage.html":{},"interfaces/SysLog.html":{},"injectables/SysLogEffects.html":{},"injectables/SyslogService.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"injectables/TimeService.html":{},"components/TrainingPage.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"components/VerifyEmailPage.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1729,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["tài",{"_index":454,"title":{},"body":{"components/BeforeStartPage.html":{}}}],["u",{"_index":459,"title":{},"body":{"components/BeforeStartPage.html":{}}}],["u.currentuser.displayname",{"_index":131,"title":{},"body":{"components/AccountPage.html":{}}}],["u.currentuser.email",{"_index":130,"title":{},"body":{"components/AccountPage.html":{}}}],["u.currentuser.phonenumber",{"_index":132,"title":{},"body":{"components/AccountPage.html":{}}}],["u.data['credits",{"_index":134,"title":{},"body":{"components/AccountPage.html":{}}}],["u.data[\\'credits",{"_index":144,"title":{},"body":{"components/AccountPage.html":{}}}],["undefined",{"_index":955,"title":{},"body":{"components/LoginPage.html":{},"components/TabsPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["until",{"_index":896,"title":{},"body":{"guards/InTestGuard.html":{}}}],["up",{"_index":417,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{}}}],["up'},{'name",{"_index":163,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["up.module#signuppagemodule",{"_index":419,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["up.module.ts",{"_index":1041,"title":{},"body":{"modules/SignUpPageModule.html":{}}}],["up.page",{"_index":1042,"title":{},"body":{"modules/SignUpPageModule.html":{}}}],["up.page.html",{"_index":1010,"title":{},"body":{"components/SignUpPage.html":{}}}],["up.page.scss",{"_index":1009,"title":{},"body":{"components/SignUpPage.html":{}}}],["up.page.ts",{"_index":1008,"title":{},"body":{"components/SignUpPage.html":{},"coverage.html":{}}}],["up.page.ts:16",{"_index":1013,"title":{},"body":{"components/SignUpPage.html":{}}}],["up.page.ts:19",{"_index":1017,"title":{},"body":{"components/SignUpPage.html":{}}}],["up.page.ts:20",{"_index":1022,"title":{},"body":{"components/SignUpPage.html":{}}}],["up.page.ts:21",{"_index":1023,"title":{},"body":{"components/SignUpPage.html":{}}}],["up.page.ts:26",{"_index":1015,"title":{},"body":{"components/SignUpPage.html":{}}}],["up.page.ts:29",{"_index":1019,"title":{},"body":{"components/SignUpPage.html":{}}}],["up.page.ts:30",{"_index":1020,"title":{},"body":{"components/SignUpPage.html":{}}}],["up.page.ts:31",{"_index":1021,"title":{},"body":{"components/SignUpPage.html":{}}}],["up.page.ts:32",{"_index":1018,"title":{},"body":{"components/SignUpPage.html":{}}}],["up.page.ts:34",{"_index":1024,"title":{},"body":{"components/SignUpPage.html":{}}}],["up.page.ts:36",{"_index":1016,"title":{},"body":{"components/SignUpPage.html":{}}}],["up.page.ts:45",{"_index":1014,"title":{},"body":{"components/SignUpPage.html":{}}}],["up/sign",{"_index":418,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SignUpPage.html":{},"modules/SignUpPageModule.html":{},"coverage.html":{}}}],["update",{"_index":688,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/Fetch-2.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess-2.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"miscellaneous/variables.html":{}}}],["update(payload.data",{"_index":1476,"title":{},"body":{"injectables/UserEffects.html":{}}}],["update(updation",{"_index":856,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["update_credit",{"_index":702,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["update_credit_failed",{"_index":704,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["update_credit_success",{"_index":703,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["update_generated_log",{"_index":792,"title":{},"body":{"classes/Fetch-2.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess-2.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["update_generated_log_failed",{"_index":794,"title":{},"body":{"classes/Fetch-2.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess-2.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["update_generated_log_success",{"_index":793,"title":{},"body":{"classes/Fetch-2.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess-2.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["update_log",{"_index":711,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["update_log_failed",{"_index":714,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["update_log_success",{"_index":713,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updatecredit",{"_index":739,"title":{"classes/UpdateCredit.html":{}},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserEffects.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["updatecreditfailed",{"_index":743,"title":{"classes/UpdateCreditFailed.html":{}},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["updatecreditsuccess",{"_index":742,"title":{"classes/UpdateCreditSuccess.html":{}},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["updategeneratedlog",{"_index":797,"title":{"classes/UpdateGeneratedLog.html":{}},"body":{"classes/Fetch-2.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess-2.html":{},"injectables/HistoryEffects.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["updategeneratedlogsuccess",{"_index":801,"title":{"classes/UpdateGeneratedLogSuccess.html":{}},"body":{"classes/Fetch-2.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess-2.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["updateinfo",{"_index":687,"title":{"classes/UpdateInfo.html":{}},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["updatelog",{"_index":746,"title":{"classes/UpdateLog.html":{}},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserEffects.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["updatelogfailed",{"_index":749,"title":{"classes/UpdateLogFailed.html":{}},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["updatelogsuccess",{"_index":748,"title":{"classes/UpdateLogSuccess.html":{}},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["updation",{"_index":851,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["updation[payload.questionid",{"_index":852,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["urltree",{"_index":901,"title":{},"body":{"guards/InTestGuard.html":{}}}],["useclass",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":26,"title":{"interfaces/User.html":{}},"body":{"components/AccountPage.html":{},"modules/AppModule.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"components/EditProfileModalPage.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"interfaces/IAppState.html":{},"guards/InTestGuard.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"classes/LoginSuccess.html":{},"guards/OnFinishTestGuard.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"components/SignUpPage.html":{},"injectables/SysLogEffects.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useraction",{"_index":94,"title":{},"body":{"components/AccountPage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["useraction.all",{"_index":1495,"title":{},"body":{"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["useraction.editinfo",{"_index":768,"title":{},"body":{"components/EditProfileModalPage.html":{},"injectables/UserEffects.html":{}}}],["useraction.editinfofailed",{"_index":1423,"title":{},"body":{"injectables/UserEffects.html":{}}}],["useraction.editinfosuccess",{"_index":1422,"title":{},"body":{"injectables/UserEffects.html":{}}}],["useraction.forgotpassword",{"_index":959,"title":{},"body":{"components/LoginPage.html":{},"injectables/UserEffects.html":{}}}],["useraction.forgotpasswordsentfailed",{"_index":1428,"title":{},"body":{"injectables/UserEffects.html":{}}}],["useraction.forgotpasswordsentsuccess",{"_index":1427,"title":{},"body":{"injectables/UserEffects.html":{}}}],["useraction.getinfo",{"_index":108,"title":{},"body":{"components/AccountPage.html":{},"injectables/UserEffects.html":{}}}],["useraction.login",{"_index":952,"title":{},"body":{"components/LoginPage.html":{},"injectables/UserEffects.html":{}}}],["useraction.loginfailed(err",{"_index":1445,"title":{},"body":{"injectables/UserEffects.html":{}}}],["useraction.loging",{"_index":949,"title":{},"body":{"components/LoginPage.html":{}}}],["useraction.logingfailed",{"_index":1458,"title":{},"body":{"injectables/UserEffects.html":{}}}],["useraction.loginsuccess",{"_index":1441,"title":{},"body":{"injectables/UserEffects.html":{}}}],["useraction.signin",{"_index":1026,"title":{},"body":{"components/SignUpPage.html":{},"injectables/UserEffects.html":{}}}],["useraction.signinfailed",{"_index":1468,"title":{},"body":{"injectables/UserEffects.html":{}}}],["useraction.signinsuccess",{"_index":1467,"title":{},"body":{"injectables/UserEffects.html":{}}}],["useraction.signout",{"_index":126,"title":{},"body":{"components/AccountPage.html":{}}}],["useraction.updatecredit",{"_index":1475,"title":{},"body":{"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["useraction.updatecreditfailed",{"_index":1481,"title":{},"body":{"injectables/UserEffects.html":{}}}],["useraction.updatecreditsuccess",{"_index":1480,"title":{},"body":{"injectables/UserEffects.html":{}}}],["useraction.updatelog",{"_index":1484,"title":{},"body":{"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["useraction.updatelogfailed",{"_index":1487,"title":{},"body":{"injectables/UserEffects.html":{}}}],["useraction.updatelogsuccess",{"_index":1486,"title":{},"body":{"injectables/UserEffects.html":{}}}],["usereffects",{"_index":342,"title":{"injectables/UserEffects.html":{}},"body":{"modules/AppModule.html":{},"injectables/UserEffects.html":{},"coverage.html":{}}}],["useremail",{"_index":738,"title":{},"body":{"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{}}}],["userreducer",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["userreducer(state",{"_index":1717,"title":{},"body":{"miscellaneous/functions.html":{}}}],["userservice",{"_index":40,"title":{"injectables/UserService.html":{}},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/BeforeStartPage.html":{},"components/TabsPage.html":{},"components/TestRoomPage.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usertype",{"_index":1138,"title":{},"body":{"components/TabsPage.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["usertype.inactivated",{"_index":1140,"title":{},"body":{"components/TabsPage.html":{}}}],["usevalue",{"_index":392,"title":{},"body":{"modules/AppModule.html":{}}}],["v",{"_index":453,"title":{},"body":{"components/BeforeStartPage.html":{}}}],["v1.1.3b",{"_index":963,"title":{},"body":{"components/LoginPage.html":{}}}],["val",{"_index":1351,"title":{},"body":{"components/TrainingPage.html":{}}}],["value",{"_index":235,"title":{},"body":{"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"injectables/CategoryEffects.html":{},"injectables/ConfigEffects.html":{},"classes/EditInfo.html":{},"classes/EditInfoFailed.html":{},"classes/EditInfoSuccess.html":{},"classes/Fetch.html":{},"classes/Fetch-1.html":{},"classes/Fetch-2.html":{},"classes/Fetch-3.html":{},"classes/FetchFailed.html":{},"classes/FetchFailed-1.html":{},"classes/FetchGeneratedLog.html":{},"classes/FetchGeneratedLogSuccess.html":{},"classes/FetchSuccess.html":{},"classes/FetchSuccess-1.html":{},"classes/FetchSuccess-2.html":{},"classes/FetchSuccess-3.html":{},"classes/ForgotPassword.html":{},"classes/ForgotPasswordSentFailed.html":{},"classes/ForgotPasswordSentSuccess.html":{},"classes/GetInfo.html":{},"classes/GetInfoFailed.html":{},"classes/GetInfoSuccess.html":{},"injectables/HistoryEffects.html":{},"classes/InitInfo.html":{},"classes/Login.html":{},"classes/LoginFailed.html":{},"classes/LoginG.html":{},"classes/LoginGFailed.html":{},"classes/LoginGSuccess.html":{},"components/LoginPage.html":{},"classes/LoginSuccess.html":{},"classes/PayCredits.html":{},"classes/PayCreditsSuccess.html":{},"injectables/QuestionEffects.html":{},"classes/SignIn.html":{},"classes/SignInFailed.html":{},"classes/SignInSuccess.html":{},"classes/SignOut.html":{},"injectables/SysLogEffects.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"injectables/TimeService.html":{},"components/TrainingPage.html":{},"classes/UpdateCredit.html":{},"classes/UpdateCreditFailed.html":{},"classes/UpdateCreditSuccess.html":{},"classes/UpdateGeneratedLog.html":{},"classes/UpdateGeneratedLogSuccess.html":{},"classes/UpdateInfo.html":{},"classes/UpdateLog.html":{},"classes/UpdateLogFailed.html":{},"classes/UpdateLogSuccess.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.correct).length",{"_index":1170,"title":{},"body":{"components/TestResultPage.html":{}}}],["value.error",{"_index":954,"title":{},"body":{"components/LoginPage.html":{}}}],["value.key",{"_index":557,"title":{},"body":{"injectables/CategoryEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/QuestionEffects.html":{},"components/TrainingPage.html":{}}}],["value.name",{"_index":1241,"title":{},"body":{"components/TestRoomPage.html":{}}}],["value.payload.val",{"_index":559,"title":{},"body":{"injectables/CategoryEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/QuestionEffects.html":{},"components/TrainingPage.html":{}}}],["value.payload.val()).getdownloadurl().subscribe((val",{"_index":1365,"title":{},"body":{"components/TrainingPage.html":{}}}],["value.system",{"_index":666,"title":{},"body":{"injectables/DataService.html":{}}}],["var",{"_index":142,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["variable",{"_index":1617,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1743,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verification",{"_index":774,"title":{},"body":{"components/EditProfileModalPage.html":{},"components/VerifyEmailPage.html":{}}}],["verify",{"_index":180,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"modules/VerifyEmailPageModule.html":{},"components/WelcomePage.html":{}}}],["verifyemailpage",{"_index":179,"title":{"components/VerifyEmailPage.html":{}},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"modules/VerifyEmailPageModule.html":{},"components/WelcomePage.html":{},"coverage.html":{},"index.html":{}}}],["verifyemailpagemodule",{"_index":1545,"title":{"modules/VerifyEmailPageModule.html":{}},"body":{"modules/VerifyEmailPageModule.html":{},"index.html":{},"modules.html":{}}}],["verifying",{"_index":1542,"title":{},"body":{"components/VerifyEmailPage.html":{}}}],["video",{"_index":136,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{}}}],["view",{"_index":236,"title":{},"body":{"components/AdPagePage.html":{}}}],["viewchild",{"_index":1217,"title":{},"body":{"components/TestRoomPage.html":{}}}],["viewchild(ionslides",{"_index":1215,"title":{},"body":{"components/TestRoomPage.html":{}}}],["void",{"_index":55,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"injectables/CategoryService.html":{},"components/ChallengePage.html":{},"injectables/DataService.html":{},"components/EditProfileModalPage.html":{},"injectables/HistoryService.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"injectables/SyslogService.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"injectables/TimeService.html":{},"components/TrainingPage.html":{},"injectables/UserService.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["wait",{"_index":241,"title":{},"body":{"components/AdPagePage.html":{}}}],["want",{"_index":1083,"title":{},"body":{"components/Tab1Page.html":{}}}],["watch",{"_index":135,"title":{},"body":{"components/AccountPage.html":{}}}],["webclientid",{"_index":1451,"title":{},"body":{"injectables/UserEffects.html":{}}}],["websql",{"_index":377,"title":{},"body":{"modules/AppModule.html":{}}}],["webview",{"_index":1673,"title":{},"body":{"dependencies.html":{}}}],["welcome",{"_index":183,"title":{},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{}}}],["welcome.page",{"_index":1586,"title":{},"body":{"modules/WelcomePageModule.html":{}}}],["welcome.page.html",{"_index":1552,"title":{},"body":{"components/WelcomePage.html":{}}}],["welcome.page.scss",{"_index":1551,"title":{},"body":{"components/WelcomePage.html":{}}}],["welcome/welcome.module#welcomepagemodule",{"_index":437,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["welcomepage",{"_index":182,"title":{"components/WelcomePage.html":{}},"body":{"components/AccountPage.html":{},"components/AdPagePage.html":{},"components/AppComponent.html":{},"components/BeforeStartPage.html":{},"components/CatInfoModalPage.html":{},"components/ChallengePage.html":{},"components/EditProfileModalPage.html":{},"components/LoginPage.html":{},"components/SignUpPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"components/TestResultPage.html":{},"components/TestRoomPage.html":{},"components/TrainingPage.html":{},"components/VerifyEmailPage.html":{},"components/WelcomePage.html":{},"modules/WelcomePageModule.html":{},"coverage.html":{},"index.html":{}}}],["welcomepagemodule",{"_index":1582,"title":{"modules/WelcomePageModule.html":{}},"body":{"modules/WelcomePageModule.html":{},"index.html":{},"modules.html":{}}}],["whitelist",{"_index":1677,"title":{},"body":{"dependencies.html":{}}}],["windows",{"_index":1680,"title":{},"body":{"dependencies.html":{}}}],["write",{"_index":1046,"title":{"classes/Write.html":{}},"body":{"injectables/SysLogEffects.html":{},"injectables/SyslogService.html":{},"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["write(message",{"_index":1068,"title":{},"body":{"injectables/SyslogService.html":{}}}],["write_failed",{"_index":1591,"title":{},"body":{"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["write_success",{"_index":1590,"title":{},"body":{"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writefailed",{"_index":1593,"title":{"classes/WriteFailed.html":{}},"body":{"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["writegeneratedlog",{"_index":865,"title":{},"body":{"injectables/HistoryService.html":{}}}],["writegeneratedlog(data",{"_index":872,"title":{},"body":{"injectables/HistoryService.html":{}}}],["writelog",{"_index":1505,"title":{},"body":{"injectables/UserService.html":{}}}],["writelog(time",{"_index":1514,"title":{},"body":{"injectables/UserService.html":{}}}],["writesuccess",{"_index":1592,"title":{"classes/WriteSuccess.html":{}},"body":{"classes/Write.html":{},"classes/WriteFailed.html":{},"classes/WriteSuccess.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["xong",{"_index":230,"title":{},"body":{"components/AdPagePage.html":{}}}],["xuất",{"_index":74,"title":{},"body":{"components/AccountPage.html":{}}}],["you'll",{"_index":1082,"title":{},"body":{"components/Tab1Page.html":{}}}],["you\\'ll",{"_index":1103,"title":{},"body":{"components/Tab1Page.html":{}}}],["z0",{"_index":1245,"title":{},"body":{"components/TestRoomPage.html":{}}}],["za",{"_index":1244,"title":{},"body":{"components/TestRoomPage.html":{}}}],["zone.js",{"_index":1694,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":199,"title":{},"body":{"modules/AccountPageModule.html":{},"modules/AdPagePageModule.html":{},"modules/AppModule.html":{},"modules/BeforeStartPageModule.html":{},"modules/CatInfoModalPageModule.html":{},"modules/ChallengePageModule.html":{},"modules/EditProfileModalPageModule.html":{},"modules/LoginPageModule.html":{},"modules/SignUpPageModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"modules/TestResultPageModule.html":{},"modules/TestRoomPageModule.html":{},"modules/TrainingPageModule.html":{},"modules/VerifyEmailPageModule.html":{},"modules/WelcomePageModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccountPage.html":{"url":"components/AccountPage.html","title":"component - AccountPage","body":"\n                   \n\n\n\n\n\n  Components\n  AccountPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/account/account.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-account\n            \n\n            \n                styleUrls\n                ./account.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./account.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayName\n                            \n                            \n                                email\n                            \n                            \n                                phone\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                openEditProfile\n                            \n                            \n                                showAds\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth, modalController: ModalController, db: AngularFireDatabase, platform: Platform, userService: UserService, router: Router, storage: Storage, dataService: DataService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/account/account.page.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account/account.page.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            openEditProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openEditProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account/account.page.ts:57\n                \n            \n\n\n            \n                \n                    Mở profile của user\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAds\n                        \n                        \n                    \n                \n            \n            \n                \nshowAds()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account/account.page.ts:78\n                \n            \n\n\n            \n                \n                    Điều hướng đến trang quảng cáo nếu banner không load được\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signOut\n                        \n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account/account.page.ts:66\n                \n            \n\n\n            \n                \n                    Đăng xuất\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/account/account.page.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/account/account.page.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/account/account.page.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account/account.page.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { ModalController, Platform } from '@ionic/angular';\nimport { EditProfileModalPage } from '../edit-profile-modal/edit-profile-modal.page';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { DataService } from '../data.service';\nimport { Store } from '@ngrx/store';\nimport IAppState from '../IAppState';\nimport { Observable } from 'rxjs';\nimport { User } from '../states/models/user.model';\nimport * as UserAction from '../states/actions/user.actions';\nimport { UserService } from '../services/user.service';\n\nimport { CategoryService } from '../services/category.service';\nimport { Storage } from '@ionic/storage';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.page.html',\n  styleUrls: ['./account.page.scss'],\n})\nexport class AccountPage implements OnInit {\n\n\n\n  constructor(private afAuth: AngularFireAuth,\n    private modalController: ModalController,\n    private db: AngularFireDatabase,\n    private platform: Platform,\n    private userService: UserService,\n    private router: Router,\n    private storage: Storage,\n    private dataService: DataService, private store: Store) {\n\n\n  }\n\n\n\n  email;\n  displayName;\n  phone;\n\n\n\n  user: Observable;\n\n  ngOnInit() {\n    this.user = this.store.select('user');\n    //this.store.dispatch(new UserAction.GetInfo({ email: this.afAuth.auth.currentUser.email, annonymous: this.dataService.config['annonymous_mode'] }));\n  }\n\n  /**\n   * Mở profile của user\n   */\n  async openEditProfile() {\n    console.log(\"Open modal\");\n    const modal = await this.modalController.create({ component: EditProfileModalPage });\n    return await modal.present();\n  }\n\n  /**\n   * Đăng xuất\n   */\n  signOut() {\n    console.log(\"sign out\");\n    this.storage.set(\"auto_login\", false);\n    this.storage.set(\"login_email\", \"\");\n    this.storage.set(\"login_password\", \"\");\n    this.afAuth.auth.signOut();\n    this.store.dispatch(new UserAction.SignOut());\n  }\n\n  /**\n   * Điều hướng đến trang quảng cáo nếu banner không load được\n   */\n  showAds() {\n    this.router.navigate([\"ad-page/\"]);\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n\n    Account\n  \n\n\n\n  \n    \n      \n      Your information\n      Edit\n    \n    \n      Email: {{u.currentUser.email}}\n      Name: {{u.currentUser.displayName}}\n      Phone: {{u.currentUser.phoneNumber}}\n    \n  \n  \n    \n      \n      Your credit(s)\n\n    \n    \n      You have {{u.data['credits']}} credit(s)\n      Watch video reward\n    \n  \n\n    \n\n    \n                \n                    ./account.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Account                    Your information      Edit              Email: {{u.currentUser.email}}      Name: {{u.currentUser.displayName}}      Phone: {{u.currentUser.phoneNumber}}                        Your credit(s)              You have {{u.data[\\'credits\\']}} credit(s)      Watch video reward      '\n    var COMPONENTS = [{'name': 'AccountPage', 'selector': 'app-account'},{'name': 'AdPagePage', 'selector': 'app-ad-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BeforeStartPage', 'selector': 'app-before-start'},{'name': 'CatInfoModalPage', 'selector': 'app-cat-info-modal'},{'name': 'ChallengePage', 'selector': 'app-challenge'},{'name': 'EditProfileModalPage', 'selector': 'app-edit-profile-modal'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'SignUpPage', 'selector': 'app-sign-up'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TestResultPage', 'selector': 'app-test-result'},{'name': 'TestRoomPage', 'selector': 'app-test-room'},{'name': 'TrainingPage', 'selector': 'app-training'},{'name': 'VerifyEmailPage', 'selector': 'app-verify-email'},{'name': 'WelcomePage', 'selector': 'app-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccountPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountPageModule.html":{"url":"modules/AccountPageModule.html","title":"module - AccountPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountPageModule\n\n\n\ncluster_AccountPageModule_declarations\n\n\n\n\nAccountPage\n\nAccountPage\n\n\n\nAccountPageModule\n\nAccountPageModule\n\nAccountPageModule -->\n\nAccountPage->AccountPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/account/account.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccountPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AccountPage } from './account.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AccountPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AccountPage]\n})\nexport class AccountPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdPagePage.html":{"url":"components/AdPagePage.html","title":"component - AdPagePage","body":"\n                   \n\n\n\n\n\n  Components\n  AdPagePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ad-page/ad-page.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ad-page\n            \n\n            \n                styleUrls\n                ./ad-page.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./ad-page.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                caption\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                giveReward\n                            \n                            \n                                loadAds\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ad-page/ad-page.page.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            giveReward\n                        \n                        \n                    \n                \n            \n            \n                \ngiveReward()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ad-page/ad-page.page.ts:68\n                \n            \n\n\n            \n                \n                    Nhận thưởng sau khi quảng cáo chạy xong\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadAds\n                        \n                        \n                    \n                \n            \n            \n                \nloadAds()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ad-page/ad-page.page.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ad-page/ad-page.page.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            caption\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"View this video to get more credits. If it did not show, please wait at the moment\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ad-page/ad-page.page.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Platform } from '@ionic/angular';\nimport { Component, OnInit } from '@angular/core';\n\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-ad-page',\n  templateUrl: './ad-page.page.html',\n  styleUrls: ['./ad-page.page.scss'],\n})\nexport class AdPagePage implements OnInit {\n\n  caption = \"View this video to get more credits. If it did not show, please wait at the moment\";\n\n  constructor(private platform: Platform, private userService: UserService) {\n    let adId = 'ca-app-pub-3940256099942544/5224354917';\n    let banner = \"ca-app-pub-9478315162108738/3608514627\";\n    if (this.platform.is('android')) {\n      adId = 'ca-app-pub-3940256099942544/5224354917';\n    } else if (this.platform.is('ios')) {\n      adId = 'ca-app-pub-9478315162108738/7134245604';\n    }\n\n\n\n    // this.admob.rewardVideo.config(config);\n    // this.admob.on(this.admob.events.REWARD_VIDEO_REWARD).subscribe(() => { this.giveReward() });\n    // if (this.admob.rewardVideo.isReady()) {\n    //   this.admob.rewardVideo.prepare().then(() => {\n\n    //     this.admob.rewardVideo.show();\n\n    //   })\n    // }\n\n    // this.admob.setOptions({\n    //   rewardedAdId: adId,\n    //   isTesting: true,\n    //   publisherId: banner,\n    //   autoShowRewarded: true\n    // });\n\n    // this.admob.onRewardedAd().subscribe(() => {\n    //   this.giveReward();\n    // })\n\n    // this.admob.onAdLoaded().subscribe((ad) => {\n    //   this.admob.showRewardedAd();\n    // });\n\n    //this.admob.onRewardedAd().subscribe(() => { this.giveReward() });\n\n    // if (this.platform.is('android') || this.platform.is('ios')) {\n    //   this.admob.requestRewardedAd();\n    // }\n    // else {\n    //   this.caption = \"Your device does not support Advertise\";\n    // }\n  }\n\n  loadAds() {\n\n  }\n\n  /**\n   * Nhận thưởng sau khi quảng cáo chạy xong\n   */\n  giveReward() {\n    this.userService.addCredits(50, this.userService.ADD_MORE_CREDITS);\n    this.caption = \"You have been gotten some credits\";\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    Get more credits\n  \n\n\n\n  \n    {{caption}}\n  \n  \n    Back\n  \n\n    \n\n    \n                \n                    ./ad-page.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Get more credits        {{caption}}        Back  '\n    var COMPONENTS = [{'name': 'AccountPage', 'selector': 'app-account'},{'name': 'AdPagePage', 'selector': 'app-ad-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BeforeStartPage', 'selector': 'app-before-start'},{'name': 'CatInfoModalPage', 'selector': 'app-cat-info-modal'},{'name': 'ChallengePage', 'selector': 'app-challenge'},{'name': 'EditProfileModalPage', 'selector': 'app-edit-profile-modal'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'SignUpPage', 'selector': 'app-sign-up'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TestResultPage', 'selector': 'app-test-result'},{'name': 'TestRoomPage', 'selector': 'app-test-room'},{'name': 'TrainingPage', 'selector': 'app-training'},{'name': 'VerifyEmailPage', 'selector': 'app-verify-email'},{'name': 'WelcomePage', 'selector': 'app-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdPagePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdPagePageModule.html":{"url":"modules/AdPagePageModule.html","title":"module - AdPagePageModule","body":"\n                   \n\n\n\n\n    Modules\n    AdPagePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdPagePageModule\n\n\n\ncluster_AdPagePageModule_declarations\n\n\n\n\nAdPagePage\n\nAdPagePage\n\n\n\nAdPagePageModule\n\nAdPagePageModule\n\nAdPagePageModule -->\n\nAdPagePage->AdPagePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ad-page/ad-page.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdPagePage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AdPagePage } from './ad-page.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdPagePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AdPagePage]\n})\nexport class AdPagePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showSplash\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeApp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, splashScreen: SplashScreen, statusBar: StatusBar, dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        splashScreen\n                                                  \n                                                        \n                                                                    SplashScreen\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusBar\n                                                  \n                                                        \n                                                                    StatusBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeApp\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeApp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSplash\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { Platform } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\nimport { timer } from 'rxjs/observable/timer';\nimport { DataService } from './data.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar,\n    private dataService: DataService\n  ) {\n    this.initializeApp();\n  }\n\n  showSplash = true;\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n      timer(3000).subscribe(() => this.showSplash = false) // \n    \n\n    \n        \n  \n    \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    '\n    var COMPONENTS = [{'name': 'AccountPage', 'selector': 'app-account'},{'name': 'AdPagePage', 'selector': 'app-ad-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BeforeStartPage', 'selector': 'app-before-start'},{'name': 'CatInfoModalPage', 'selector': 'app-cat-info-modal'},{'name': 'ChallengePage', 'selector': 'app-challenge'},{'name': 'EditProfileModalPage', 'selector': 'app-edit-profile-modal'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'SignUpPage', 'selector': 'app-sign-up'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TestResultPage', 'selector': 'app-test-result'},{'name': 'TestRoomPage', 'selector': 'app-test-room'},{'name': 'TrainingPage', 'selector': 'app-training'},{'name': 'VerifyEmailPage', 'selector': 'app-verify-email'},{'name': 'WelcomePage', 'selector': 'app-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCatInfoModalPageModule\n\nCatInfoModalPageModule\n\nAppModule -->\n\nCatInfoModalPageModule->AppModule\n\n\n\n\n\nEditProfileModalPageModule\n\nEditProfileModalPageModule\n\nAppModule -->\n\nEditProfileModalPageModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CatInfoModalPageModule\n                        \n                        \n                            EditProfileModalPageModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy, ActivatedRoute } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { AngularFireStorageModule, StorageBucket } from '@angular/fire/storage';\n\nimport { environment } from '../environments/environment';\nimport { EditProfileModalPageModule } from './edit-profile-modal/edit-profile-modal.module';\nimport { MarkdownModule, MarkedOptions } from 'ngx-markdown';\nimport { IonicStorageModule } from '@ionic/storage';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { userReducer } from '../app/states/reducers/user.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { UserEffects } from './states/effects/user.effects';\nimport { configReducer } from './states/reducers/config.reducer';\nimport { ConfigEffects } from './states/effects/config.effect';\nimport { AdMob } from \"@admob-plus/ionic\";\nimport { CategoryEffects } from './states/effects/category.effect';\nimport { categoryReducer } from './states/reducers/category.reducer';\nimport { CatInfoModalPageModule } from './cat-info-modal/cat-info-modal.module';\nimport { historyReducer } from './states/reducers/history.reducer';\nimport HistoryEffects from './states/effects/history.effect';\nimport { QuestionEffects } from './states/effects/question.effect';\nimport { questionReducer } from './states/reducers/question.reducer';\nimport { syslogReducer } from './states/reducers/syslog.reducer';\nimport { GooglePlus } from '@ionic-native/google-plus/ngx';\n\n@NgModule({\n  declarations: [AppComponent],\n  entryComponents: [],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot({ hardwareBackButton: false, swipeBackEnabled: false }),\n    IonicStorageModule.forRoot({\n      name: \"__itpassportdb\",\n      driverOrder: ['indexeddb', 'sqlite', 'websql']\n    }),\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase, 'Firebase'),\n    AngularFireAuthModule,\n    AngularFireDatabaseModule,\n    AngularFireStorageModule,\n    EditProfileModalPageModule,\n    CatInfoModalPageModule,\n\n    StoreModule.forRoot({\n      user: userReducer,\n      config: configReducer,\n      category: categoryReducer,\n      history: historyReducer,\n      question: questionReducer,\n      syslog: syslogReducer\n    }),\n    StoreDevtoolsModule.instrument({ maxAge: 10 }),\n    EffectsModule.forRoot([UserEffects, ConfigEffects, CategoryEffects, HistoryEffects, QuestionEffects]),\n    MarkdownModule.forRoot({\n      markedOptions: {\n        provide: MarkedOptions,\n        useValue: {\n          gfm: true,\n          tables: true,\n          breaks: false,\n          pedantic: true,\n          sanitize: true,\n          smartLists: true,\n          smartypants: true,\n        },\n      },\n    })\n  ],\n  providers: [\n    AdMob,\n    StatusBar,\n    SplashScreen,\n    GooglePlus,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    { provide: StorageBucket, useValue: 'gs://itpassport-9ccc9.appspot.com/' }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { InTestGuard } from './guards/in-test.guard';\nimport { CanDeactivate } from '@angular/router/src/utils/preactivation';\nimport { BeforeTestGuard } from './guards/before-test.guard';\nimport { OnFinishTestGuard } from './guards/on-finish-test.guard';\n\nconst routes: Routes = [\n  { path: '', loadChildren: './login/login.module#LoginPageModule' },\n  { path: 'sign-up', loadChildren: './sign-up/sign-up.module#SignUpPageModule' },\n  { path: 'verify-email', loadChildren: './verify-email/verify-email.module#VerifyEmailPageModule' },\n  { path: 'main', loadChildren: './tabs/tabs.module#TabsPageModule' },\n  { path: 'edit-profile-modal', loadChildren: './edit-profile-modal/edit-profile-modal.module#EditProfileModalPageModule' },\n  { path: 'training', loadChildren: './training/training.module#TrainingPageModule' },\n  { path: 'before-start', loadChildren: './before-start/before-start.module#BeforeStartPageModule', canActivate: [BeforeTestGuard] },\n  { path: 'test-room', loadChildren: './test-room/test-room.module#TestRoomPageModule', canActivate: [OnFinishTestGuard], canDeactivate: [InTestGuard] },\n  { path: 'test-result', loadChildren: './test-result/test-result.module#TestResultPageModule' },\n  { path: 'cat-info-modal', loadChildren: './cat-info-modal/cat-info-modal.module#CatInfoModalPageModule' },\n  { path: 'welcome', loadChildren: './welcome/welcome.module#WelcomePageModule' },\n  { path: 'challenge', loadChildren: './challenge/challenge.module#ChallengePageModule' },\n  { path: 'ad-page', loadChildren: './ad-page/ad-page.module#AdPagePageModule' }\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BeforeStartPage.html":{"url":"components/BeforeStartPage.html","title":"component - BeforeStartPage","body":"\n                   \n\n\n\n\n\n  Components\n  BeforeStartPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/before-start/before-start.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-before-start\n            \n\n            \n                styleUrls\n                ./before-start.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./before-start.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isEnoughCredit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                start\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, router: Router, userService: UserService, timeService: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/before-start/before-start.page.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goBack\n                        \n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n            \n                \n                    Defined in src/app/before-start/before-start.page.ts:48\n                \n            \n\n\n            \n                \n                    Quay về trang tài khoản\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/before-start/before-start.page.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            start\n                        \n                        \n                    \n                \n            \n            \n                \nstart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/before-start/before-start.page.ts:29\n                \n            \n\n\n            \n                \n                    Bắt đầu bài kiểm tra\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEnoughCredit\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/before-start/before-start.page.ts:21\n                            \n                        \n\n                \n                    \n                        Kiểm tra khi có đủ credit\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\nimport { TimeService } from '../services/time.service';\n\n@Component({\n  selector: 'app-before-start',\n  templateUrl: './before-start.page.html',\n  styleUrls: ['./before-start.page.scss'],\n})\nexport class BeforeStartPage implements OnInit {\n\n  constructor(private dataService: DataService, private router: Router, private userService: UserService, private timeService: TimeService) {\n    this.isEnoughCredit = this.userService.isEnoughCredit();\n  }\n\n  /**\n   * Kiểm tra khi có đủ credit\n   */\n  isEnoughCredit = false;\n\n  ngOnInit() {\n  }\n\n  /**\n   * Bắt đầu bài kiểm tra\n   */\n  start() {\n    if (this.userService.isEnoughCredit()) {\n\n      this.userService.addCredits(-this.dataService.config['price'], this.userService.PAY_FOR_QUESTION);\n      this.dataService.navState['canEnterBeforeStart'] = false;\n      this.dataService.navState['testing'] = true;\n      this.dataService.navState['testFinish'] = false;\n      this.timeService.resetTimer();\n      this.timeService.startTimer();\n\n    }\n    else {\n\n    }\n  }\n\n  /**\n   * Quay về trang tài khoản\n   */\n  goBack() {\n    this.router.navigate(['/main/account']);\n  }\n\n}\n    \n\n    \n        \n  \n    Before Start\n  \n\n\n\n  \n    \n      Are you ready?\n    \n    \n      \n        \n        Time: Infinity\n      \n      \n        \n        Quiz size: 10\n      \n      \n        \n          \n            \n              \n                Back\n              \n            \n            \n              \n                Start\n              \n            \n          \n        \n\n      \n    \n  \n\n    \n\n    \n                \n                    ./before-start.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Before Start              Are you ready?                              Time: Infinity                            Quiz size: 10                                                                        Back                                                                    Start                                                        '\n    var COMPONENTS = [{'name': 'AccountPage', 'selector': 'app-account'},{'name': 'AdPagePage', 'selector': 'app-ad-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BeforeStartPage', 'selector': 'app-before-start'},{'name': 'CatInfoModalPage', 'selector': 'app-cat-info-modal'},{'name': 'ChallengePage', 'selector': 'app-challenge'},{'name': 'EditProfileModalPage', 'selector': 'app-edit-profile-modal'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'SignUpPage', 'selector': 'app-sign-up'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TestResultPage', 'selector': 'app-test-result'},{'name': 'TestRoomPage', 'selector': 'app-test-room'},{'name': 'TrainingPage', 'selector': 'app-training'},{'name': 'VerifyEmailPage', 'selector': 'app-verify-email'},{'name': 'WelcomePage', 'selector': 'app-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BeforeStartPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BeforeStartPageModule.html":{"url":"modules/BeforeStartPageModule.html","title":"module - BeforeStartPageModule","body":"\n                   \n\n\n\n\n    Modules\n    BeforeStartPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BeforeStartPageModule\n\n\n\ncluster_BeforeStartPageModule_declarations\n\n\n\n\nBeforeStartPage\n\nBeforeStartPage\n\n\n\nBeforeStartPageModule\n\nBeforeStartPageModule\n\nBeforeStartPageModule -->\n\nBeforeStartPage->BeforeStartPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/before-start/before-start.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BeforeStartPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { BeforeStartPage } from './before-start.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BeforeStartPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [BeforeStartPage]\n})\nexport class BeforeStartPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/BeforeTestGuard.html":{"url":"guards/BeforeTestGuard.html","title":"guard - BeforeTestGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    BeforeTestGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/before-test.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Protect the router: Allow navigate to Before Start if not be in test\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/before-test.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/before-test.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { DataService } from '../data.service';\n\n/**\n * Protect the router: Allow navigate to Before Start if not be in test\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class BeforeTestGuard implements CanActivate {\n  constructor(private dataService: DataService) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    return this.dataService.navState['canEnterBeforeStart'];\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CatInfoModalPage.html":{"url":"components/CatInfoModalPage.html","title":"component - CatInfoModalPage","body":"\n                   \n\n\n\n\n\n  Components\n  CatInfoModalPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/cat-info-modal/cat-info-modal.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cat-info-modal\n            \n\n            \n                styleUrls\n                ./cat-info-modal.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./cat-info-modal.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                catDescription\n                            \n                            \n                                category\n                            \n                            \n                                catName\n                            \n                            \n                                subCatList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoryService, modalCtrl: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/cat-info-modal/cat-info-modal.page.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/cat-info-modal/cat-info-modal.page.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/cat-info-modal/cat-info-modal.page.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            catDescription\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/cat-info-modal/cat-info-modal.page.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/cat-info-modal/cat-info-modal.page.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            catName\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/cat-info-modal/cat-info-modal.page.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subCatList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cat-info-modal/cat-info-modal.page.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CategoryService } from '../services/category.service';\nimport { Router } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-cat-info-modal',\n  templateUrl: './cat-info-modal.page.html',\n  styleUrls: ['./cat-info-modal.page.scss'],\n})\nexport class CatInfoModalPage implements OnInit {\n\n  catName;\n  catDescription\n  subCatList: Array;\n\n  category;\n\n  constructor(private categoryService: CategoryService, private modalCtrl: ModalController) {\n    this.category = categoryService.getSelectedCategory();\n    this.subCatList = new Array();\n    this.catName = this.category['title'];\n    this.catDescription = this.category['description'];\n    let keys = Object.keys(this.category);\n    for (let i = 0; i \n    \n\n    \n        \n  \n    Info and Progress\n    Back\n  \n\n\n\n  \n    \n\n    \n    \n      {{catName}}\n      {{catDescription}}\n    \n    \n      \n        {{subCat}}\n        \n          \n            \n              Generated: 0\n            \n            \n              Progress: 0%\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./cat-info-modal.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Info and Progress    Back                      {{catName}}      {{catDescription}}                      {{subCat}}                                            Generated: 0                                      Progress: 0%                                          '\n    var COMPONENTS = [{'name': 'AccountPage', 'selector': 'app-account'},{'name': 'AdPagePage', 'selector': 'app-ad-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BeforeStartPage', 'selector': 'app-before-start'},{'name': 'CatInfoModalPage', 'selector': 'app-cat-info-modal'},{'name': 'ChallengePage', 'selector': 'app-challenge'},{'name': 'EditProfileModalPage', 'selector': 'app-edit-profile-modal'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'SignUpPage', 'selector': 'app-sign-up'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TestResultPage', 'selector': 'app-test-result'},{'name': 'TestRoomPage', 'selector': 'app-test-room'},{'name': 'TrainingPage', 'selector': 'app-training'},{'name': 'VerifyEmailPage', 'selector': 'app-verify-email'},{'name': 'WelcomePage', 'selector': 'app-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CatInfoModalPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CatInfoModalPageModule.html":{"url":"modules/CatInfoModalPageModule.html","title":"module - CatInfoModalPageModule","body":"\n                   \n\n\n\n\n    Modules\n    CatInfoModalPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CatInfoModalPageModule\n\n\n\ncluster_CatInfoModalPageModule_declarations\n\n\n\n\nCatInfoModalPage\n\nCatInfoModalPage\n\n\n\nCatInfoModalPageModule\n\nCatInfoModalPageModule\n\nCatInfoModalPageModule -->\n\nCatInfoModalPage->CatInfoModalPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/cat-info-modal/cat-info-modal.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CatInfoModalPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CatInfoModalPage } from './cat-info-modal.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CatInfoModalPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CatInfoModalPage]\n})\nexport class CatInfoModalPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/models/category.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cat\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cat\n                                    \n                                \n                                \n                                    \n                                        cat:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Category {\n    cat: any;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryEffects.html":{"url":"injectables/CategoryEffects.html","title":"injectable - CategoryEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CategoryEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/effects/category.effect.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fetch\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions: Actions, db: AngularFireDatabase)\n                    \n                \n                        \n                            \n                                Defined in src/app/states/effects/category.effect.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fetch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions.pipe(\n        ofType(CategoryAction.FETCH),\n        switchMap(() => this.db.list('titles/').snapshotChanges()),\n        map((changes) => {\n            let categories = changes.map((value) => ({ key: value.key, payload: value.payload.val() }));\n            let cat = {};\n            console.log(categories);\n            for (let i = 0; i  of(new CategoryAction.FetchFailed()))\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/effects/category.effect.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import * as CategoryAction from '../actions/category.action';\nimport { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { map, mergeMap, catchError, switchMap } from 'rxjs/operators';\n\nexport type Action = CategoryAction.All;\n\n@Injectable()\nexport class CategoryEffects {\n    constructor(private actions: Actions, private db: AngularFireDatabase) { }\n\n    @Effect()\n    fetch: Observable = this.actions.pipe(\n        ofType(CategoryAction.FETCH),\n        switchMap(() => this.db.list('titles/').snapshotChanges()),\n        map((changes) => {\n            let categories = changes.map((value) => ({ key: value.key, payload: value.payload.val() }));\n            let cat = {};\n            console.log(categories);\n            for (let i = 0; i  of(new CategoryAction.FetchFailed()))\n    );\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/category.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                category$\n                            \n                            \n                                    Private\n                                selectedKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCategoryTree\n                            \n                            \n                                    Public\n                                getSelectedCategory\n                            \n                            \n                                    Public\n                                selectCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/category.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCategoryTree\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCategoryTree(initLeaf)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/category.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    initLeaf\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSelectedCategory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSelectedCategory()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/category.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            selectCategory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectCategory(key)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/category.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Category\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/category.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/category.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectedKey\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/services/category.service.ts:25\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport IAppState from '../IAppState';\n\nimport * as CategoryAction from '../states/actions/category.action';\nimport { Category } from '../states/models/category.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  category$: Observable;\n  category: Category;\n\n  constructor(store: Store) {\n    this.category$ = store.select('category');\n    store.dispatch(new CategoryAction.Fetch());\n    this.category$.subscribe((payload) => {\n      this.category = payload;\n    })\n  }\n\n  private selectedKey;\n\n  public selectCategory(key) {\n    this.selectedKey = key;\n  }\n\n  public getSelectedCategory() {\n    return this.category['cat'][this.selectedKey];\n  }\n\n  public getCategoryTree(initLeaf) {\n    let majorCat = Object.keys(this.category['cat']);\n    let logByCat = {};\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChallengePage.html":{"url":"components/ChallengePage.html","title":"component - ChallengePage","body":"\n                   \n\n\n\n\n\n  Components\n  ChallengePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/challenge/challenge.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-challenge\n            \n\n            \n                styleUrls\n                ./challenge.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./challenge.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/challenge/challenge.page.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/challenge/challenge.page.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-challenge',\n  templateUrl: './challenge.page.html',\n  styleUrls: ['./challenge.page.scss'],\n})\nexport class ChallengePage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    Challenge\n    \n      Back\n    \n  \n\n\n\n  \n    \n      \n        \n          \n            \n              \n                \n                  challenge['title']\n                \n                \n                  challenge['description']\n                \n                \n            \n            \n              \n            \n          \n        \n      \n    \n\n  \n\n    \n\n    \n                \n                    ./challenge.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Challenge          Back                                                                                                challenge[\\'title\\']                                                  challenge[\\'description\\']                                                                                                                '\n    var COMPONENTS = [{'name': 'AccountPage', 'selector': 'app-account'},{'name': 'AdPagePage', 'selector': 'app-ad-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BeforeStartPage', 'selector': 'app-before-start'},{'name': 'CatInfoModalPage', 'selector': 'app-cat-info-modal'},{'name': 'ChallengePage', 'selector': 'app-challenge'},{'name': 'EditProfileModalPage', 'selector': 'app-edit-profile-modal'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'SignUpPage', 'selector': 'app-sign-up'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TestResultPage', 'selector': 'app-test-result'},{'name': 'TestRoomPage', 'selector': 'app-test-room'},{'name': 'TrainingPage', 'selector': 'app-training'},{'name': 'VerifyEmailPage', 'selector': 'app-verify-email'},{'name': 'WelcomePage', 'selector': 'app-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChallengePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChallengePageModule.html":{"url":"modules/ChallengePageModule.html","title":"module - ChallengePageModule","body":"\n                   \n\n\n\n\n    Modules\n    ChallengePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ChallengePageModule\n\n\n\ncluster_ChallengePageModule_declarations\n\n\n\n\nChallengePage\n\nChallengePage\n\n\n\nChallengePageModule\n\nChallengePageModule\n\nChallengePageModule -->\n\nChallengePage->ChallengePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/challenge/challenge.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ChallengePage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChallengePage } from './challenge.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChallengePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ChallengePage]\n})\nexport class ChallengePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Config.html":{"url":"interfaces/Config.html","title":"interface - Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Config\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/models/config.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        system\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        system\n                                    \n                                \n                                \n                                    \n                                        system:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Config {\n    system: any;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigEffects.html":{"url":"injectables/ConfigEffects.html","title":"injectable - ConfigEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/effects/config.effect.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fetch\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions: Actions, db: AngularFireDatabase, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/states/effects/config.effect.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fetch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions.pipe(\n        ofType(ConfigAction.FETCH),\n        mergeMap(() => this.db.list('config/').snapshotChanges()),\n        map(changes => {\n            let raw = changes.map((value) => ({ key: value.key, payload: value.payload.val() }))\n            let config = {};\n            for (let i = 0; i  of(new ConfigAction.FetchFailed(err.message)))\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/effects/config.effect.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Effect, Actions, ofType } from '@ngrx/effects';\n\nimport { Observable, of, from } from 'rxjs';\n\nimport * as ConfigAction from '../actions/config.action';\nimport { catchError, map, mergeMap, switchMap, delay, tap } from 'rxjs/operators';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { Router } from '@angular/router';\n\nexport type Action = ConfigAction.All;\n\n@Injectable()\nexport class ConfigEffects {\n    constructor(private actions: Actions, private db: AngularFireDatabase, private router: Router) { }\n\n    @Effect()\n    fetch: Observable = this.actions.pipe(\n        ofType(ConfigAction.FETCH),\n        mergeMap(() => this.db.list('config/').snapshotChanges()),\n        map(changes => {\n            let raw = changes.map((value) => ({ key: value.key, payload: value.payload.val() }))\n            let config = {};\n            for (let i = 0; i  of(new ConfigAction.FetchFailed(err.message)))\n    );\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data.service.ts\n        \n\n            \n                Description\n            \n            \n                Store all common global data\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                catMatrix\n                            \n                            \n                                    Public\n                                config\n                            \n                            \n                                    Private\n                                config$\n                            \n                            \n                                    Public\n                                imageLink\n                            \n                            \n                                    Public\n                                navState\n                            \n                            \n                                    Public\n                                quesGenOption\n                            \n                            \n                                    Public\n                                selectedQuestions\n                            \n                            \n                                    Public\n                                testResult\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fetchConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/data.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/app/data.service.ts:46\n                \n            \n\n\n            \n                \n                    Fetch app config from firebase\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            catMatrix\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data.service.ts:34\n                            \n                        \n\n                \n                    \n                        App config\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            config$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data.service.ts:30\n                            \n                        \n\n                \n                    \n                        App config from redux\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imageLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data.service.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            quesGenOption\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data.service.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedQuestions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            testResult\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data.service.ts:40\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Config } from './states/models/config.model';\nimport { Store } from '@ngrx/store';\nimport IAppState from './IAppState';\nimport * as ConfigAction from './states/actions/config.action';\n\n/**\n * Store all common global data\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private store: Store) {\n    this.quesGenOption = { maximum_question: 10, show_title: true };\n    this.navState = { canEnterBeforeStart: true, testing: false, testFinish: false };\n    this.config$ = this.store.select('config');\n    this.config$.subscribe((value) => {\n      this.config = value.system;\n    });\n  }\n\n  public catMatrix: Array>;\n  public imageLink: Array;\n  /**\n   * App config from redux\n   */\n  private config$: Observable;\n  /**\n   * App config\n   */\n  public config: any;\n  public selectedQuestions: Array;\n  public quesGenOption: {\n    maximum_question: 10,\n    show_title: true\n  };\n  public testResult: Array;\n  public navState: {};\n\n  /**\n   * Fetch app config from firebase\n   */\n  public fetchConfig() {\n    this.store.dispatch(new ConfigAction.Fetch());\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditInfo.html":{"url":"classes/EditInfo.html","title":"class - EditInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/user.actions.ts:107\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:108\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EDITINFO\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:107\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[User] Login';\nexport const LOGIN_SUCCESS = '[User] Login -> Success';\nexport const LOGIN_FAILED = '[User] Login -> Failed';\nexport const LOGIN_G = '[User] Login Google';\nexport const LOGIN_G_SUCCESS = '[User] Login Google -> Success';\nexport const LOGIN_G_FAILED = '[User] Login Google -> Failed';\nexport const SIGNIN = '[User] SignIn';\nexport const SIGNIN_SUCCESS = '[User] Sign in -> Success';\nexport const SIGNIN_FAILED = '[User] Sign in -> Failed';\nexport const SIGNOUT = '[User] Sign out';\nexport const UPDATEINFO = '[User] Update info';\nexport const GETINFO = '[User] Get info';\nexport const GETINFO_SUCCESS = '[User] Get info -> Success';\nexport const GETINFO_FAILED = '[User] Get info -> Failed';\nexport const EDITINFO = '[User] EditInfo';\nexport const EDITINFO_SUCCESS = '[User] EditInfo -> Success';\nexport const EDITINFO_FAILED = '[User] EditInfo -> Failed';\nexport const FORGOT_PASSWORD = '[User] Forgot password';\nexport const FORGOT_PASSWORD_SENT_SUCCESS = '[User] Forgot password -> Sent Success';\nexport const FORGOT_PASSWORD_SENT_FAILED = '[User] Forgot password -> Sent Failed';\nexport const INIT_INFO = '[User] Init information';\nexport const UPDATE_CREDIT = '[User] Update credit';\nexport const UPDATE_CREDIT_SUCCESS = \"[User] Update credit -> Success\";\nexport const UPDATE_CREDIT_FAILED = \"[User] Update credit -> Failed\";\nexport const PAY_CREDITS = '[User] Pay credits';\nexport const PAY_CREDITS_SUCCESS = '[User] Pay credits -> Success';\nexport const REMOVE_CREDITS = '[User] Remove credits';\nexport const NO_MORE_CREDITS = '[User] No more credits';\nexport const UPDATE_LOG = \"[User] Update log\";\nexport const UPDATE_LOG_SUCCESS = \"[User] Update log -> Success\";\nexport const UPDATE_LOG_FAILED = \"[User] Update log -> Failed\";\n\n\nexport class Login implements Action {\n    readonly type = LOGIN;\n    constructor(public payload: { email: string, password: string }) { }\n}\n\nexport class LoginSuccess implements Action {\n    readonly type = LOGIN_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginFailed implements Action {\n    readonly type = LOGIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class LoginG implements Action {\n    readonly type = LOGIN_G;\n    constructor() { }\n}\n\nexport class LoginGSuccess implements Action {\n    readonly type = LOGIN_G_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginGFailed implements Action {\n    readonly type = LOGIN_G_FAILED;\n}\n\nexport class SignOut implements Action {\n    readonly type = SIGNOUT;\n    constructor() { }\n}\n\nexport class SignIn implements Action {\n    readonly type = SIGNIN;\n    constructor(public payload: { email: string, password: string, retypePassword: string, agreeTerm: boolean }) { }\n}\n\nexport class SignInSuccess implements Action {\n    readonly type = SIGNIN_SUCCESS;\n    constructor() { }\n}\n\nexport class SignInFailed implements Action {\n    readonly type = SIGNIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class UpdateInfo implements Action {\n    readonly type = UPDATEINFO;\n    constructor(public payload: { name: string, address: string, phone: string }) { }\n}\n\nexport class GetInfo implements Action {\n    readonly type = GETINFO;\n    constructor(public payload: { email: string, annonymous: boolean }) { }\n}\n\nexport class GetInfoSuccess implements Action {\n    readonly type = GETINFO_SUCCESS;\n    constructor(public payload: { data: any }) { }\n}\n\nexport class GetInfoFailed implements Action {\n    readonly type = GETINFO_FAILED;\n    constructor() { }\n}\n\nexport class EditInfo implements Action {\n    readonly type = EDITINFO;\n    constructor(public payload: { newName: string, newPhone: string }) { }\n}\n\nexport class EditInfoSuccess implements Action {\n    readonly type = EDITINFO_SUCCESS;\n    constructor() { }\n}\n\nexport class EditInfoFailed implements Action {\n    readonly type = EDITINFO_FAILED;\n    constructor() { }\n}\n\nexport class ForgotPassword implements Action {\n    readonly type = FORGOT_PASSWORD;\n    constructor(public payload: { email: string }) { }\n}\n\nexport class ForgotPasswordSentSuccess implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_SUCCESS;\n    constructor() { }\n}\n\nexport class ForgotPasswordSentFailed implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_FAILED;\n    constructor() { }\n}\n\nexport class InitInfo implements Action {\n    readonly type = INIT_INFO;\n    constructor(public payload: { userEmail: string }) { }\n}\n\nexport class UpdateCredit implements Action {\n    readonly type = UPDATE_CREDIT;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class UpdateCreditSuccess implements Action {\n    readonly type = UPDATE_CREDIT_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateCreditFailed implements Action {\n    readonly type = UPDATE_CREDIT_FAILED;\n    constructor() { }\n}\n\nexport class PayCredits implements Action {\n    readonly type = PAY_CREDITS;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class PayCreditsSuccess implements Action {\n    readonly type = PAY_CREDITS_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLog implements Action {\n    readonly type = UPDATE_LOG;\n    constructor(public payload: { data: any, timestamp: any, log: any }) { }\n}\n\nexport class UpdateLogSuccess implements Action {\n    readonly type = UPDATE_LOG_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLogFailed implements Action {\n    readonly type = UPDATE_LOG_FAILED;\n    constructor() { }\n}\n\n\nexport type All\n    = Login\n    | LoginSuccess\n    | LoginFailed\n    | LoginG\n    | LoginGSuccess\n    | LoginGFailed\n    | UpdateInfo\n    | GetInfo\n    | GetInfoSuccess\n    | GetInfoFailed\n    | EditInfo\n    | EditInfoSuccess\n    | EditInfoFailed\n    | SignIn\n    | SignInSuccess\n    | SignInFailed\n    | SignOut\n    | ForgotPassword\n    | ForgotPasswordSentSuccess\n    | ForgotPasswordSentFailed\n    | InitInfo\n    | UpdateCredit\n    | UpdateCreditSuccess\n    | UpdateCreditFailed\n    | PayCredits\n    | PayCreditsSuccess\n    | UpdateLog\n    | UpdateLogSuccess\n    | UpdateLogFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditInfoFailed.html":{"url":"classes/EditInfoFailed.html","title":"class - EditInfoFailed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditInfoFailed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/user.actions.ts:117\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EDITINFO_FAILED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:117\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[User] Login';\nexport const LOGIN_SUCCESS = '[User] Login -> Success';\nexport const LOGIN_FAILED = '[User] Login -> Failed';\nexport const LOGIN_G = '[User] Login Google';\nexport const LOGIN_G_SUCCESS = '[User] Login Google -> Success';\nexport const LOGIN_G_FAILED = '[User] Login Google -> Failed';\nexport const SIGNIN = '[User] SignIn';\nexport const SIGNIN_SUCCESS = '[User] Sign in -> Success';\nexport const SIGNIN_FAILED = '[User] Sign in -> Failed';\nexport const SIGNOUT = '[User] Sign out';\nexport const UPDATEINFO = '[User] Update info';\nexport const GETINFO = '[User] Get info';\nexport const GETINFO_SUCCESS = '[User] Get info -> Success';\nexport const GETINFO_FAILED = '[User] Get info -> Failed';\nexport const EDITINFO = '[User] EditInfo';\nexport const EDITINFO_SUCCESS = '[User] EditInfo -> Success';\nexport const EDITINFO_FAILED = '[User] EditInfo -> Failed';\nexport const FORGOT_PASSWORD = '[User] Forgot password';\nexport const FORGOT_PASSWORD_SENT_SUCCESS = '[User] Forgot password -> Sent Success';\nexport const FORGOT_PASSWORD_SENT_FAILED = '[User] Forgot password -> Sent Failed';\nexport const INIT_INFO = '[User] Init information';\nexport const UPDATE_CREDIT = '[User] Update credit';\nexport const UPDATE_CREDIT_SUCCESS = \"[User] Update credit -> Success\";\nexport const UPDATE_CREDIT_FAILED = \"[User] Update credit -> Failed\";\nexport const PAY_CREDITS = '[User] Pay credits';\nexport const PAY_CREDITS_SUCCESS = '[User] Pay credits -> Success';\nexport const REMOVE_CREDITS = '[User] Remove credits';\nexport const NO_MORE_CREDITS = '[User] No more credits';\nexport const UPDATE_LOG = \"[User] Update log\";\nexport const UPDATE_LOG_SUCCESS = \"[User] Update log -> Success\";\nexport const UPDATE_LOG_FAILED = \"[User] Update log -> Failed\";\n\n\nexport class Login implements Action {\n    readonly type = LOGIN;\n    constructor(public payload: { email: string, password: string }) { }\n}\n\nexport class LoginSuccess implements Action {\n    readonly type = LOGIN_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginFailed implements Action {\n    readonly type = LOGIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class LoginG implements Action {\n    readonly type = LOGIN_G;\n    constructor() { }\n}\n\nexport class LoginGSuccess implements Action {\n    readonly type = LOGIN_G_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginGFailed implements Action {\n    readonly type = LOGIN_G_FAILED;\n}\n\nexport class SignOut implements Action {\n    readonly type = SIGNOUT;\n    constructor() { }\n}\n\nexport class SignIn implements Action {\n    readonly type = SIGNIN;\n    constructor(public payload: { email: string, password: string, retypePassword: string, agreeTerm: boolean }) { }\n}\n\nexport class SignInSuccess implements Action {\n    readonly type = SIGNIN_SUCCESS;\n    constructor() { }\n}\n\nexport class SignInFailed implements Action {\n    readonly type = SIGNIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class UpdateInfo implements Action {\n    readonly type = UPDATEINFO;\n    constructor(public payload: { name: string, address: string, phone: string }) { }\n}\n\nexport class GetInfo implements Action {\n    readonly type = GETINFO;\n    constructor(public payload: { email: string, annonymous: boolean }) { }\n}\n\nexport class GetInfoSuccess implements Action {\n    readonly type = GETINFO_SUCCESS;\n    constructor(public payload: { data: any }) { }\n}\n\nexport class GetInfoFailed implements Action {\n    readonly type = GETINFO_FAILED;\n    constructor() { }\n}\n\nexport class EditInfo implements Action {\n    readonly type = EDITINFO;\n    constructor(public payload: { newName: string, newPhone: string }) { }\n}\n\nexport class EditInfoSuccess implements Action {\n    readonly type = EDITINFO_SUCCESS;\n    constructor() { }\n}\n\nexport class EditInfoFailed implements Action {\n    readonly type = EDITINFO_FAILED;\n    constructor() { }\n}\n\nexport class ForgotPassword implements Action {\n    readonly type = FORGOT_PASSWORD;\n    constructor(public payload: { email: string }) { }\n}\n\nexport class ForgotPasswordSentSuccess implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_SUCCESS;\n    constructor() { }\n}\n\nexport class ForgotPasswordSentFailed implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_FAILED;\n    constructor() { }\n}\n\nexport class InitInfo implements Action {\n    readonly type = INIT_INFO;\n    constructor(public payload: { userEmail: string }) { }\n}\n\nexport class UpdateCredit implements Action {\n    readonly type = UPDATE_CREDIT;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class UpdateCreditSuccess implements Action {\n    readonly type = UPDATE_CREDIT_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateCreditFailed implements Action {\n    readonly type = UPDATE_CREDIT_FAILED;\n    constructor() { }\n}\n\nexport class PayCredits implements Action {\n    readonly type = PAY_CREDITS;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class PayCreditsSuccess implements Action {\n    readonly type = PAY_CREDITS_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLog implements Action {\n    readonly type = UPDATE_LOG;\n    constructor(public payload: { data: any, timestamp: any, log: any }) { }\n}\n\nexport class UpdateLogSuccess implements Action {\n    readonly type = UPDATE_LOG_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLogFailed implements Action {\n    readonly type = UPDATE_LOG_FAILED;\n    constructor() { }\n}\n\n\nexport type All\n    = Login\n    | LoginSuccess\n    | LoginFailed\n    | LoginG\n    | LoginGSuccess\n    | LoginGFailed\n    | UpdateInfo\n    | GetInfo\n    | GetInfoSuccess\n    | GetInfoFailed\n    | EditInfo\n    | EditInfoSuccess\n    | EditInfoFailed\n    | SignIn\n    | SignInSuccess\n    | SignInFailed\n    | SignOut\n    | ForgotPassword\n    | ForgotPasswordSentSuccess\n    | ForgotPasswordSentFailed\n    | InitInfo\n    | UpdateCredit\n    | UpdateCreditSuccess\n    | UpdateCreditFailed\n    | PayCredits\n    | PayCreditsSuccess\n    | UpdateLog\n    | UpdateLogSuccess\n    | UpdateLogFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditInfoSuccess.html":{"url":"classes/EditInfoSuccess.html","title":"class - EditInfoSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditInfoSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/user.actions.ts:112\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EDITINFO_SUCCESS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:112\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[User] Login';\nexport const LOGIN_SUCCESS = '[User] Login -> Success';\nexport const LOGIN_FAILED = '[User] Login -> Failed';\nexport const LOGIN_G = '[User] Login Google';\nexport const LOGIN_G_SUCCESS = '[User] Login Google -> Success';\nexport const LOGIN_G_FAILED = '[User] Login Google -> Failed';\nexport const SIGNIN = '[User] SignIn';\nexport const SIGNIN_SUCCESS = '[User] Sign in -> Success';\nexport const SIGNIN_FAILED = '[User] Sign in -> Failed';\nexport const SIGNOUT = '[User] Sign out';\nexport const UPDATEINFO = '[User] Update info';\nexport const GETINFO = '[User] Get info';\nexport const GETINFO_SUCCESS = '[User] Get info -> Success';\nexport const GETINFO_FAILED = '[User] Get info -> Failed';\nexport const EDITINFO = '[User] EditInfo';\nexport const EDITINFO_SUCCESS = '[User] EditInfo -> Success';\nexport const EDITINFO_FAILED = '[User] EditInfo -> Failed';\nexport const FORGOT_PASSWORD = '[User] Forgot password';\nexport const FORGOT_PASSWORD_SENT_SUCCESS = '[User] Forgot password -> Sent Success';\nexport const FORGOT_PASSWORD_SENT_FAILED = '[User] Forgot password -> Sent Failed';\nexport const INIT_INFO = '[User] Init information';\nexport const UPDATE_CREDIT = '[User] Update credit';\nexport const UPDATE_CREDIT_SUCCESS = \"[User] Update credit -> Success\";\nexport const UPDATE_CREDIT_FAILED = \"[User] Update credit -> Failed\";\nexport const PAY_CREDITS = '[User] Pay credits';\nexport const PAY_CREDITS_SUCCESS = '[User] Pay credits -> Success';\nexport const REMOVE_CREDITS = '[User] Remove credits';\nexport const NO_MORE_CREDITS = '[User] No more credits';\nexport const UPDATE_LOG = \"[User] Update log\";\nexport const UPDATE_LOG_SUCCESS = \"[User] Update log -> Success\";\nexport const UPDATE_LOG_FAILED = \"[User] Update log -> Failed\";\n\n\nexport class Login implements Action {\n    readonly type = LOGIN;\n    constructor(public payload: { email: string, password: string }) { }\n}\n\nexport class LoginSuccess implements Action {\n    readonly type = LOGIN_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginFailed implements Action {\n    readonly type = LOGIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class LoginG implements Action {\n    readonly type = LOGIN_G;\n    constructor() { }\n}\n\nexport class LoginGSuccess implements Action {\n    readonly type = LOGIN_G_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginGFailed implements Action {\n    readonly type = LOGIN_G_FAILED;\n}\n\nexport class SignOut implements Action {\n    readonly type = SIGNOUT;\n    constructor() { }\n}\n\nexport class SignIn implements Action {\n    readonly type = SIGNIN;\n    constructor(public payload: { email: string, password: string, retypePassword: string, agreeTerm: boolean }) { }\n}\n\nexport class SignInSuccess implements Action {\n    readonly type = SIGNIN_SUCCESS;\n    constructor() { }\n}\n\nexport class SignInFailed implements Action {\n    readonly type = SIGNIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class UpdateInfo implements Action {\n    readonly type = UPDATEINFO;\n    constructor(public payload: { name: string, address: string, phone: string }) { }\n}\n\nexport class GetInfo implements Action {\n    readonly type = GETINFO;\n    constructor(public payload: { email: string, annonymous: boolean }) { }\n}\n\nexport class GetInfoSuccess implements Action {\n    readonly type = GETINFO_SUCCESS;\n    constructor(public payload: { data: any }) { }\n}\n\nexport class GetInfoFailed implements Action {\n    readonly type = GETINFO_FAILED;\n    constructor() { }\n}\n\nexport class EditInfo implements Action {\n    readonly type = EDITINFO;\n    constructor(public payload: { newName: string, newPhone: string }) { }\n}\n\nexport class EditInfoSuccess implements Action {\n    readonly type = EDITINFO_SUCCESS;\n    constructor() { }\n}\n\nexport class EditInfoFailed implements Action {\n    readonly type = EDITINFO_FAILED;\n    constructor() { }\n}\n\nexport class ForgotPassword implements Action {\n    readonly type = FORGOT_PASSWORD;\n    constructor(public payload: { email: string }) { }\n}\n\nexport class ForgotPasswordSentSuccess implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_SUCCESS;\n    constructor() { }\n}\n\nexport class ForgotPasswordSentFailed implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_FAILED;\n    constructor() { }\n}\n\nexport class InitInfo implements Action {\n    readonly type = INIT_INFO;\n    constructor(public payload: { userEmail: string }) { }\n}\n\nexport class UpdateCredit implements Action {\n    readonly type = UPDATE_CREDIT;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class UpdateCreditSuccess implements Action {\n    readonly type = UPDATE_CREDIT_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateCreditFailed implements Action {\n    readonly type = UPDATE_CREDIT_FAILED;\n    constructor() { }\n}\n\nexport class PayCredits implements Action {\n    readonly type = PAY_CREDITS;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class PayCreditsSuccess implements Action {\n    readonly type = PAY_CREDITS_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLog implements Action {\n    readonly type = UPDATE_LOG;\n    constructor(public payload: { data: any, timestamp: any, log: any }) { }\n}\n\nexport class UpdateLogSuccess implements Action {\n    readonly type = UPDATE_LOG_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLogFailed implements Action {\n    readonly type = UPDATE_LOG_FAILED;\n    constructor() { }\n}\n\n\nexport type All\n    = Login\n    | LoginSuccess\n    | LoginFailed\n    | LoginG\n    | LoginGSuccess\n    | LoginGFailed\n    | UpdateInfo\n    | GetInfo\n    | GetInfoSuccess\n    | GetInfoFailed\n    | EditInfo\n    | EditInfoSuccess\n    | EditInfoFailed\n    | SignIn\n    | SignInSuccess\n    | SignInFailed\n    | SignOut\n    | ForgotPassword\n    | ForgotPasswordSentSuccess\n    | ForgotPasswordSentFailed\n    | InitInfo\n    | UpdateCredit\n    | UpdateCreditSuccess\n    | UpdateCreditFailed\n    | PayCredits\n    | PayCreditsSuccess\n    | UpdateLog\n    | UpdateLogSuccess\n    | UpdateLogFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditProfileModalPage.html":{"url":"components/EditProfileModalPage.html","title":"component - EditProfileModalPage","body":"\n                   \n\n\n\n\n\n  Components\n  EditProfileModalPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-profile-modal/edit-profile-modal.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-profile-modal\n            \n\n            \n                styleUrls\n                ./edit-profile-modal.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-profile-modal.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                phone\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                saveAndExit\n                            \n                            \n                                sendVerifyCode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navParams: NavParams, afAuth: AngularFireAuth, modalController: ModalController, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-profile-modal/edit-profile-modal.page.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-profile-modal/edit-profile-modal.page.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveAndExit\n                        \n                        \n                    \n                \n            \n            \n                \nsaveAndExit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-profile-modal/edit-profile-modal.page.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendVerifyCode\n                        \n                        \n                    \n                \n            \n            \n                \nsendVerifyCode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-profile-modal/edit-profile-modal.page.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/edit-profile-modal/edit-profile-modal.page.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/edit-profile-modal/edit-profile-modal.page.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit-profile-modal/edit-profile-modal.page.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NavParams, ModalController } from '@ionic/angular';\nimport { AngularFireAuth, AngularFireAuthModule } from '@angular/fire/auth';\nimport { Store } from '@ngrx/store';\nimport IAppState from '../IAppState';\nimport { Observable } from 'rxjs';\nimport { User } from '../states/models/user.model';\nimport * as UserAction from '../states/actions/user.actions';\n\n@Component({\n  selector: 'app-edit-profile-modal',\n  templateUrl: './edit-profile-modal.page.html',\n  styleUrls: ['./edit-profile-modal.page.scss'],\n})\nexport class EditProfileModalPage implements OnInit {\n\n  constructor(private navParams: NavParams,\n    private afAuth: AngularFireAuth,\n    private modalController: ModalController,\n    private store: Store) {\n    this.user = this.store.select('user');\n  }\n\n  ngOnInit() {\n    this.user.subscribe((payload) => {\n      this.name = payload.currentUser.displayName;\n      this.phone = payload.currentUser.phoneNumber;\n    })\n  }\n\n  name;\n  phone;\n  user: Observable;\n\n  saveAndExit() {\n    this.store.dispatch(new UserAction.EditInfo({ newName: this.name, newPhone: this.phone }));\n    this.modalController.dismiss();\n  }\n\n  sendVerifyCode() {\n\n  }\n\n}\n\n    \n\n    \n        \n  \n    Edit your profile\n  \n\n\n\n  \n    \n      Personal information\n    \n    \n      \n        \n          Full name\n        \n        \n      \n      \n        \n          Phone number\n        \n        \n      \n      \n        \n          \n            \n              Send SMS Verification\n            \n            \n              \n                \n              \n            \n          \n        \n      \n      \n        Save and Close\n      \n    \n  \n\n    \n\n    \n                \n                    ./edit-profile-modal.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Edit your profile              Personal information                                Full name                                              Phone number                                                                        Send SMS Verification                                                                                                                      Save and Close            '\n    var COMPONENTS = [{'name': 'AccountPage', 'selector': 'app-account'},{'name': 'AdPagePage', 'selector': 'app-ad-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BeforeStartPage', 'selector': 'app-before-start'},{'name': 'CatInfoModalPage', 'selector': 'app-cat-info-modal'},{'name': 'ChallengePage', 'selector': 'app-challenge'},{'name': 'EditProfileModalPage', 'selector': 'app-edit-profile-modal'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'SignUpPage', 'selector': 'app-sign-up'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TestResultPage', 'selector': 'app-test-result'},{'name': 'TestRoomPage', 'selector': 'app-test-room'},{'name': 'TrainingPage', 'selector': 'app-training'},{'name': 'VerifyEmailPage', 'selector': 'app-verify-email'},{'name': 'WelcomePage', 'selector': 'app-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditProfileModalPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EditProfileModalPageModule.html":{"url":"modules/EditProfileModalPageModule.html","title":"module - EditProfileModalPageModule","body":"\n                   \n\n\n\n\n    Modules\n    EditProfileModalPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EditProfileModalPageModule\n\n\n\ncluster_EditProfileModalPageModule_declarations\n\n\n\n\nEditProfileModalPage\n\nEditProfileModalPage\n\n\n\nEditProfileModalPageModule\n\nEditProfileModalPageModule\n\nEditProfileModalPageModule -->\n\nEditProfileModalPage->EditProfileModalPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/edit-profile-modal/edit-profile-modal.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EditProfileModalPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditProfileModalPage } from './edit-profile-modal.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditProfileModalPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [EditProfileModalPage]\n})\nexport class EditProfileModalPageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Fetch.html":{"url":"classes/Fetch.html","title":"class - Fetch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Fetch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/config.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/config.action.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FETCH\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/config.action.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const FETCH = '[Config] Fetch';\nexport const FETCH_SUCCESS = '[Config] Fetch -> Success';\nexport const FETCH_FAILED = '[Config] Fetch -> Failed';\n\nexport class Fetch implements Action {\n    readonly type = FETCH;\n    constructor() { }\n}\n\nexport class FetchSuccess implements Action {\n    readonly type = FETCH_SUCCESS;\n    constructor(public payload: { system: any }) { }\n}\n\nexport class FetchFailed implements Action {\n    readonly type = FETCH_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport type All = Fetch\n    | FetchSuccess\n    | FetchFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Fetch-1.html":{"url":"classes/Fetch-1.html","title":"class - Fetch-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Fetch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/category.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/category.action.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FETCH\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/category.action.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const FETCH = \"[Category] Fetch\";\nexport const FETCH_SUCCESS = \"[Category] Fetch -> Success\";\nexport const FETCH_FAILED = \"[Category] Fetch -> Failed\";\nexport class Fetch implements Action {\n    readonly type = FETCH;\n    constructor() { }\n}\nexport class FetchSuccess implements Action {\n    readonly type = FETCH_SUCCESS;\n    constructor(public payload: { cat: any }) { }\n}\n\nexport class FetchFailed implements Action {\n    readonly type = FETCH_FAILED;\n}\nexport type All = Fetch\n    | FetchSuccess\n    | FetchFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Fetch-2.html":{"url":"classes/Fetch-2.html","title":"class - Fetch-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Fetch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/history.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/history.action.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FETCH\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/history.action.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const FETCH = \"[History] Fetch\";\nexport const FETCH_SUCCESS = \"[History] Fetch Success\";\nexport const FETCH_GENERATED_LOG = \"[History] Fetch generated log\";\nexport const FETCH_GENERATED_LOG_SUCCESS = \"[History] Fetch generated log -> Success\";\nexport const UPDATE_GENERATED_LOG = \"[History] Update generated log\";\nexport const UPDATE_GENERATED_LOG_SUCCESS = \"[History] Update generated log -> Success\";\nexport const UPDATE_GENERATED_LOG_FAILED = \"[History] Update generated log -> Failed\";\n\nexport class Fetch implements Action {\n    readonly type = FETCH;\n    constructor() { }\n}\n\nexport class FetchSuccess implements Action {\n    readonly type = FETCH_SUCCESS;\n    constructor(public payload: { log: any }) { }\n}\n\nexport class FetchGeneratedLog implements Action {\n    readonly type = FETCH_GENERATED_LOG;\n    constructor() { }\n}\n\nexport class FetchGeneratedLogSuccess implements Action {\n    readonly type = FETCH_GENERATED_LOG_SUCCESS;\n    constructor(public payload: { generated: any }) { }\n}\n\nexport class UpdateGeneratedLog implements Action {\n    readonly type = UPDATE_GENERATED_LOG;\n    constructor(public payload: { major: number, minor: number, questionID: string }) { }\n}\n\nexport class UpdateGeneratedLogSuccess implements Action {\n    readonly type = UPDATE_GENERATED_LOG_SUCCESS;\n    constructor() { }\n}\n\n\nexport type All = Fetch\n    | FetchSuccess\n    | FetchGeneratedLog\n    | FetchGeneratedLogSuccess\n    | UpdateGeneratedLog\n    | UpdateGeneratedLogSuccess;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Fetch-3.html":{"url":"classes/Fetch-3.html","title":"class - Fetch-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Fetch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/question.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/question.action.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FETCH\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/question.action.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const FETCH = \"[Question] Fetch\";\nexport const FETCH_SUCCESS = '[Question]  Fetch -> Success';\n\nexport class Fetch implements Action {\n    readonly type = FETCH;\n    constructor() { }\n}\n\nexport class FetchSuccess implements Action {\n    readonly type = FETCH_SUCCESS;\n    constructor(public payload: { list: any }) { }\n}\n\nexport type All = Fetch\n    | FetchSuccess;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchFailed.html":{"url":"classes/FetchFailed.html","title":"class - FetchFailed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchFailed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/config.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/config.action.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/config.action.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FETCH_FAILED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/config.action.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const FETCH = '[Config] Fetch';\nexport const FETCH_SUCCESS = '[Config] Fetch -> Success';\nexport const FETCH_FAILED = '[Config] Fetch -> Failed';\n\nexport class Fetch implements Action {\n    readonly type = FETCH;\n    constructor() { }\n}\n\nexport class FetchSuccess implements Action {\n    readonly type = FETCH_SUCCESS;\n    constructor(public payload: { system: any }) { }\n}\n\nexport class FetchFailed implements Action {\n    readonly type = FETCH_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport type All = Fetch\n    | FetchSuccess\n    | FetchFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchFailed-1.html":{"url":"classes/FetchFailed-1.html","title":"class - FetchFailed-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchFailed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/category.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FETCH_FAILED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/category.action.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const FETCH = \"[Category] Fetch\";\nexport const FETCH_SUCCESS = \"[Category] Fetch -> Success\";\nexport const FETCH_FAILED = \"[Category] Fetch -> Failed\";\nexport class Fetch implements Action {\n    readonly type = FETCH;\n    constructor() { }\n}\nexport class FetchSuccess implements Action {\n    readonly type = FETCH_SUCCESS;\n    constructor(public payload: { cat: any }) { }\n}\n\nexport class FetchFailed implements Action {\n    readonly type = FETCH_FAILED;\n}\nexport type All = Fetch\n    | FetchSuccess\n    | FetchFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchGeneratedLog.html":{"url":"classes/FetchGeneratedLog.html","title":"class - FetchGeneratedLog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchGeneratedLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/history.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/history.action.ts:22\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FETCH_GENERATED_LOG\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/history.action.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const FETCH = \"[History] Fetch\";\nexport const FETCH_SUCCESS = \"[History] Fetch Success\";\nexport const FETCH_GENERATED_LOG = \"[History] Fetch generated log\";\nexport const FETCH_GENERATED_LOG_SUCCESS = \"[History] Fetch generated log -> Success\";\nexport const UPDATE_GENERATED_LOG = \"[History] Update generated log\";\nexport const UPDATE_GENERATED_LOG_SUCCESS = \"[History] Update generated log -> Success\";\nexport const UPDATE_GENERATED_LOG_FAILED = \"[History] Update generated log -> Failed\";\n\nexport class Fetch implements Action {\n    readonly type = FETCH;\n    constructor() { }\n}\n\nexport class FetchSuccess implements Action {\n    readonly type = FETCH_SUCCESS;\n    constructor(public payload: { log: any }) { }\n}\n\nexport class FetchGeneratedLog implements Action {\n    readonly type = FETCH_GENERATED_LOG;\n    constructor() { }\n}\n\nexport class FetchGeneratedLogSuccess implements Action {\n    readonly type = FETCH_GENERATED_LOG_SUCCESS;\n    constructor(public payload: { generated: any }) { }\n}\n\nexport class UpdateGeneratedLog implements Action {\n    readonly type = UPDATE_GENERATED_LOG;\n    constructor(public payload: { major: number, minor: number, questionID: string }) { }\n}\n\nexport class UpdateGeneratedLogSuccess implements Action {\n    readonly type = UPDATE_GENERATED_LOG_SUCCESS;\n    constructor() { }\n}\n\n\nexport type All = Fetch\n    | FetchSuccess\n    | FetchGeneratedLog\n    | FetchGeneratedLogSuccess\n    | UpdateGeneratedLog\n    | UpdateGeneratedLogSuccess;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchGeneratedLogSuccess.html":{"url":"classes/FetchGeneratedLogSuccess.html","title":"class - FetchGeneratedLogSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchGeneratedLogSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/history.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/history.action.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/history.action.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FETCH_GENERATED_LOG_SUCCESS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/history.action.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const FETCH = \"[History] Fetch\";\nexport const FETCH_SUCCESS = \"[History] Fetch Success\";\nexport const FETCH_GENERATED_LOG = \"[History] Fetch generated log\";\nexport const FETCH_GENERATED_LOG_SUCCESS = \"[History] Fetch generated log -> Success\";\nexport const UPDATE_GENERATED_LOG = \"[History] Update generated log\";\nexport const UPDATE_GENERATED_LOG_SUCCESS = \"[History] Update generated log -> Success\";\nexport const UPDATE_GENERATED_LOG_FAILED = \"[History] Update generated log -> Failed\";\n\nexport class Fetch implements Action {\n    readonly type = FETCH;\n    constructor() { }\n}\n\nexport class FetchSuccess implements Action {\n    readonly type = FETCH_SUCCESS;\n    constructor(public payload: { log: any }) { }\n}\n\nexport class FetchGeneratedLog implements Action {\n    readonly type = FETCH_GENERATED_LOG;\n    constructor() { }\n}\n\nexport class FetchGeneratedLogSuccess implements Action {\n    readonly type = FETCH_GENERATED_LOG_SUCCESS;\n    constructor(public payload: { generated: any }) { }\n}\n\nexport class UpdateGeneratedLog implements Action {\n    readonly type = UPDATE_GENERATED_LOG;\n    constructor(public payload: { major: number, minor: number, questionID: string }) { }\n}\n\nexport class UpdateGeneratedLogSuccess implements Action {\n    readonly type = UPDATE_GENERATED_LOG_SUCCESS;\n    constructor() { }\n}\n\n\nexport type All = Fetch\n    | FetchSuccess\n    | FetchGeneratedLog\n    | FetchGeneratedLogSuccess\n    | UpdateGeneratedLog\n    | UpdateGeneratedLogSuccess;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchSuccess.html":{"url":"classes/FetchSuccess.html","title":"class - FetchSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/config.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/config.action.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/config.action.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FETCH_SUCCESS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/config.action.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const FETCH = '[Config] Fetch';\nexport const FETCH_SUCCESS = '[Config] Fetch -> Success';\nexport const FETCH_FAILED = '[Config] Fetch -> Failed';\n\nexport class Fetch implements Action {\n    readonly type = FETCH;\n    constructor() { }\n}\n\nexport class FetchSuccess implements Action {\n    readonly type = FETCH_SUCCESS;\n    constructor(public payload: { system: any }) { }\n}\n\nexport class FetchFailed implements Action {\n    readonly type = FETCH_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport type All = Fetch\n    | FetchSuccess\n    | FetchFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchSuccess-1.html":{"url":"classes/FetchSuccess-1.html","title":"class - FetchSuccess-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/category.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/category.action.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/category.action.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FETCH_SUCCESS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/category.action.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const FETCH = \"[Category] Fetch\";\nexport const FETCH_SUCCESS = \"[Category] Fetch -> Success\";\nexport const FETCH_FAILED = \"[Category] Fetch -> Failed\";\nexport class Fetch implements Action {\n    readonly type = FETCH;\n    constructor() { }\n}\nexport class FetchSuccess implements Action {\n    readonly type = FETCH_SUCCESS;\n    constructor(public payload: { cat: any }) { }\n}\n\nexport class FetchFailed implements Action {\n    readonly type = FETCH_FAILED;\n}\nexport type All = Fetch\n    | FetchSuccess\n    | FetchFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchSuccess-2.html":{"url":"classes/FetchSuccess-2.html","title":"class - FetchSuccess-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/history.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/history.action.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/history.action.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FETCH_SUCCESS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/history.action.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const FETCH = \"[History] Fetch\";\nexport const FETCH_SUCCESS = \"[History] Fetch Success\";\nexport const FETCH_GENERATED_LOG = \"[History] Fetch generated log\";\nexport const FETCH_GENERATED_LOG_SUCCESS = \"[History] Fetch generated log -> Success\";\nexport const UPDATE_GENERATED_LOG = \"[History] Update generated log\";\nexport const UPDATE_GENERATED_LOG_SUCCESS = \"[History] Update generated log -> Success\";\nexport const UPDATE_GENERATED_LOG_FAILED = \"[History] Update generated log -> Failed\";\n\nexport class Fetch implements Action {\n    readonly type = FETCH;\n    constructor() { }\n}\n\nexport class FetchSuccess implements Action {\n    readonly type = FETCH_SUCCESS;\n    constructor(public payload: { log: any }) { }\n}\n\nexport class FetchGeneratedLog implements Action {\n    readonly type = FETCH_GENERATED_LOG;\n    constructor() { }\n}\n\nexport class FetchGeneratedLogSuccess implements Action {\n    readonly type = FETCH_GENERATED_LOG_SUCCESS;\n    constructor(public payload: { generated: any }) { }\n}\n\nexport class UpdateGeneratedLog implements Action {\n    readonly type = UPDATE_GENERATED_LOG;\n    constructor(public payload: { major: number, minor: number, questionID: string }) { }\n}\n\nexport class UpdateGeneratedLogSuccess implements Action {\n    readonly type = UPDATE_GENERATED_LOG_SUCCESS;\n    constructor() { }\n}\n\n\nexport type All = Fetch\n    | FetchSuccess\n    | FetchGeneratedLog\n    | FetchGeneratedLogSuccess\n    | UpdateGeneratedLog\n    | UpdateGeneratedLogSuccess;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchSuccess-3.html":{"url":"classes/FetchSuccess-3.html","title":"class - FetchSuccess-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/question.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/question.action.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/question.action.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FETCH_SUCCESS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/question.action.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const FETCH = \"[Question] Fetch\";\nexport const FETCH_SUCCESS = '[Question]  Fetch -> Success';\n\nexport class Fetch implements Action {\n    readonly type = FETCH;\n    constructor() { }\n}\n\nexport class FetchSuccess implements Action {\n    readonly type = FETCH_SUCCESS;\n    constructor(public payload: { list: any }) { }\n}\n\nexport type All = Fetch\n    | FetchSuccess;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForgotPassword.html":{"url":"classes/ForgotPassword.html","title":"class - ForgotPassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForgotPassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/user.actions.ts:122\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:123\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FORGOT_PASSWORD\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:122\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[User] Login';\nexport const LOGIN_SUCCESS = '[User] Login -> Success';\nexport const LOGIN_FAILED = '[User] Login -> Failed';\nexport const LOGIN_G = '[User] Login Google';\nexport const LOGIN_G_SUCCESS = '[User] Login Google -> Success';\nexport const LOGIN_G_FAILED = '[User] Login Google -> Failed';\nexport const SIGNIN = '[User] SignIn';\nexport const SIGNIN_SUCCESS = '[User] Sign in -> Success';\nexport const SIGNIN_FAILED = '[User] Sign in -> Failed';\nexport const SIGNOUT = '[User] Sign out';\nexport const UPDATEINFO = '[User] Update info';\nexport const GETINFO = '[User] Get info';\nexport const GETINFO_SUCCESS = '[User] Get info -> Success';\nexport const GETINFO_FAILED = '[User] Get info -> Failed';\nexport const EDITINFO = '[User] EditInfo';\nexport const EDITINFO_SUCCESS = '[User] EditInfo -> Success';\nexport const EDITINFO_FAILED = '[User] EditInfo -> Failed';\nexport const FORGOT_PASSWORD = '[User] Forgot password';\nexport const FORGOT_PASSWORD_SENT_SUCCESS = '[User] Forgot password -> Sent Success';\nexport const FORGOT_PASSWORD_SENT_FAILED = '[User] Forgot password -> Sent Failed';\nexport const INIT_INFO = '[User] Init information';\nexport const UPDATE_CREDIT = '[User] Update credit';\nexport const UPDATE_CREDIT_SUCCESS = \"[User] Update credit -> Success\";\nexport const UPDATE_CREDIT_FAILED = \"[User] Update credit -> Failed\";\nexport const PAY_CREDITS = '[User] Pay credits';\nexport const PAY_CREDITS_SUCCESS = '[User] Pay credits -> Success';\nexport const REMOVE_CREDITS = '[User] Remove credits';\nexport const NO_MORE_CREDITS = '[User] No more credits';\nexport const UPDATE_LOG = \"[User] Update log\";\nexport const UPDATE_LOG_SUCCESS = \"[User] Update log -> Success\";\nexport const UPDATE_LOG_FAILED = \"[User] Update log -> Failed\";\n\n\nexport class Login implements Action {\n    readonly type = LOGIN;\n    constructor(public payload: { email: string, password: string }) { }\n}\n\nexport class LoginSuccess implements Action {\n    readonly type = LOGIN_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginFailed implements Action {\n    readonly type = LOGIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class LoginG implements Action {\n    readonly type = LOGIN_G;\n    constructor() { }\n}\n\nexport class LoginGSuccess implements Action {\n    readonly type = LOGIN_G_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginGFailed implements Action {\n    readonly type = LOGIN_G_FAILED;\n}\n\nexport class SignOut implements Action {\n    readonly type = SIGNOUT;\n    constructor() { }\n}\n\nexport class SignIn implements Action {\n    readonly type = SIGNIN;\n    constructor(public payload: { email: string, password: string, retypePassword: string, agreeTerm: boolean }) { }\n}\n\nexport class SignInSuccess implements Action {\n    readonly type = SIGNIN_SUCCESS;\n    constructor() { }\n}\n\nexport class SignInFailed implements Action {\n    readonly type = SIGNIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class UpdateInfo implements Action {\n    readonly type = UPDATEINFO;\n    constructor(public payload: { name: string, address: string, phone: string }) { }\n}\n\nexport class GetInfo implements Action {\n    readonly type = GETINFO;\n    constructor(public payload: { email: string, annonymous: boolean }) { }\n}\n\nexport class GetInfoSuccess implements Action {\n    readonly type = GETINFO_SUCCESS;\n    constructor(public payload: { data: any }) { }\n}\n\nexport class GetInfoFailed implements Action {\n    readonly type = GETINFO_FAILED;\n    constructor() { }\n}\n\nexport class EditInfo implements Action {\n    readonly type = EDITINFO;\n    constructor(public payload: { newName: string, newPhone: string }) { }\n}\n\nexport class EditInfoSuccess implements Action {\n    readonly type = EDITINFO_SUCCESS;\n    constructor() { }\n}\n\nexport class EditInfoFailed implements Action {\n    readonly type = EDITINFO_FAILED;\n    constructor() { }\n}\n\nexport class ForgotPassword implements Action {\n    readonly type = FORGOT_PASSWORD;\n    constructor(public payload: { email: string }) { }\n}\n\nexport class ForgotPasswordSentSuccess implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_SUCCESS;\n    constructor() { }\n}\n\nexport class ForgotPasswordSentFailed implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_FAILED;\n    constructor() { }\n}\n\nexport class InitInfo implements Action {\n    readonly type = INIT_INFO;\n    constructor(public payload: { userEmail: string }) { }\n}\n\nexport class UpdateCredit implements Action {\n    readonly type = UPDATE_CREDIT;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class UpdateCreditSuccess implements Action {\n    readonly type = UPDATE_CREDIT_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateCreditFailed implements Action {\n    readonly type = UPDATE_CREDIT_FAILED;\n    constructor() { }\n}\n\nexport class PayCredits implements Action {\n    readonly type = PAY_CREDITS;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class PayCreditsSuccess implements Action {\n    readonly type = PAY_CREDITS_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLog implements Action {\n    readonly type = UPDATE_LOG;\n    constructor(public payload: { data: any, timestamp: any, log: any }) { }\n}\n\nexport class UpdateLogSuccess implements Action {\n    readonly type = UPDATE_LOG_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLogFailed implements Action {\n    readonly type = UPDATE_LOG_FAILED;\n    constructor() { }\n}\n\n\nexport type All\n    = Login\n    | LoginSuccess\n    | LoginFailed\n    | LoginG\n    | LoginGSuccess\n    | LoginGFailed\n    | UpdateInfo\n    | GetInfo\n    | GetInfoSuccess\n    | GetInfoFailed\n    | EditInfo\n    | EditInfoSuccess\n    | EditInfoFailed\n    | SignIn\n    | SignInSuccess\n    | SignInFailed\n    | SignOut\n    | ForgotPassword\n    | ForgotPasswordSentSuccess\n    | ForgotPasswordSentFailed\n    | InitInfo\n    | UpdateCredit\n    | UpdateCreditSuccess\n    | UpdateCreditFailed\n    | PayCredits\n    | PayCreditsSuccess\n    | UpdateLog\n    | UpdateLogSuccess\n    | UpdateLogFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForgotPasswordSentFailed.html":{"url":"classes/ForgotPasswordSentFailed.html","title":"class - ForgotPasswordSentFailed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForgotPasswordSentFailed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/user.actions.ts:132\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FORGOT_PASSWORD_SENT_FAILED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:132\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[User] Login';\nexport const LOGIN_SUCCESS = '[User] Login -> Success';\nexport const LOGIN_FAILED = '[User] Login -> Failed';\nexport const LOGIN_G = '[User] Login Google';\nexport const LOGIN_G_SUCCESS = '[User] Login Google -> Success';\nexport const LOGIN_G_FAILED = '[User] Login Google -> Failed';\nexport const SIGNIN = '[User] SignIn';\nexport const SIGNIN_SUCCESS = '[User] Sign in -> Success';\nexport const SIGNIN_FAILED = '[User] Sign in -> Failed';\nexport const SIGNOUT = '[User] Sign out';\nexport const UPDATEINFO = '[User] Update info';\nexport const GETINFO = '[User] Get info';\nexport const GETINFO_SUCCESS = '[User] Get info -> Success';\nexport const GETINFO_FAILED = '[User] Get info -> Failed';\nexport const EDITINFO = '[User] EditInfo';\nexport const EDITINFO_SUCCESS = '[User] EditInfo -> Success';\nexport const EDITINFO_FAILED = '[User] EditInfo -> Failed';\nexport const FORGOT_PASSWORD = '[User] Forgot password';\nexport const FORGOT_PASSWORD_SENT_SUCCESS = '[User] Forgot password -> Sent Success';\nexport const FORGOT_PASSWORD_SENT_FAILED = '[User] Forgot password -> Sent Failed';\nexport const INIT_INFO = '[User] Init information';\nexport const UPDATE_CREDIT = '[User] Update credit';\nexport const UPDATE_CREDIT_SUCCESS = \"[User] Update credit -> Success\";\nexport const UPDATE_CREDIT_FAILED = \"[User] Update credit -> Failed\";\nexport const PAY_CREDITS = '[User] Pay credits';\nexport const PAY_CREDITS_SUCCESS = '[User] Pay credits -> Success';\nexport const REMOVE_CREDITS = '[User] Remove credits';\nexport const NO_MORE_CREDITS = '[User] No more credits';\nexport const UPDATE_LOG = \"[User] Update log\";\nexport const UPDATE_LOG_SUCCESS = \"[User] Update log -> Success\";\nexport const UPDATE_LOG_FAILED = \"[User] Update log -> Failed\";\n\n\nexport class Login implements Action {\n    readonly type = LOGIN;\n    constructor(public payload: { email: string, password: string }) { }\n}\n\nexport class LoginSuccess implements Action {\n    readonly type = LOGIN_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginFailed implements Action {\n    readonly type = LOGIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class LoginG implements Action {\n    readonly type = LOGIN_G;\n    constructor() { }\n}\n\nexport class LoginGSuccess implements Action {\n    readonly type = LOGIN_G_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginGFailed implements Action {\n    readonly type = LOGIN_G_FAILED;\n}\n\nexport class SignOut implements Action {\n    readonly type = SIGNOUT;\n    constructor() { }\n}\n\nexport class SignIn implements Action {\n    readonly type = SIGNIN;\n    constructor(public payload: { email: string, password: string, retypePassword: string, agreeTerm: boolean }) { }\n}\n\nexport class SignInSuccess implements Action {\n    readonly type = SIGNIN_SUCCESS;\n    constructor() { }\n}\n\nexport class SignInFailed implements Action {\n    readonly type = SIGNIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class UpdateInfo implements Action {\n    readonly type = UPDATEINFO;\n    constructor(public payload: { name: string, address: string, phone: string }) { }\n}\n\nexport class GetInfo implements Action {\n    readonly type = GETINFO;\n    constructor(public payload: { email: string, annonymous: boolean }) { }\n}\n\nexport class GetInfoSuccess implements Action {\n    readonly type = GETINFO_SUCCESS;\n    constructor(public payload: { data: any }) { }\n}\n\nexport class GetInfoFailed implements Action {\n    readonly type = GETINFO_FAILED;\n    constructor() { }\n}\n\nexport class EditInfo implements Action {\n    readonly type = EDITINFO;\n    constructor(public payload: { newName: string, newPhone: string }) { }\n}\n\nexport class EditInfoSuccess implements Action {\n    readonly type = EDITINFO_SUCCESS;\n    constructor() { }\n}\n\nexport class EditInfoFailed implements Action {\n    readonly type = EDITINFO_FAILED;\n    constructor() { }\n}\n\nexport class ForgotPassword implements Action {\n    readonly type = FORGOT_PASSWORD;\n    constructor(public payload: { email: string }) { }\n}\n\nexport class ForgotPasswordSentSuccess implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_SUCCESS;\n    constructor() { }\n}\n\nexport class ForgotPasswordSentFailed implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_FAILED;\n    constructor() { }\n}\n\nexport class InitInfo implements Action {\n    readonly type = INIT_INFO;\n    constructor(public payload: { userEmail: string }) { }\n}\n\nexport class UpdateCredit implements Action {\n    readonly type = UPDATE_CREDIT;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class UpdateCreditSuccess implements Action {\n    readonly type = UPDATE_CREDIT_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateCreditFailed implements Action {\n    readonly type = UPDATE_CREDIT_FAILED;\n    constructor() { }\n}\n\nexport class PayCredits implements Action {\n    readonly type = PAY_CREDITS;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class PayCreditsSuccess implements Action {\n    readonly type = PAY_CREDITS_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLog implements Action {\n    readonly type = UPDATE_LOG;\n    constructor(public payload: { data: any, timestamp: any, log: any }) { }\n}\n\nexport class UpdateLogSuccess implements Action {\n    readonly type = UPDATE_LOG_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLogFailed implements Action {\n    readonly type = UPDATE_LOG_FAILED;\n    constructor() { }\n}\n\n\nexport type All\n    = Login\n    | LoginSuccess\n    | LoginFailed\n    | LoginG\n    | LoginGSuccess\n    | LoginGFailed\n    | UpdateInfo\n    | GetInfo\n    | GetInfoSuccess\n    | GetInfoFailed\n    | EditInfo\n    | EditInfoSuccess\n    | EditInfoFailed\n    | SignIn\n    | SignInSuccess\n    | SignInFailed\n    | SignOut\n    | ForgotPassword\n    | ForgotPasswordSentSuccess\n    | ForgotPasswordSentFailed\n    | InitInfo\n    | UpdateCredit\n    | UpdateCreditSuccess\n    | UpdateCreditFailed\n    | PayCredits\n    | PayCreditsSuccess\n    | UpdateLog\n    | UpdateLogSuccess\n    | UpdateLogFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForgotPasswordSentSuccess.html":{"url":"classes/ForgotPasswordSentSuccess.html","title":"class - ForgotPasswordSentSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForgotPasswordSentSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/user.actions.ts:127\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FORGOT_PASSWORD_SENT_SUCCESS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:127\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[User] Login';\nexport const LOGIN_SUCCESS = '[User] Login -> Success';\nexport const LOGIN_FAILED = '[User] Login -> Failed';\nexport const LOGIN_G = '[User] Login Google';\nexport const LOGIN_G_SUCCESS = '[User] Login Google -> Success';\nexport const LOGIN_G_FAILED = '[User] Login Google -> Failed';\nexport const SIGNIN = '[User] SignIn';\nexport const SIGNIN_SUCCESS = '[User] Sign in -> Success';\nexport const SIGNIN_FAILED = '[User] Sign in -> Failed';\nexport const SIGNOUT = '[User] Sign out';\nexport const UPDATEINFO = '[User] Update info';\nexport const GETINFO = '[User] Get info';\nexport const GETINFO_SUCCESS = '[User] Get info -> Success';\nexport const GETINFO_FAILED = '[User] Get info -> Failed';\nexport const EDITINFO = '[User] EditInfo';\nexport const EDITINFO_SUCCESS = '[User] EditInfo -> Success';\nexport const EDITINFO_FAILED = '[User] EditInfo -> Failed';\nexport const FORGOT_PASSWORD = '[User] Forgot password';\nexport const FORGOT_PASSWORD_SENT_SUCCESS = '[User] Forgot password -> Sent Success';\nexport const FORGOT_PASSWORD_SENT_FAILED = '[User] Forgot password -> Sent Failed';\nexport const INIT_INFO = '[User] Init information';\nexport const UPDATE_CREDIT = '[User] Update credit';\nexport const UPDATE_CREDIT_SUCCESS = \"[User] Update credit -> Success\";\nexport const UPDATE_CREDIT_FAILED = \"[User] Update credit -> Failed\";\nexport const PAY_CREDITS = '[User] Pay credits';\nexport const PAY_CREDITS_SUCCESS = '[User] Pay credits -> Success';\nexport const REMOVE_CREDITS = '[User] Remove credits';\nexport const NO_MORE_CREDITS = '[User] No more credits';\nexport const UPDATE_LOG = \"[User] Update log\";\nexport const UPDATE_LOG_SUCCESS = \"[User] Update log -> Success\";\nexport const UPDATE_LOG_FAILED = \"[User] Update log -> Failed\";\n\n\nexport class Login implements Action {\n    readonly type = LOGIN;\n    constructor(public payload: { email: string, password: string }) { }\n}\n\nexport class LoginSuccess implements Action {\n    readonly type = LOGIN_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginFailed implements Action {\n    readonly type = LOGIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class LoginG implements Action {\n    readonly type = LOGIN_G;\n    constructor() { }\n}\n\nexport class LoginGSuccess implements Action {\n    readonly type = LOGIN_G_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginGFailed implements Action {\n    readonly type = LOGIN_G_FAILED;\n}\n\nexport class SignOut implements Action {\n    readonly type = SIGNOUT;\n    constructor() { }\n}\n\nexport class SignIn implements Action {\n    readonly type = SIGNIN;\n    constructor(public payload: { email: string, password: string, retypePassword: string, agreeTerm: boolean }) { }\n}\n\nexport class SignInSuccess implements Action {\n    readonly type = SIGNIN_SUCCESS;\n    constructor() { }\n}\n\nexport class SignInFailed implements Action {\n    readonly type = SIGNIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class UpdateInfo implements Action {\n    readonly type = UPDATEINFO;\n    constructor(public payload: { name: string, address: string, phone: string }) { }\n}\n\nexport class GetInfo implements Action {\n    readonly type = GETINFO;\n    constructor(public payload: { email: string, annonymous: boolean }) { }\n}\n\nexport class GetInfoSuccess implements Action {\n    readonly type = GETINFO_SUCCESS;\n    constructor(public payload: { data: any }) { }\n}\n\nexport class GetInfoFailed implements Action {\n    readonly type = GETINFO_FAILED;\n    constructor() { }\n}\n\nexport class EditInfo implements Action {\n    readonly type = EDITINFO;\n    constructor(public payload: { newName: string, newPhone: string }) { }\n}\n\nexport class EditInfoSuccess implements Action {\n    readonly type = EDITINFO_SUCCESS;\n    constructor() { }\n}\n\nexport class EditInfoFailed implements Action {\n    readonly type = EDITINFO_FAILED;\n    constructor() { }\n}\n\nexport class ForgotPassword implements Action {\n    readonly type = FORGOT_PASSWORD;\n    constructor(public payload: { email: string }) { }\n}\n\nexport class ForgotPasswordSentSuccess implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_SUCCESS;\n    constructor() { }\n}\n\nexport class ForgotPasswordSentFailed implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_FAILED;\n    constructor() { }\n}\n\nexport class InitInfo implements Action {\n    readonly type = INIT_INFO;\n    constructor(public payload: { userEmail: string }) { }\n}\n\nexport class UpdateCredit implements Action {\n    readonly type = UPDATE_CREDIT;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class UpdateCreditSuccess implements Action {\n    readonly type = UPDATE_CREDIT_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateCreditFailed implements Action {\n    readonly type = UPDATE_CREDIT_FAILED;\n    constructor() { }\n}\n\nexport class PayCredits implements Action {\n    readonly type = PAY_CREDITS;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class PayCreditsSuccess implements Action {\n    readonly type = PAY_CREDITS_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLog implements Action {\n    readonly type = UPDATE_LOG;\n    constructor(public payload: { data: any, timestamp: any, log: any }) { }\n}\n\nexport class UpdateLogSuccess implements Action {\n    readonly type = UPDATE_LOG_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLogFailed implements Action {\n    readonly type = UPDATE_LOG_FAILED;\n    constructor() { }\n}\n\n\nexport type All\n    = Login\n    | LoginSuccess\n    | LoginFailed\n    | LoginG\n    | LoginGSuccess\n    | LoginGFailed\n    | UpdateInfo\n    | GetInfo\n    | GetInfoSuccess\n    | GetInfoFailed\n    | EditInfo\n    | EditInfoSuccess\n    | EditInfoFailed\n    | SignIn\n    | SignInSuccess\n    | SignInFailed\n    | SignOut\n    | ForgotPassword\n    | ForgotPasswordSentSuccess\n    | ForgotPasswordSentFailed\n    | InitInfo\n    | UpdateCredit\n    | UpdateCreditSuccess\n    | UpdateCreditFailed\n    | PayCredits\n    | PayCreditsSuccess\n    | UpdateLog\n    | UpdateLogSuccess\n    | UpdateLogFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetInfo.html":{"url":"classes/GetInfo.html","title":"class - GetInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/user.actions.ts:92\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : GETINFO\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:92\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[User] Login';\nexport const LOGIN_SUCCESS = '[User] Login -> Success';\nexport const LOGIN_FAILED = '[User] Login -> Failed';\nexport const LOGIN_G = '[User] Login Google';\nexport const LOGIN_G_SUCCESS = '[User] Login Google -> Success';\nexport const LOGIN_G_FAILED = '[User] Login Google -> Failed';\nexport const SIGNIN = '[User] SignIn';\nexport const SIGNIN_SUCCESS = '[User] Sign in -> Success';\nexport const SIGNIN_FAILED = '[User] Sign in -> Failed';\nexport const SIGNOUT = '[User] Sign out';\nexport const UPDATEINFO = '[User] Update info';\nexport const GETINFO = '[User] Get info';\nexport const GETINFO_SUCCESS = '[User] Get info -> Success';\nexport const GETINFO_FAILED = '[User] Get info -> Failed';\nexport const EDITINFO = '[User] EditInfo';\nexport const EDITINFO_SUCCESS = '[User] EditInfo -> Success';\nexport const EDITINFO_FAILED = '[User] EditInfo -> Failed';\nexport const FORGOT_PASSWORD = '[User] Forgot password';\nexport const FORGOT_PASSWORD_SENT_SUCCESS = '[User] Forgot password -> Sent Success';\nexport const FORGOT_PASSWORD_SENT_FAILED = '[User] Forgot password -> Sent Failed';\nexport const INIT_INFO = '[User] Init information';\nexport const UPDATE_CREDIT = '[User] Update credit';\nexport const UPDATE_CREDIT_SUCCESS = \"[User] Update credit -> Success\";\nexport const UPDATE_CREDIT_FAILED = \"[User] Update credit -> Failed\";\nexport const PAY_CREDITS = '[User] Pay credits';\nexport const PAY_CREDITS_SUCCESS = '[User] Pay credits -> Success';\nexport const REMOVE_CREDITS = '[User] Remove credits';\nexport const NO_MORE_CREDITS = '[User] No more credits';\nexport const UPDATE_LOG = \"[User] Update log\";\nexport const UPDATE_LOG_SUCCESS = \"[User] Update log -> Success\";\nexport const UPDATE_LOG_FAILED = \"[User] Update log -> Failed\";\n\n\nexport class Login implements Action {\n    readonly type = LOGIN;\n    constructor(public payload: { email: string, password: string }) { }\n}\n\nexport class LoginSuccess implements Action {\n    readonly type = LOGIN_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginFailed implements Action {\n    readonly type = LOGIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class LoginG implements Action {\n    readonly type = LOGIN_G;\n    constructor() { }\n}\n\nexport class LoginGSuccess implements Action {\n    readonly type = LOGIN_G_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginGFailed implements Action {\n    readonly type = LOGIN_G_FAILED;\n}\n\nexport class SignOut implements Action {\n    readonly type = SIGNOUT;\n    constructor() { }\n}\n\nexport class SignIn implements Action {\n    readonly type = SIGNIN;\n    constructor(public payload: { email: string, password: string, retypePassword: string, agreeTerm: boolean }) { }\n}\n\nexport class SignInSuccess implements Action {\n    readonly type = SIGNIN_SUCCESS;\n    constructor() { }\n}\n\nexport class SignInFailed implements Action {\n    readonly type = SIGNIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class UpdateInfo implements Action {\n    readonly type = UPDATEINFO;\n    constructor(public payload: { name: string, address: string, phone: string }) { }\n}\n\nexport class GetInfo implements Action {\n    readonly type = GETINFO;\n    constructor(public payload: { email: string, annonymous: boolean }) { }\n}\n\nexport class GetInfoSuccess implements Action {\n    readonly type = GETINFO_SUCCESS;\n    constructor(public payload: { data: any }) { }\n}\n\nexport class GetInfoFailed implements Action {\n    readonly type = GETINFO_FAILED;\n    constructor() { }\n}\n\nexport class EditInfo implements Action {\n    readonly type = EDITINFO;\n    constructor(public payload: { newName: string, newPhone: string }) { }\n}\n\nexport class EditInfoSuccess implements Action {\n    readonly type = EDITINFO_SUCCESS;\n    constructor() { }\n}\n\nexport class EditInfoFailed implements Action {\n    readonly type = EDITINFO_FAILED;\n    constructor() { }\n}\n\nexport class ForgotPassword implements Action {\n    readonly type = FORGOT_PASSWORD;\n    constructor(public payload: { email: string }) { }\n}\n\nexport class ForgotPasswordSentSuccess implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_SUCCESS;\n    constructor() { }\n}\n\nexport class ForgotPasswordSentFailed implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_FAILED;\n    constructor() { }\n}\n\nexport class InitInfo implements Action {\n    readonly type = INIT_INFO;\n    constructor(public payload: { userEmail: string }) { }\n}\n\nexport class UpdateCredit implements Action {\n    readonly type = UPDATE_CREDIT;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class UpdateCreditSuccess implements Action {\n    readonly type = UPDATE_CREDIT_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateCreditFailed implements Action {\n    readonly type = UPDATE_CREDIT_FAILED;\n    constructor() { }\n}\n\nexport class PayCredits implements Action {\n    readonly type = PAY_CREDITS;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class PayCreditsSuccess implements Action {\n    readonly type = PAY_CREDITS_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLog implements Action {\n    readonly type = UPDATE_LOG;\n    constructor(public payload: { data: any, timestamp: any, log: any }) { }\n}\n\nexport class UpdateLogSuccess implements Action {\n    readonly type = UPDATE_LOG_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLogFailed implements Action {\n    readonly type = UPDATE_LOG_FAILED;\n    constructor() { }\n}\n\n\nexport type All\n    = Login\n    | LoginSuccess\n    | LoginFailed\n    | LoginG\n    | LoginGSuccess\n    | LoginGFailed\n    | UpdateInfo\n    | GetInfo\n    | GetInfoSuccess\n    | GetInfoFailed\n    | EditInfo\n    | EditInfoSuccess\n    | EditInfoFailed\n    | SignIn\n    | SignInSuccess\n    | SignInFailed\n    | SignOut\n    | ForgotPassword\n    | ForgotPasswordSentSuccess\n    | ForgotPasswordSentFailed\n    | InitInfo\n    | UpdateCredit\n    | UpdateCreditSuccess\n    | UpdateCreditFailed\n    | PayCredits\n    | PayCreditsSuccess\n    | UpdateLog\n    | UpdateLogSuccess\n    | UpdateLogFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetInfoFailed.html":{"url":"classes/GetInfoFailed.html","title":"class - GetInfoFailed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetInfoFailed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/user.actions.ts:102\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : GETINFO_FAILED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:102\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[User] Login';\nexport const LOGIN_SUCCESS = '[User] Login -> Success';\nexport const LOGIN_FAILED = '[User] Login -> Failed';\nexport const LOGIN_G = '[User] Login Google';\nexport const LOGIN_G_SUCCESS = '[User] Login Google -> Success';\nexport const LOGIN_G_FAILED = '[User] Login Google -> Failed';\nexport const SIGNIN = '[User] SignIn';\nexport const SIGNIN_SUCCESS = '[User] Sign in -> Success';\nexport const SIGNIN_FAILED = '[User] Sign in -> Failed';\nexport const SIGNOUT = '[User] Sign out';\nexport const UPDATEINFO = '[User] Update info';\nexport const GETINFO = '[User] Get info';\nexport const GETINFO_SUCCESS = '[User] Get info -> Success';\nexport const GETINFO_FAILED = '[User] Get info -> Failed';\nexport const EDITINFO = '[User] EditInfo';\nexport const EDITINFO_SUCCESS = '[User] EditInfo -> Success';\nexport const EDITINFO_FAILED = '[User] EditInfo -> Failed';\nexport const FORGOT_PASSWORD = '[User] Forgot password';\nexport const FORGOT_PASSWORD_SENT_SUCCESS = '[User] Forgot password -> Sent Success';\nexport const FORGOT_PASSWORD_SENT_FAILED = '[User] Forgot password -> Sent Failed';\nexport const INIT_INFO = '[User] Init information';\nexport const UPDATE_CREDIT = '[User] Update credit';\nexport const UPDATE_CREDIT_SUCCESS = \"[User] Update credit -> Success\";\nexport const UPDATE_CREDIT_FAILED = \"[User] Update credit -> Failed\";\nexport const PAY_CREDITS = '[User] Pay credits';\nexport const PAY_CREDITS_SUCCESS = '[User] Pay credits -> Success';\nexport const REMOVE_CREDITS = '[User] Remove credits';\nexport const NO_MORE_CREDITS = '[User] No more credits';\nexport const UPDATE_LOG = \"[User] Update log\";\nexport const UPDATE_LOG_SUCCESS = \"[User] Update log -> Success\";\nexport const UPDATE_LOG_FAILED = \"[User] Update log -> Failed\";\n\n\nexport class Login implements Action {\n    readonly type = LOGIN;\n    constructor(public payload: { email: string, password: string }) { }\n}\n\nexport class LoginSuccess implements Action {\n    readonly type = LOGIN_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginFailed implements Action {\n    readonly type = LOGIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class LoginG implements Action {\n    readonly type = LOGIN_G;\n    constructor() { }\n}\n\nexport class LoginGSuccess implements Action {\n    readonly type = LOGIN_G_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginGFailed implements Action {\n    readonly type = LOGIN_G_FAILED;\n}\n\nexport class SignOut implements Action {\n    readonly type = SIGNOUT;\n    constructor() { }\n}\n\nexport class SignIn implements Action {\n    readonly type = SIGNIN;\n    constructor(public payload: { email: string, password: string, retypePassword: string, agreeTerm: boolean }) { }\n}\n\nexport class SignInSuccess implements Action {\n    readonly type = SIGNIN_SUCCESS;\n    constructor() { }\n}\n\nexport class SignInFailed implements Action {\n    readonly type = SIGNIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class UpdateInfo implements Action {\n    readonly type = UPDATEINFO;\n    constructor(public payload: { name: string, address: string, phone: string }) { }\n}\n\nexport class GetInfo implements Action {\n    readonly type = GETINFO;\n    constructor(public payload: { email: string, annonymous: boolean }) { }\n}\n\nexport class GetInfoSuccess implements Action {\n    readonly type = GETINFO_SUCCESS;\n    constructor(public payload: { data: any }) { }\n}\n\nexport class GetInfoFailed implements Action {\n    readonly type = GETINFO_FAILED;\n    constructor() { }\n}\n\nexport class EditInfo implements Action {\n    readonly type = EDITINFO;\n    constructor(public payload: { newName: string, newPhone: string }) { }\n}\n\nexport class EditInfoSuccess implements Action {\n    readonly type = EDITINFO_SUCCESS;\n    constructor() { }\n}\n\nexport class EditInfoFailed implements Action {\n    readonly type = EDITINFO_FAILED;\n    constructor() { }\n}\n\nexport class ForgotPassword implements Action {\n    readonly type = FORGOT_PASSWORD;\n    constructor(public payload: { email: string }) { }\n}\n\nexport class ForgotPasswordSentSuccess implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_SUCCESS;\n    constructor() { }\n}\n\nexport class ForgotPasswordSentFailed implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_FAILED;\n    constructor() { }\n}\n\nexport class InitInfo implements Action {\n    readonly type = INIT_INFO;\n    constructor(public payload: { userEmail: string }) { }\n}\n\nexport class UpdateCredit implements Action {\n    readonly type = UPDATE_CREDIT;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class UpdateCreditSuccess implements Action {\n    readonly type = UPDATE_CREDIT_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateCreditFailed implements Action {\n    readonly type = UPDATE_CREDIT_FAILED;\n    constructor() { }\n}\n\nexport class PayCredits implements Action {\n    readonly type = PAY_CREDITS;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class PayCreditsSuccess implements Action {\n    readonly type = PAY_CREDITS_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLog implements Action {\n    readonly type = UPDATE_LOG;\n    constructor(public payload: { data: any, timestamp: any, log: any }) { }\n}\n\nexport class UpdateLogSuccess implements Action {\n    readonly type = UPDATE_LOG_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLogFailed implements Action {\n    readonly type = UPDATE_LOG_FAILED;\n    constructor() { }\n}\n\n\nexport type All\n    = Login\n    | LoginSuccess\n    | LoginFailed\n    | LoginG\n    | LoginGSuccess\n    | LoginGFailed\n    | UpdateInfo\n    | GetInfo\n    | GetInfoSuccess\n    | GetInfoFailed\n    | EditInfo\n    | EditInfoSuccess\n    | EditInfoFailed\n    | SignIn\n    | SignInSuccess\n    | SignInFailed\n    | SignOut\n    | ForgotPassword\n    | ForgotPasswordSentSuccess\n    | ForgotPasswordSentFailed\n    | InitInfo\n    | UpdateCredit\n    | UpdateCreditSuccess\n    | UpdateCreditFailed\n    | PayCredits\n    | PayCreditsSuccess\n    | UpdateLog\n    | UpdateLogSuccess\n    | UpdateLogFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetInfoSuccess.html":{"url":"classes/GetInfoSuccess.html","title":"class - GetInfoSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetInfoSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/user.actions.ts:97\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : GETINFO_SUCCESS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:97\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[User] Login';\nexport const LOGIN_SUCCESS = '[User] Login -> Success';\nexport const LOGIN_FAILED = '[User] Login -> Failed';\nexport const LOGIN_G = '[User] Login Google';\nexport const LOGIN_G_SUCCESS = '[User] Login Google -> Success';\nexport const LOGIN_G_FAILED = '[User] Login Google -> Failed';\nexport const SIGNIN = '[User] SignIn';\nexport const SIGNIN_SUCCESS = '[User] Sign in -> Success';\nexport const SIGNIN_FAILED = '[User] Sign in -> Failed';\nexport const SIGNOUT = '[User] Sign out';\nexport const UPDATEINFO = '[User] Update info';\nexport const GETINFO = '[User] Get info';\nexport const GETINFO_SUCCESS = '[User] Get info -> Success';\nexport const GETINFO_FAILED = '[User] Get info -> Failed';\nexport const EDITINFO = '[User] EditInfo';\nexport const EDITINFO_SUCCESS = '[User] EditInfo -> Success';\nexport const EDITINFO_FAILED = '[User] EditInfo -> Failed';\nexport const FORGOT_PASSWORD = '[User] Forgot password';\nexport const FORGOT_PASSWORD_SENT_SUCCESS = '[User] Forgot password -> Sent Success';\nexport const FORGOT_PASSWORD_SENT_FAILED = '[User] Forgot password -> Sent Failed';\nexport const INIT_INFO = '[User] Init information';\nexport const UPDATE_CREDIT = '[User] Update credit';\nexport const UPDATE_CREDIT_SUCCESS = \"[User] Update credit -> Success\";\nexport const UPDATE_CREDIT_FAILED = \"[User] Update credit -> Failed\";\nexport const PAY_CREDITS = '[User] Pay credits';\nexport const PAY_CREDITS_SUCCESS = '[User] Pay credits -> Success';\nexport const REMOVE_CREDITS = '[User] Remove credits';\nexport const NO_MORE_CREDITS = '[User] No more credits';\nexport const UPDATE_LOG = \"[User] Update log\";\nexport const UPDATE_LOG_SUCCESS = \"[User] Update log -> Success\";\nexport const UPDATE_LOG_FAILED = \"[User] Update log -> Failed\";\n\n\nexport class Login implements Action {\n    readonly type = LOGIN;\n    constructor(public payload: { email: string, password: string }) { }\n}\n\nexport class LoginSuccess implements Action {\n    readonly type = LOGIN_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginFailed implements Action {\n    readonly type = LOGIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class LoginG implements Action {\n    readonly type = LOGIN_G;\n    constructor() { }\n}\n\nexport class LoginGSuccess implements Action {\n    readonly type = LOGIN_G_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginGFailed implements Action {\n    readonly type = LOGIN_G_FAILED;\n}\n\nexport class SignOut implements Action {\n    readonly type = SIGNOUT;\n    constructor() { }\n}\n\nexport class SignIn implements Action {\n    readonly type = SIGNIN;\n    constructor(public payload: { email: string, password: string, retypePassword: string, agreeTerm: boolean }) { }\n}\n\nexport class SignInSuccess implements Action {\n    readonly type = SIGNIN_SUCCESS;\n    constructor() { }\n}\n\nexport class SignInFailed implements Action {\n    readonly type = SIGNIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class UpdateInfo implements Action {\n    readonly type = UPDATEINFO;\n    constructor(public payload: { name: string, address: string, phone: string }) { }\n}\n\nexport class GetInfo implements Action {\n    readonly type = GETINFO;\n    constructor(public payload: { email: string, annonymous: boolean }) { }\n}\n\nexport class GetInfoSuccess implements Action {\n    readonly type = GETINFO_SUCCESS;\n    constructor(public payload: { data: any }) { }\n}\n\nexport class GetInfoFailed implements Action {\n    readonly type = GETINFO_FAILED;\n    constructor() { }\n}\n\nexport class EditInfo implements Action {\n    readonly type = EDITINFO;\n    constructor(public payload: { newName: string, newPhone: string }) { }\n}\n\nexport class EditInfoSuccess implements Action {\n    readonly type = EDITINFO_SUCCESS;\n    constructor() { }\n}\n\nexport class EditInfoFailed implements Action {\n    readonly type = EDITINFO_FAILED;\n    constructor() { }\n}\n\nexport class ForgotPassword implements Action {\n    readonly type = FORGOT_PASSWORD;\n    constructor(public payload: { email: string }) { }\n}\n\nexport class ForgotPasswordSentSuccess implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_SUCCESS;\n    constructor() { }\n}\n\nexport class ForgotPasswordSentFailed implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_FAILED;\n    constructor() { }\n}\n\nexport class InitInfo implements Action {\n    readonly type = INIT_INFO;\n    constructor(public payload: { userEmail: string }) { }\n}\n\nexport class UpdateCredit implements Action {\n    readonly type = UPDATE_CREDIT;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class UpdateCreditSuccess implements Action {\n    readonly type = UPDATE_CREDIT_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateCreditFailed implements Action {\n    readonly type = UPDATE_CREDIT_FAILED;\n    constructor() { }\n}\n\nexport class PayCredits implements Action {\n    readonly type = PAY_CREDITS;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class PayCreditsSuccess implements Action {\n    readonly type = PAY_CREDITS_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLog implements Action {\n    readonly type = UPDATE_LOG;\n    constructor(public payload: { data: any, timestamp: any, log: any }) { }\n}\n\nexport class UpdateLogSuccess implements Action {\n    readonly type = UPDATE_LOG_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLogFailed implements Action {\n    readonly type = UPDATE_LOG_FAILED;\n    constructor() { }\n}\n\n\nexport type All\n    = Login\n    | LoginSuccess\n    | LoginFailed\n    | LoginG\n    | LoginGSuccess\n    | LoginGFailed\n    | UpdateInfo\n    | GetInfo\n    | GetInfoSuccess\n    | GetInfoFailed\n    | EditInfo\n    | EditInfoSuccess\n    | EditInfoFailed\n    | SignIn\n    | SignInSuccess\n    | SignInFailed\n    | SignOut\n    | ForgotPassword\n    | ForgotPasswordSentSuccess\n    | ForgotPasswordSentFailed\n    | InitInfo\n    | UpdateCredit\n    | UpdateCreditSuccess\n    | UpdateCreditFailed\n    | PayCredits\n    | PayCreditsSuccess\n    | UpdateLog\n    | UpdateLogSuccess\n    | UpdateLogFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/History.html":{"url":"interfaces/History.html","title":"interface - History","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  History\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/models/history.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        generated\n                                \n                                \n                                        log\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        generated\n                                    \n                                \n                                \n                                    \n                                        generated:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        log\n                                    \n                                \n                                \n                                    \n                                        log:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface History {\n    log: any;\n    generated: any;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoryEffects.html":{"url":"injectables/HistoryEffects.html","title":"injectable - HistoryEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HistoryEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/effects/history.effect.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fetchGenerated\n                            \n                            \n                                fetchLog\n                            \n                            \n                                updateGeneratedLog\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions: Actions, db: AngularFireDatabase, afAuth: AngularFireAuth)\n                    \n                \n                        \n                            \n                                Defined in src/app/states/effects/history.effect.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fetchGenerated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions.pipe(\n        ofType(HistoryAction.FETCH_GENERATED_LOG),\n        switchMap(() => this.db.list('users/' + this.afAuth.auth.currentUser.email.replace('.', '&') + '/generated/').snapshotChanges()),\n        map((changes) => {\n            let rawGenerated = changes.map((value) => ({ key: value.key, value: value.payload.val() }));\n            let generated = {};\n            let keys = Object.keys(rawGenerated);\n            for (let i = 0; i \n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/effects/history.effect.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fetchLog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions.pipe(\n        ofType(HistoryAction.FETCH),\n        switchMap(() => this.db.list('users/' + this.afAuth.auth.currentUser.email.replace('.', '&') + '/log/').snapshotChanges()),\n        map((changes) => {\n            let rawLog = changes.map((value) => ({ key: value.key, value: value.payload.val() }));\n            let log = {};\n            let keys = Object.keys(rawLog);\n            for (let i = 0; i \n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/effects/history.effect.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateGeneratedLog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions.pipe(\n        ofType(HistoryAction.UPDATE_GENERATED_LOG),\n        map((action: HistoryAction.UpdateGeneratedLog) => action.payload),\n        switchMap((payload) => {\n            let updation = {};\n            updation[payload.questionID] = 1;\n            return this.db.object('users/' + this.afAuth.auth.currentUser.email.replace('.', '&') + '/generated/' + payload.major + '/' + payload.minor + '/')\n                .update(updation);\n        }),\n        map(() => new HistoryAction.UpdateGeneratedLogSuccess())\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/effects/history.effect.ts:48\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\n\nimport * as HistoryAction from '../actions/history.action'\nimport { Effect, ofType } from \"@ngrx/effects\";\nimport { Observable } from \"rxjs\";\nimport { Actions } from '@ngrx/effects';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { Action } from '@ngrx/store';\nimport { mergeMap, map, switchMap } from \"rxjs/operators\";\nimport { AngularFireAuth } from \"@angular/fire/auth\";\n\n\n@Injectable()\nexport default class HistoryEffects {\n    constructor(private actions: Actions, private db: AngularFireDatabase, private afAuth: AngularFireAuth) { }\n\n    @Effect()\n    fetchLog: Observable = this.actions.pipe(\n        ofType(HistoryAction.FETCH),\n        switchMap(() => this.db.list('users/' + this.afAuth.auth.currentUser.email.replace('.', '&') + '/log/').snapshotChanges()),\n        map((changes) => {\n            let rawLog = changes.map((value) => ({ key: value.key, value: value.payload.val() }));\n            let log = {};\n            let keys = Object.keys(rawLog);\n            for (let i = 0; i  = this.actions.pipe(\n        ofType(HistoryAction.FETCH_GENERATED_LOG),\n        switchMap(() => this.db.list('users/' + this.afAuth.auth.currentUser.email.replace('.', '&') + '/generated/').snapshotChanges()),\n        map((changes) => {\n            let rawGenerated = changes.map((value) => ({ key: value.key, value: value.payload.val() }));\n            let generated = {};\n            let keys = Object.keys(rawGenerated);\n            for (let i = 0; i  = this.actions.pipe(\n        ofType(HistoryAction.UPDATE_GENERATED_LOG),\n        map((action: HistoryAction.UpdateGeneratedLog) => action.payload),\n        switchMap((payload) => {\n            let updation = {};\n            updation[payload.questionID] = 1;\n            return this.db.object('users/' + this.afAuth.auth.currentUser.email.replace('.', '&') + '/generated/' + payload.major + '/' + payload.minor + '/')\n                .update(updation);\n        }),\n        map(() => new HistoryAction.UpdateGeneratedLogSuccess())\n    )\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoryService.html":{"url":"injectables/HistoryService.html","title":"injectable - HistoryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HistoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/history.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                history\n                            \n                            \n                                history$\n                            \n                            \n                                logByCat\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSubCatPercent\n                            \n                            \n                                setCategoryService\n                            \n                            \n                                writeGeneratedLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/history.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSubCatPercent\n                        \n                        \n                    \n                \n            \n            \n                \ngetSubCatPercent(subCatID)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/history.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subCatID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCategoryService\n                        \n                        \n                    \n                \n            \n            \n                \nsetCategoryService(categoryService: CategoryService)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/history.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoryService\n                                    \n                                                CategoryService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeGeneratedLog\n                        \n                        \n                    \n                \n            \n            \n                \nwriteGeneratedLog(data: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/history.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            history\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         History\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/history.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            history$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/history.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logByCat\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/services/history.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport IAppState from '../IAppState';\nimport History from '../states/models/history.model';\nimport * as HistoryAction from '../states/actions/history.action';\nimport { CategoryService } from './category.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HistoryService {\n\n  history$: Observable;\n  history: History;\n  logByCat;\n  constructor(private store: Store) {\n    this.history$ = store.select('history');\n    this.store.dispatch(new HistoryAction.Fetch());\n    this.history$.subscribe((payload) => {\n      this.history = payload;\n\n    })\n    //this.store.dispatch(new HistoryAction.FetchGeneratedLog());\n  }\n\n  getSubCatPercent(subCatID) {\n\n  }\n\n  setCategoryService(categoryService: CategoryService) {\n    this.logByCat = categoryService.getCategoryTree({ correct: 0, incorrect: 0 });\n  }\n\n  writeGeneratedLog(data: Array) {\n    let keys = Object.keys(data);\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAppState.html":{"url":"interfaces/IAppState.html","title":"interface - IAppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/IAppState.ts\n        \n\n            \n                Description\n            \n            \n                Store all app states\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        category\n                                \n                                \n                                        config\n                                \n                                \n                                        history\n                                \n                                \n                                        question\n                                \n                                \n                                        syslog\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:         Category\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         Config\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Config\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    App configuration\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        history\n                                    \n                                \n                                \n                                    \n                                        history:         History\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         History\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        question\n                                    \n                                \n                                \n                                    \n                                        question:         Question\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Question\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        syslog\n                                    \n                                \n                                \n                                    \n                                        syslog:         SysLog\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SysLog\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    All user information\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { User } from './states/models/user.model';\nimport { Config } from './states/models/config.model';\nimport { Category } from './states/models/category.model';\nimport History from './states/models/history.model';\nimport Question from './states/models/question.model';\nimport SysLog from './states/models/syslog.model';\n\n/**\n * Store all app states\n */\nexport default interface IAppState {\n    /**\n     * All user information\n     */\n    user: User;\n    /**\n     * App configuration\n     */\n    config: Config;\n\n    category: Category;\n\n    history: History;\n\n    question: Question;\n\n    syslog: SysLog;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/InTestGuard.html":{"url":"guards/InTestGuard.html","title":"guard - InTestGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    InTestGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/in-test.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Protect the router: User cannot leave test room until they finish the test\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/in-test.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canDeactivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanDeactivate(component: any, currentRoute: ActivatedRouteSnapshot, currentState: RouterStateSnapshot, nextState: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/in-test.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentRoute\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentState\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nextState\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { DataService } from '../data.service';\n\n/**\n * Protect the router: User cannot leave test room until they finish the test\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class InTestGuard implements CanDeactivate {\n  constructor(private dataService: DataService) { }\n\n  canDeactivate(\n    component: any,\n    currentRoute: ActivatedRouteSnapshot,\n    currentState: RouterStateSnapshot,\n    nextState: RouterStateSnapshot\n  ): Observable | Promise | boolean | UrlTree {\n    return !this.dataService.navState['testing'];\n  }\n\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitInfo.html":{"url":"classes/InitInfo.html","title":"class - InitInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/user.actions.ts:137\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:138\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : INIT_INFO\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:137\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[User] Login';\nexport const LOGIN_SUCCESS = '[User] Login -> Success';\nexport const LOGIN_FAILED = '[User] Login -> Failed';\nexport const LOGIN_G = '[User] Login Google';\nexport const LOGIN_G_SUCCESS = '[User] Login Google -> Success';\nexport const LOGIN_G_FAILED = '[User] Login Google -> Failed';\nexport const SIGNIN = '[User] SignIn';\nexport const SIGNIN_SUCCESS = '[User] Sign in -> Success';\nexport const SIGNIN_FAILED = '[User] Sign in -> Failed';\nexport const SIGNOUT = '[User] Sign out';\nexport const UPDATEINFO = '[User] Update info';\nexport const GETINFO = '[User] Get info';\nexport const GETINFO_SUCCESS = '[User] Get info -> Success';\nexport const GETINFO_FAILED = '[User] Get info -> Failed';\nexport const EDITINFO = '[User] EditInfo';\nexport const EDITINFO_SUCCESS = '[User] EditInfo -> Success';\nexport const EDITINFO_FAILED = '[User] EditInfo -> Failed';\nexport const FORGOT_PASSWORD = '[User] Forgot password';\nexport const FORGOT_PASSWORD_SENT_SUCCESS = '[User] Forgot password -> Sent Success';\nexport const FORGOT_PASSWORD_SENT_FAILED = '[User] Forgot password -> Sent Failed';\nexport const INIT_INFO = '[User] Init information';\nexport const UPDATE_CREDIT = '[User] Update credit';\nexport const UPDATE_CREDIT_SUCCESS = \"[User] Update credit -> Success\";\nexport const UPDATE_CREDIT_FAILED = \"[User] Update credit -> Failed\";\nexport const PAY_CREDITS = '[User] Pay credits';\nexport const PAY_CREDITS_SUCCESS = '[User] Pay credits -> Success';\nexport const REMOVE_CREDITS = '[User] Remove credits';\nexport const NO_MORE_CREDITS = '[User] No more credits';\nexport const UPDATE_LOG = \"[User] Update log\";\nexport const UPDATE_LOG_SUCCESS = \"[User] Update log -> Success\";\nexport const UPDATE_LOG_FAILED = \"[User] Update log -> Failed\";\n\n\nexport class Login implements Action {\n    readonly type = LOGIN;\n    constructor(public payload: { email: string, password: string }) { }\n}\n\nexport class LoginSuccess implements Action {\n    readonly type = LOGIN_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginFailed implements Action {\n    readonly type = LOGIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class LoginG implements Action {\n    readonly type = LOGIN_G;\n    constructor() { }\n}\n\nexport class LoginGSuccess implements Action {\n    readonly type = LOGIN_G_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginGFailed implements Action {\n    readonly type = LOGIN_G_FAILED;\n}\n\nexport class SignOut implements Action {\n    readonly type = SIGNOUT;\n    constructor() { }\n}\n\nexport class SignIn implements Action {\n    readonly type = SIGNIN;\n    constructor(public payload: { email: string, password: string, retypePassword: string, agreeTerm: boolean }) { }\n}\n\nexport class SignInSuccess implements Action {\n    readonly type = SIGNIN_SUCCESS;\n    constructor() { }\n}\n\nexport class SignInFailed implements Action {\n    readonly type = SIGNIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class UpdateInfo implements Action {\n    readonly type = UPDATEINFO;\n    constructor(public payload: { name: string, address: string, phone: string }) { }\n}\n\nexport class GetInfo implements Action {\n    readonly type = GETINFO;\n    constructor(public payload: { email: string, annonymous: boolean }) { }\n}\n\nexport class GetInfoSuccess implements Action {\n    readonly type = GETINFO_SUCCESS;\n    constructor(public payload: { data: any }) { }\n}\n\nexport class GetInfoFailed implements Action {\n    readonly type = GETINFO_FAILED;\n    constructor() { }\n}\n\nexport class EditInfo implements Action {\n    readonly type = EDITINFO;\n    constructor(public payload: { newName: string, newPhone: string }) { }\n}\n\nexport class EditInfoSuccess implements Action {\n    readonly type = EDITINFO_SUCCESS;\n    constructor() { }\n}\n\nexport class EditInfoFailed implements Action {\n    readonly type = EDITINFO_FAILED;\n    constructor() { }\n}\n\nexport class ForgotPassword implements Action {\n    readonly type = FORGOT_PASSWORD;\n    constructor(public payload: { email: string }) { }\n}\n\nexport class ForgotPasswordSentSuccess implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_SUCCESS;\n    constructor() { }\n}\n\nexport class ForgotPasswordSentFailed implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_FAILED;\n    constructor() { }\n}\n\nexport class InitInfo implements Action {\n    readonly type = INIT_INFO;\n    constructor(public payload: { userEmail: string }) { }\n}\n\nexport class UpdateCredit implements Action {\n    readonly type = UPDATE_CREDIT;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class UpdateCreditSuccess implements Action {\n    readonly type = UPDATE_CREDIT_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateCreditFailed implements Action {\n    readonly type = UPDATE_CREDIT_FAILED;\n    constructor() { }\n}\n\nexport class PayCredits implements Action {\n    readonly type = PAY_CREDITS;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class PayCreditsSuccess implements Action {\n    readonly type = PAY_CREDITS_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLog implements Action {\n    readonly type = UPDATE_LOG;\n    constructor(public payload: { data: any, timestamp: any, log: any }) { }\n}\n\nexport class UpdateLogSuccess implements Action {\n    readonly type = UPDATE_LOG_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLogFailed implements Action {\n    readonly type = UPDATE_LOG_FAILED;\n    constructor() { }\n}\n\n\nexport type All\n    = Login\n    | LoginSuccess\n    | LoginFailed\n    | LoginG\n    | LoginGSuccess\n    | LoginGFailed\n    | UpdateInfo\n    | GetInfo\n    | GetInfoSuccess\n    | GetInfoFailed\n    | EditInfo\n    | EditInfoSuccess\n    | EditInfoFailed\n    | SignIn\n    | SignInSuccess\n    | SignInFailed\n    | SignOut\n    | ForgotPassword\n    | ForgotPasswordSentSuccess\n    | ForgotPasswordSentFailed\n    | InitInfo\n    | UpdateCredit\n    | UpdateCreditSuccess\n    | UpdateCreditFailed\n    | PayCredits\n    | PayCreditsSuccess\n    | UpdateLog\n    | UpdateLogSuccess\n    | UpdateLogFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Login.html":{"url":"classes/Login.html","title":"class - Login","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Login\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/user.actions.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LOGIN\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[User] Login';\nexport const LOGIN_SUCCESS = '[User] Login -> Success';\nexport const LOGIN_FAILED = '[User] Login -> Failed';\nexport const LOGIN_G = '[User] Login Google';\nexport const LOGIN_G_SUCCESS = '[User] Login Google -> Success';\nexport const LOGIN_G_FAILED = '[User] Login Google -> Failed';\nexport const SIGNIN = '[User] SignIn';\nexport const SIGNIN_SUCCESS = '[User] Sign in -> Success';\nexport const SIGNIN_FAILED = '[User] Sign in -> Failed';\nexport const SIGNOUT = '[User] Sign out';\nexport const UPDATEINFO = '[User] Update info';\nexport const GETINFO = '[User] Get info';\nexport const GETINFO_SUCCESS = '[User] Get info -> Success';\nexport const GETINFO_FAILED = '[User] Get info -> Failed';\nexport const EDITINFO = '[User] EditInfo';\nexport const EDITINFO_SUCCESS = '[User] EditInfo -> Success';\nexport const EDITINFO_FAILED = '[User] EditInfo -> Failed';\nexport const FORGOT_PASSWORD = '[User] Forgot password';\nexport const FORGOT_PASSWORD_SENT_SUCCESS = '[User] Forgot password -> Sent Success';\nexport const FORGOT_PASSWORD_SENT_FAILED = '[User] Forgot password -> Sent Failed';\nexport const INIT_INFO = '[User] Init information';\nexport const UPDATE_CREDIT = '[User] Update credit';\nexport const UPDATE_CREDIT_SUCCESS = \"[User] Update credit -> Success\";\nexport const UPDATE_CREDIT_FAILED = \"[User] Update credit -> Failed\";\nexport const PAY_CREDITS = '[User] Pay credits';\nexport const PAY_CREDITS_SUCCESS = '[User] Pay credits -> Success';\nexport const REMOVE_CREDITS = '[User] Remove credits';\nexport const NO_MORE_CREDITS = '[User] No more credits';\nexport const UPDATE_LOG = \"[User] Update log\";\nexport const UPDATE_LOG_SUCCESS = \"[User] Update log -> Success\";\nexport const UPDATE_LOG_FAILED = \"[User] Update log -> Failed\";\n\n\nexport class Login implements Action {\n    readonly type = LOGIN;\n    constructor(public payload: { email: string, password: string }) { }\n}\n\nexport class LoginSuccess implements Action {\n    readonly type = LOGIN_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginFailed implements Action {\n    readonly type = LOGIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class LoginG implements Action {\n    readonly type = LOGIN_G;\n    constructor() { }\n}\n\nexport class LoginGSuccess implements Action {\n    readonly type = LOGIN_G_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginGFailed implements Action {\n    readonly type = LOGIN_G_FAILED;\n}\n\nexport class SignOut implements Action {\n    readonly type = SIGNOUT;\n    constructor() { }\n}\n\nexport class SignIn implements Action {\n    readonly type = SIGNIN;\n    constructor(public payload: { email: string, password: string, retypePassword: string, agreeTerm: boolean }) { }\n}\n\nexport class SignInSuccess implements Action {\n    readonly type = SIGNIN_SUCCESS;\n    constructor() { }\n}\n\nexport class SignInFailed implements Action {\n    readonly type = SIGNIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class UpdateInfo implements Action {\n    readonly type = UPDATEINFO;\n    constructor(public payload: { name: string, address: string, phone: string }) { }\n}\n\nexport class GetInfo implements Action {\n    readonly type = GETINFO;\n    constructor(public payload: { email: string, annonymous: boolean }) { }\n}\n\nexport class GetInfoSuccess implements Action {\n    readonly type = GETINFO_SUCCESS;\n    constructor(public payload: { data: any }) { }\n}\n\nexport class GetInfoFailed implements Action {\n    readonly type = GETINFO_FAILED;\n    constructor() { }\n}\n\nexport class EditInfo implements Action {\n    readonly type = EDITINFO;\n    constructor(public payload: { newName: string, newPhone: string }) { }\n}\n\nexport class EditInfoSuccess implements Action {\n    readonly type = EDITINFO_SUCCESS;\n    constructor() { }\n}\n\nexport class EditInfoFailed implements Action {\n    readonly type = EDITINFO_FAILED;\n    constructor() { }\n}\n\nexport class ForgotPassword implements Action {\n    readonly type = FORGOT_PASSWORD;\n    constructor(public payload: { email: string }) { }\n}\n\nexport class ForgotPasswordSentSuccess implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_SUCCESS;\n    constructor() { }\n}\n\nexport class ForgotPasswordSentFailed implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_FAILED;\n    constructor() { }\n}\n\nexport class InitInfo implements Action {\n    readonly type = INIT_INFO;\n    constructor(public payload: { userEmail: string }) { }\n}\n\nexport class UpdateCredit implements Action {\n    readonly type = UPDATE_CREDIT;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class UpdateCreditSuccess implements Action {\n    readonly type = UPDATE_CREDIT_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateCreditFailed implements Action {\n    readonly type = UPDATE_CREDIT_FAILED;\n    constructor() { }\n}\n\nexport class PayCredits implements Action {\n    readonly type = PAY_CREDITS;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class PayCreditsSuccess implements Action {\n    readonly type = PAY_CREDITS_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLog implements Action {\n    readonly type = UPDATE_LOG;\n    constructor(public payload: { data: any, timestamp: any, log: any }) { }\n}\n\nexport class UpdateLogSuccess implements Action {\n    readonly type = UPDATE_LOG_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLogFailed implements Action {\n    readonly type = UPDATE_LOG_FAILED;\n    constructor() { }\n}\n\n\nexport type All\n    = Login\n    | LoginSuccess\n    | LoginFailed\n    | LoginG\n    | LoginGSuccess\n    | LoginGFailed\n    | UpdateInfo\n    | GetInfo\n    | GetInfoSuccess\n    | GetInfoFailed\n    | EditInfo\n    | EditInfoSuccess\n    | EditInfoFailed\n    | SignIn\n    | SignInSuccess\n    | SignInFailed\n    | SignOut\n    | ForgotPassword\n    | ForgotPasswordSentSuccess\n    | ForgotPasswordSentFailed\n    | InitInfo\n    | UpdateCredit\n    | UpdateCreditSuccess\n    | UpdateCreditFailed\n    | PayCredits\n    | PayCreditsSuccess\n    | UpdateLog\n    | UpdateLogSuccess\n    | UpdateLogFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginFailed.html":{"url":"classes/LoginFailed.html","title":"class - LoginFailed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginFailed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/user.actions.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LOGIN_FAILED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[User] Login';\nexport const LOGIN_SUCCESS = '[User] Login -> Success';\nexport const LOGIN_FAILED = '[User] Login -> Failed';\nexport const LOGIN_G = '[User] Login Google';\nexport const LOGIN_G_SUCCESS = '[User] Login Google -> Success';\nexport const LOGIN_G_FAILED = '[User] Login Google -> Failed';\nexport const SIGNIN = '[User] SignIn';\nexport const SIGNIN_SUCCESS = '[User] Sign in -> Success';\nexport const SIGNIN_FAILED = '[User] Sign in -> Failed';\nexport const SIGNOUT = '[User] Sign out';\nexport const UPDATEINFO = '[User] Update info';\nexport const GETINFO = '[User] Get info';\nexport const GETINFO_SUCCESS = '[User] Get info -> Success';\nexport const GETINFO_FAILED = '[User] Get info -> Failed';\nexport const EDITINFO = '[User] EditInfo';\nexport const EDITINFO_SUCCESS = '[User] EditInfo -> Success';\nexport const EDITINFO_FAILED = '[User] EditInfo -> Failed';\nexport const FORGOT_PASSWORD = '[User] Forgot password';\nexport const FORGOT_PASSWORD_SENT_SUCCESS = '[User] Forgot password -> Sent Success';\nexport const FORGOT_PASSWORD_SENT_FAILED = '[User] Forgot password -> Sent Failed';\nexport const INIT_INFO = '[User] Init information';\nexport const UPDATE_CREDIT = '[User] Update credit';\nexport const UPDATE_CREDIT_SUCCESS = \"[User] Update credit -> Success\";\nexport const UPDATE_CREDIT_FAILED = \"[User] Update credit -> Failed\";\nexport const PAY_CREDITS = '[User] Pay credits';\nexport const PAY_CREDITS_SUCCESS = '[User] Pay credits -> Success';\nexport const REMOVE_CREDITS = '[User] Remove credits';\nexport const NO_MORE_CREDITS = '[User] No more credits';\nexport const UPDATE_LOG = \"[User] Update log\";\nexport const UPDATE_LOG_SUCCESS = \"[User] Update log -> Success\";\nexport const UPDATE_LOG_FAILED = \"[User] Update log -> Failed\";\n\n\nexport class Login implements Action {\n    readonly type = LOGIN;\n    constructor(public payload: { email: string, password: string }) { }\n}\n\nexport class LoginSuccess implements Action {\n    readonly type = LOGIN_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginFailed implements Action {\n    readonly type = LOGIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class LoginG implements Action {\n    readonly type = LOGIN_G;\n    constructor() { }\n}\n\nexport class LoginGSuccess implements Action {\n    readonly type = LOGIN_G_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginGFailed implements Action {\n    readonly type = LOGIN_G_FAILED;\n}\n\nexport class SignOut implements Action {\n    readonly type = SIGNOUT;\n    constructor() { }\n}\n\nexport class SignIn implements Action {\n    readonly type = SIGNIN;\n    constructor(public payload: { email: string, password: string, retypePassword: string, agreeTerm: boolean }) { }\n}\n\nexport class SignInSuccess implements Action {\n    readonly type = SIGNIN_SUCCESS;\n    constructor() { }\n}\n\nexport class SignInFailed implements Action {\n    readonly type = SIGNIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class UpdateInfo implements Action {\n    readonly type = UPDATEINFO;\n    constructor(public payload: { name: string, address: string, phone: string }) { }\n}\n\nexport class GetInfo implements Action {\n    readonly type = GETINFO;\n    constructor(public payload: { email: string, annonymous: boolean }) { }\n}\n\nexport class GetInfoSuccess implements Action {\n    readonly type = GETINFO_SUCCESS;\n    constructor(public payload: { data: any }) { }\n}\n\nexport class GetInfoFailed implements Action {\n    readonly type = GETINFO_FAILED;\n    constructor() { }\n}\n\nexport class EditInfo implements Action {\n    readonly type = EDITINFO;\n    constructor(public payload: { newName: string, newPhone: string }) { }\n}\n\nexport class EditInfoSuccess implements Action {\n    readonly type = EDITINFO_SUCCESS;\n    constructor() { }\n}\n\nexport class EditInfoFailed implements Action {\n    readonly type = EDITINFO_FAILED;\n    constructor() { }\n}\n\nexport class ForgotPassword implements Action {\n    readonly type = FORGOT_PASSWORD;\n    constructor(public payload: { email: string }) { }\n}\n\nexport class ForgotPasswordSentSuccess implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_SUCCESS;\n    constructor() { }\n}\n\nexport class ForgotPasswordSentFailed implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_FAILED;\n    constructor() { }\n}\n\nexport class InitInfo implements Action {\n    readonly type = INIT_INFO;\n    constructor(public payload: { userEmail: string }) { }\n}\n\nexport class UpdateCredit implements Action {\n    readonly type = UPDATE_CREDIT;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class UpdateCreditSuccess implements Action {\n    readonly type = UPDATE_CREDIT_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateCreditFailed implements Action {\n    readonly type = UPDATE_CREDIT_FAILED;\n    constructor() { }\n}\n\nexport class PayCredits implements Action {\n    readonly type = PAY_CREDITS;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class PayCreditsSuccess implements Action {\n    readonly type = PAY_CREDITS_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLog implements Action {\n    readonly type = UPDATE_LOG;\n    constructor(public payload: { data: any, timestamp: any, log: any }) { }\n}\n\nexport class UpdateLogSuccess implements Action {\n    readonly type = UPDATE_LOG_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLogFailed implements Action {\n    readonly type = UPDATE_LOG_FAILED;\n    constructor() { }\n}\n\n\nexport type All\n    = Login\n    | LoginSuccess\n    | LoginFailed\n    | LoginG\n    | LoginGSuccess\n    | LoginGFailed\n    | UpdateInfo\n    | GetInfo\n    | GetInfoSuccess\n    | GetInfoFailed\n    | EditInfo\n    | EditInfoSuccess\n    | EditInfoFailed\n    | SignIn\n    | SignInSuccess\n    | SignInFailed\n    | SignOut\n    | ForgotPassword\n    | ForgotPasswordSentSuccess\n    | ForgotPasswordSentFailed\n    | InitInfo\n    | UpdateCredit\n    | UpdateCreditSuccess\n    | UpdateCreditFailed\n    | PayCredits\n    | PayCreditsSuccess\n    | UpdateLog\n    | UpdateLogSuccess\n    | UpdateLogFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginG.html":{"url":"classes/LoginG.html","title":"class - LoginG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginG\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/user.actions.ts:53\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LOGIN_G\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[User] Login';\nexport const LOGIN_SUCCESS = '[User] Login -> Success';\nexport const LOGIN_FAILED = '[User] Login -> Failed';\nexport const LOGIN_G = '[User] Login Google';\nexport const LOGIN_G_SUCCESS = '[User] Login Google -> Success';\nexport const LOGIN_G_FAILED = '[User] Login Google -> Failed';\nexport const SIGNIN = '[User] SignIn';\nexport const SIGNIN_SUCCESS = '[User] Sign in -> Success';\nexport const SIGNIN_FAILED = '[User] Sign in -> Failed';\nexport const SIGNOUT = '[User] Sign out';\nexport const UPDATEINFO = '[User] Update info';\nexport const GETINFO = '[User] Get info';\nexport const GETINFO_SUCCESS = '[User] Get info -> Success';\nexport const GETINFO_FAILED = '[User] Get info -> Failed';\nexport const EDITINFO = '[User] EditInfo';\nexport const EDITINFO_SUCCESS = '[User] EditInfo -> Success';\nexport const EDITINFO_FAILED = '[User] EditInfo -> Failed';\nexport const FORGOT_PASSWORD = '[User] Forgot password';\nexport const FORGOT_PASSWORD_SENT_SUCCESS = '[User] Forgot password -> Sent Success';\nexport const FORGOT_PASSWORD_SENT_FAILED = '[User] Forgot password -> Sent Failed';\nexport const INIT_INFO = '[User] Init information';\nexport const UPDATE_CREDIT = '[User] Update credit';\nexport const UPDATE_CREDIT_SUCCESS = \"[User] Update credit -> Success\";\nexport const UPDATE_CREDIT_FAILED = \"[User] Update credit -> Failed\";\nexport const PAY_CREDITS = '[User] Pay credits';\nexport const PAY_CREDITS_SUCCESS = '[User] Pay credits -> Success';\nexport const REMOVE_CREDITS = '[User] Remove credits';\nexport const NO_MORE_CREDITS = '[User] No more credits';\nexport const UPDATE_LOG = \"[User] Update log\";\nexport const UPDATE_LOG_SUCCESS = \"[User] Update log -> Success\";\nexport const UPDATE_LOG_FAILED = \"[User] Update log -> Failed\";\n\n\nexport class Login implements Action {\n    readonly type = LOGIN;\n    constructor(public payload: { email: string, password: string }) { }\n}\n\nexport class LoginSuccess implements Action {\n    readonly type = LOGIN_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginFailed implements Action {\n    readonly type = LOGIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class LoginG implements Action {\n    readonly type = LOGIN_G;\n    constructor() { }\n}\n\nexport class LoginGSuccess implements Action {\n    readonly type = LOGIN_G_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginGFailed implements Action {\n    readonly type = LOGIN_G_FAILED;\n}\n\nexport class SignOut implements Action {\n    readonly type = SIGNOUT;\n    constructor() { }\n}\n\nexport class SignIn implements Action {\n    readonly type = SIGNIN;\n    constructor(public payload: { email: string, password: string, retypePassword: string, agreeTerm: boolean }) { }\n}\n\nexport class SignInSuccess implements Action {\n    readonly type = SIGNIN_SUCCESS;\n    constructor() { }\n}\n\nexport class SignInFailed implements Action {\n    readonly type = SIGNIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class UpdateInfo implements Action {\n    readonly type = UPDATEINFO;\n    constructor(public payload: { name: string, address: string, phone: string }) { }\n}\n\nexport class GetInfo implements Action {\n    readonly type = GETINFO;\n    constructor(public payload: { email: string, annonymous: boolean }) { }\n}\n\nexport class GetInfoSuccess implements Action {\n    readonly type = GETINFO_SUCCESS;\n    constructor(public payload: { data: any }) { }\n}\n\nexport class GetInfoFailed implements Action {\n    readonly type = GETINFO_FAILED;\n    constructor() { }\n}\n\nexport class EditInfo implements Action {\n    readonly type = EDITINFO;\n    constructor(public payload: { newName: string, newPhone: string }) { }\n}\n\nexport class EditInfoSuccess implements Action {\n    readonly type = EDITINFO_SUCCESS;\n    constructor() { }\n}\n\nexport class EditInfoFailed implements Action {\n    readonly type = EDITINFO_FAILED;\n    constructor() { }\n}\n\nexport class ForgotPassword implements Action {\n    readonly type = FORGOT_PASSWORD;\n    constructor(public payload: { email: string }) { }\n}\n\nexport class ForgotPasswordSentSuccess implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_SUCCESS;\n    constructor() { }\n}\n\nexport class ForgotPasswordSentFailed implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_FAILED;\n    constructor() { }\n}\n\nexport class InitInfo implements Action {\n    readonly type = INIT_INFO;\n    constructor(public payload: { userEmail: string }) { }\n}\n\nexport class UpdateCredit implements Action {\n    readonly type = UPDATE_CREDIT;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class UpdateCreditSuccess implements Action {\n    readonly type = UPDATE_CREDIT_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateCreditFailed implements Action {\n    readonly type = UPDATE_CREDIT_FAILED;\n    constructor() { }\n}\n\nexport class PayCredits implements Action {\n    readonly type = PAY_CREDITS;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class PayCreditsSuccess implements Action {\n    readonly type = PAY_CREDITS_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLog implements Action {\n    readonly type = UPDATE_LOG;\n    constructor(public payload: { data: any, timestamp: any, log: any }) { }\n}\n\nexport class UpdateLogSuccess implements Action {\n    readonly type = UPDATE_LOG_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLogFailed implements Action {\n    readonly type = UPDATE_LOG_FAILED;\n    constructor() { }\n}\n\n\nexport type All\n    = Login\n    | LoginSuccess\n    | LoginFailed\n    | LoginG\n    | LoginGSuccess\n    | LoginGFailed\n    | UpdateInfo\n    | GetInfo\n    | GetInfoSuccess\n    | GetInfoFailed\n    | EditInfo\n    | EditInfoSuccess\n    | EditInfoFailed\n    | SignIn\n    | SignInSuccess\n    | SignInFailed\n    | SignOut\n    | ForgotPassword\n    | ForgotPasswordSentSuccess\n    | ForgotPasswordSentFailed\n    | InitInfo\n    | UpdateCredit\n    | UpdateCreditSuccess\n    | UpdateCreditFailed\n    | PayCredits\n    | PayCreditsSuccess\n    | UpdateLog\n    | UpdateLogSuccess\n    | UpdateLogFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginGFailed.html":{"url":"classes/LoginGFailed.html","title":"class - LoginGFailed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginGFailed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LOGIN_G_FAILED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:63\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[User] Login';\nexport const LOGIN_SUCCESS = '[User] Login -> Success';\nexport const LOGIN_FAILED = '[User] Login -> Failed';\nexport const LOGIN_G = '[User] Login Google';\nexport const LOGIN_G_SUCCESS = '[User] Login Google -> Success';\nexport const LOGIN_G_FAILED = '[User] Login Google -> Failed';\nexport const SIGNIN = '[User] SignIn';\nexport const SIGNIN_SUCCESS = '[User] Sign in -> Success';\nexport const SIGNIN_FAILED = '[User] Sign in -> Failed';\nexport const SIGNOUT = '[User] Sign out';\nexport const UPDATEINFO = '[User] Update info';\nexport const GETINFO = '[User] Get info';\nexport const GETINFO_SUCCESS = '[User] Get info -> Success';\nexport const GETINFO_FAILED = '[User] Get info -> Failed';\nexport const EDITINFO = '[User] EditInfo';\nexport const EDITINFO_SUCCESS = '[User] EditInfo -> Success';\nexport const EDITINFO_FAILED = '[User] EditInfo -> Failed';\nexport const FORGOT_PASSWORD = '[User] Forgot password';\nexport const FORGOT_PASSWORD_SENT_SUCCESS = '[User] Forgot password -> Sent Success';\nexport const FORGOT_PASSWORD_SENT_FAILED = '[User] Forgot password -> Sent Failed';\nexport const INIT_INFO = '[User] Init information';\nexport const UPDATE_CREDIT = '[User] Update credit';\nexport const UPDATE_CREDIT_SUCCESS = \"[User] Update credit -> Success\";\nexport const UPDATE_CREDIT_FAILED = \"[User] Update credit -> Failed\";\nexport const PAY_CREDITS = '[User] Pay credits';\nexport const PAY_CREDITS_SUCCESS = '[User] Pay credits -> Success';\nexport const REMOVE_CREDITS = '[User] Remove credits';\nexport const NO_MORE_CREDITS = '[User] No more credits';\nexport const UPDATE_LOG = \"[User] Update log\";\nexport const UPDATE_LOG_SUCCESS = \"[User] Update log -> Success\";\nexport const UPDATE_LOG_FAILED = \"[User] Update log -> Failed\";\n\n\nexport class Login implements Action {\n    readonly type = LOGIN;\n    constructor(public payload: { email: string, password: string }) { }\n}\n\nexport class LoginSuccess implements Action {\n    readonly type = LOGIN_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginFailed implements Action {\n    readonly type = LOGIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class LoginG implements Action {\n    readonly type = LOGIN_G;\n    constructor() { }\n}\n\nexport class LoginGSuccess implements Action {\n    readonly type = LOGIN_G_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginGFailed implements Action {\n    readonly type = LOGIN_G_FAILED;\n}\n\nexport class SignOut implements Action {\n    readonly type = SIGNOUT;\n    constructor() { }\n}\n\nexport class SignIn implements Action {\n    readonly type = SIGNIN;\n    constructor(public payload: { email: string, password: string, retypePassword: string, agreeTerm: boolean }) { }\n}\n\nexport class SignInSuccess implements Action {\n    readonly type = SIGNIN_SUCCESS;\n    constructor() { }\n}\n\nexport class SignInFailed implements Action {\n    readonly type = SIGNIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class UpdateInfo implements Action {\n    readonly type = UPDATEINFO;\n    constructor(public payload: { name: string, address: string, phone: string }) { }\n}\n\nexport class GetInfo implements Action {\n    readonly type = GETINFO;\n    constructor(public payload: { email: string, annonymous: boolean }) { }\n}\n\nexport class GetInfoSuccess implements Action {\n    readonly type = GETINFO_SUCCESS;\n    constructor(public payload: { data: any }) { }\n}\n\nexport class GetInfoFailed implements Action {\n    readonly type = GETINFO_FAILED;\n    constructor() { }\n}\n\nexport class EditInfo implements Action {\n    readonly type = EDITINFO;\n    constructor(public payload: { newName: string, newPhone: string }) { }\n}\n\nexport class EditInfoSuccess implements Action {\n    readonly type = EDITINFO_SUCCESS;\n    constructor() { }\n}\n\nexport class EditInfoFailed implements Action {\n    readonly type = EDITINFO_FAILED;\n    constructor() { }\n}\n\nexport class ForgotPassword implements Action {\n    readonly type = FORGOT_PASSWORD;\n    constructor(public payload: { email: string }) { }\n}\n\nexport class ForgotPasswordSentSuccess implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_SUCCESS;\n    constructor() { }\n}\n\nexport class ForgotPasswordSentFailed implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_FAILED;\n    constructor() { }\n}\n\nexport class InitInfo implements Action {\n    readonly type = INIT_INFO;\n    constructor(public payload: { userEmail: string }) { }\n}\n\nexport class UpdateCredit implements Action {\n    readonly type = UPDATE_CREDIT;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class UpdateCreditSuccess implements Action {\n    readonly type = UPDATE_CREDIT_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateCreditFailed implements Action {\n    readonly type = UPDATE_CREDIT_FAILED;\n    constructor() { }\n}\n\nexport class PayCredits implements Action {\n    readonly type = PAY_CREDITS;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class PayCreditsSuccess implements Action {\n    readonly type = PAY_CREDITS_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLog implements Action {\n    readonly type = UPDATE_LOG;\n    constructor(public payload: { data: any, timestamp: any, log: any }) { }\n}\n\nexport class UpdateLogSuccess implements Action {\n    readonly type = UPDATE_LOG_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLogFailed implements Action {\n    readonly type = UPDATE_LOG_FAILED;\n    constructor() { }\n}\n\n\nexport type All\n    = Login\n    | LoginSuccess\n    | LoginFailed\n    | LoginG\n    | LoginGSuccess\n    | LoginGFailed\n    | UpdateInfo\n    | GetInfo\n    | GetInfoSuccess\n    | GetInfoFailed\n    | EditInfo\n    | EditInfoSuccess\n    | EditInfoFailed\n    | SignIn\n    | SignInSuccess\n    | SignInFailed\n    | SignOut\n    | ForgotPassword\n    | ForgotPasswordSentSuccess\n    | ForgotPasswordSentFailed\n    | InitInfo\n    | UpdateCredit\n    | UpdateCreditSuccess\n    | UpdateCreditFailed\n    | PayCredits\n    | PayCreditsSuccess\n    | UpdateLog\n    | UpdateLogSuccess\n    | UpdateLogFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginGSuccess.html":{"url":"classes/LoginGSuccess.html","title":"class - LoginGSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginGSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/user.actions.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LOGIN_G_SUCCESS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:58\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[User] Login';\nexport const LOGIN_SUCCESS = '[User] Login -> Success';\nexport const LOGIN_FAILED = '[User] Login -> Failed';\nexport const LOGIN_G = '[User] Login Google';\nexport const LOGIN_G_SUCCESS = '[User] Login Google -> Success';\nexport const LOGIN_G_FAILED = '[User] Login Google -> Failed';\nexport const SIGNIN = '[User] SignIn';\nexport const SIGNIN_SUCCESS = '[User] Sign in -> Success';\nexport const SIGNIN_FAILED = '[User] Sign in -> Failed';\nexport const SIGNOUT = '[User] Sign out';\nexport const UPDATEINFO = '[User] Update info';\nexport const GETINFO = '[User] Get info';\nexport const GETINFO_SUCCESS = '[User] Get info -> Success';\nexport const GETINFO_FAILED = '[User] Get info -> Failed';\nexport const EDITINFO = '[User] EditInfo';\nexport const EDITINFO_SUCCESS = '[User] EditInfo -> Success';\nexport const EDITINFO_FAILED = '[User] EditInfo -> Failed';\nexport const FORGOT_PASSWORD = '[User] Forgot password';\nexport const FORGOT_PASSWORD_SENT_SUCCESS = '[User] Forgot password -> Sent Success';\nexport const FORGOT_PASSWORD_SENT_FAILED = '[User] Forgot password -> Sent Failed';\nexport const INIT_INFO = '[User] Init information';\nexport const UPDATE_CREDIT = '[User] Update credit';\nexport const UPDATE_CREDIT_SUCCESS = \"[User] Update credit -> Success\";\nexport const UPDATE_CREDIT_FAILED = \"[User] Update credit -> Failed\";\nexport const PAY_CREDITS = '[User] Pay credits';\nexport const PAY_CREDITS_SUCCESS = '[User] Pay credits -> Success';\nexport const REMOVE_CREDITS = '[User] Remove credits';\nexport const NO_MORE_CREDITS = '[User] No more credits';\nexport const UPDATE_LOG = \"[User] Update log\";\nexport const UPDATE_LOG_SUCCESS = \"[User] Update log -> Success\";\nexport const UPDATE_LOG_FAILED = \"[User] Update log -> Failed\";\n\n\nexport class Login implements Action {\n    readonly type = LOGIN;\n    constructor(public payload: { email: string, password: string }) { }\n}\n\nexport class LoginSuccess implements Action {\n    readonly type = LOGIN_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginFailed implements Action {\n    readonly type = LOGIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class LoginG implements Action {\n    readonly type = LOGIN_G;\n    constructor() { }\n}\n\nexport class LoginGSuccess implements Action {\n    readonly type = LOGIN_G_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginGFailed implements Action {\n    readonly type = LOGIN_G_FAILED;\n}\n\nexport class SignOut implements Action {\n    readonly type = SIGNOUT;\n    constructor() { }\n}\n\nexport class SignIn implements Action {\n    readonly type = SIGNIN;\n    constructor(public payload: { email: string, password: string, retypePassword: string, agreeTerm: boolean }) { }\n}\n\nexport class SignInSuccess implements Action {\n    readonly type = SIGNIN_SUCCESS;\n    constructor() { }\n}\n\nexport class SignInFailed implements Action {\n    readonly type = SIGNIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class UpdateInfo implements Action {\n    readonly type = UPDATEINFO;\n    constructor(public payload: { name: string, address: string, phone: string }) { }\n}\n\nexport class GetInfo implements Action {\n    readonly type = GETINFO;\n    constructor(public payload: { email: string, annonymous: boolean }) { }\n}\n\nexport class GetInfoSuccess implements Action {\n    readonly type = GETINFO_SUCCESS;\n    constructor(public payload: { data: any }) { }\n}\n\nexport class GetInfoFailed implements Action {\n    readonly type = GETINFO_FAILED;\n    constructor() { }\n}\n\nexport class EditInfo implements Action {\n    readonly type = EDITINFO;\n    constructor(public payload: { newName: string, newPhone: string }) { }\n}\n\nexport class EditInfoSuccess implements Action {\n    readonly type = EDITINFO_SUCCESS;\n    constructor() { }\n}\n\nexport class EditInfoFailed implements Action {\n    readonly type = EDITINFO_FAILED;\n    constructor() { }\n}\n\nexport class ForgotPassword implements Action {\n    readonly type = FORGOT_PASSWORD;\n    constructor(public payload: { email: string }) { }\n}\n\nexport class ForgotPasswordSentSuccess implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_SUCCESS;\n    constructor() { }\n}\n\nexport class ForgotPasswordSentFailed implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_FAILED;\n    constructor() { }\n}\n\nexport class InitInfo implements Action {\n    readonly type = INIT_INFO;\n    constructor(public payload: { userEmail: string }) { }\n}\n\nexport class UpdateCredit implements Action {\n    readonly type = UPDATE_CREDIT;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class UpdateCreditSuccess implements Action {\n    readonly type = UPDATE_CREDIT_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateCreditFailed implements Action {\n    readonly type = UPDATE_CREDIT_FAILED;\n    constructor() { }\n}\n\nexport class PayCredits implements Action {\n    readonly type = PAY_CREDITS;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class PayCreditsSuccess implements Action {\n    readonly type = PAY_CREDITS_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLog implements Action {\n    readonly type = UPDATE_LOG;\n    constructor(public payload: { data: any, timestamp: any, log: any }) { }\n}\n\nexport class UpdateLogSuccess implements Action {\n    readonly type = UPDATE_LOG_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLogFailed implements Action {\n    readonly type = UPDATE_LOG_FAILED;\n    constructor() { }\n}\n\n\nexport type All\n    = Login\n    | LoginSuccess\n    | LoginFailed\n    | LoginG\n    | LoginGSuccess\n    | LoginGFailed\n    | UpdateInfo\n    | GetInfo\n    | GetInfoSuccess\n    | GetInfoFailed\n    | EditInfo\n    | EditInfoSuccess\n    | EditInfoFailed\n    | SignIn\n    | SignInSuccess\n    | SignInFailed\n    | SignOut\n    | ForgotPassword\n    | ForgotPasswordSentSuccess\n    | ForgotPasswordSentFailed\n    | InitInfo\n    | UpdateCredit\n    | UpdateCreditSuccess\n    | UpdateCreditFailed\n    | PayCredits\n    | PayCreditsSuccess\n    | UpdateLog\n    | UpdateLogSuccess\n    | UpdateLogFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n\n\n  Components\n  LoginPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                forgotPassword\n                            \n                            \n                                isObsoleted\n                            \n                            \n                                login\n                            \n                            \n                                loginWithGoogle\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentToast\n                            \n                            \n                                setAutoLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, toastController: ToastController, dataService: DataService, storage: Storage, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.page.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \nforgotPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.page.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isObsoleted\n                        \n                        \n                    \n                \n            \n            \n                \nisObsoleted()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.page.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.page.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loginWithGoogle\n                        \n                        \n                    \n                \n            \n            \n                \nloginWithGoogle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.page.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.page.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentToast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentToast(message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.page.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAutoLogin\n                        \n                        \n                    \n                \n            \n            \n                \nsetAutoLogin(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.page.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.page.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.page.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.page.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { DataService } from '../data.service';\nimport { Observable } from 'rxjs';\nimport { User } from '../states/models/user.model';\nimport { Store } from '@ngrx/store';\nimport * as UserAction from '../states/actions/user.actions';\nimport IAppState from '../IAppState';\nimport { Storage } from '@ionic/storage';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  email;\n  password;\n\n  user: Observable\n\n  constructor(\n    private router: Router,\n    private toastController: ToastController,\n    private dataService: DataService,\n    private storage: Storage,\n    private store: Store) {\n\n    this.user = store.select('user');\n    this.dataService.fetchConfig();\n    this.storage.get(\"auto_login\").then((value) => {\n      if (value) {\n        this.storage.get(\"login_email\").then((email) => {\n          this.storage.get(\"login_password\").then((password) => {\n            this.email = email;\n            this.password = password;\n            this.login();\n          })\n        })\n      }\n    })\n  }\n\n  ngOnInit() {\n\n  }\n\n  isObsoleted() {\n    return this.dataService.config['is_obsolete'];\n  }\n\n  async presentToast(message) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  loginWithGoogle() {\n    if (!this.isObsoleted()) {\n      this.store.dispatch(new UserAction.LoginG());\n    }\n  }\n\n  login() {\n    //this.email = 'kiettuannguyense@gmail.com';\n    //this.password = '23031998';\n    if (!this.isObsoleted()) {\n      this.store.dispatch(new UserAction.Login({ email: this.email, password: this.password }));\n      this.user.subscribe((value) => {\n        if (value.error != undefined) {\n          console.log(value);\n          if (!value.error) {\n            this.storage.set(\"login_email\", this.email);\n            this.storage.set(\"login_password\", this.password);\n            this.router.navigate(['/main/account']);\n          }\n          else {\n\n            this.presentToast('Email or password is invalid');\n\n          }\n        }\n      })\n    }\n  }\n\n  forgotPassword() {\n    this.store.dispatch(new UserAction.ForgotPassword({ email: this.email }));\n  }\n\n  setAutoLogin(event) {\n    console.log(event['detail']['checked']);\n    this.storage.set(\"auto_login\", event['detail']['checked']);\n  }\n\n}\n\n    \n\n    \n        \n  \n    Welcome to IT Passport (v1.1.3b)\n  \n\n\n  \n    \n      \n      Login\n    \n    \n      \n        \n          \n          Email\n        \n        \n      \n      \n        \n          \n          Password\n        \n        \n      \n      \n        Login automatically\n        \n        \n      \n      \n        \n          \n            \n              \n                Login\n            \n          \n          \n            \n              Sign\n                Up\n            \n          \n        \n        \n          \n            \n              \n                \n                Login with Google\n              \n            \n          \n        \n        \n          \n            \n              \n                I forgot my password\n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./login.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Welcome to IT Passport (v1.1.3b)                    Login                                          Email                                                        Password                                    Login automatically                                                                                        Login                                                          Sign                Up                                                                                                          Login with Google                                                                                                        I forgot my password                                                        '\n    var COMPONENTS = [{'name': 'AccountPage', 'selector': 'app-account'},{'name': 'AdPagePage', 'selector': 'app-ad-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BeforeStartPage', 'selector': 'app-before-start'},{'name': 'CatInfoModalPage', 'selector': 'app-cat-info-modal'},{'name': 'ChallengePage', 'selector': 'app-challenge'},{'name': 'EditProfileModalPage', 'selector': 'app-edit-profile-modal'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'SignUpPage', 'selector': 'app-sign-up'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TestResultPage', 'selector': 'app-test-result'},{'name': 'TestRoomPage', 'selector': 'app-test-room'},{'name': 'TrainingPage', 'selector': 'app-training'},{'name': 'VerifyEmailPage', 'selector': 'app-verify-email'},{'name': 'WelcomePage', 'selector': 'app-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageModule.html":{"url":"modules/LoginPageModule.html","title":"module - LoginPageModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\n\nLoginPage\n\nLoginPage\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/login/login.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginSuccess.html":{"url":"classes/LoginSuccess.html","title":"class - LoginSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/user.actions.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LOGIN_SUCCESS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[User] Login';\nexport const LOGIN_SUCCESS = '[User] Login -> Success';\nexport const LOGIN_FAILED = '[User] Login -> Failed';\nexport const LOGIN_G = '[User] Login Google';\nexport const LOGIN_G_SUCCESS = '[User] Login Google -> Success';\nexport const LOGIN_G_FAILED = '[User] Login Google -> Failed';\nexport const SIGNIN = '[User] SignIn';\nexport const SIGNIN_SUCCESS = '[User] Sign in -> Success';\nexport const SIGNIN_FAILED = '[User] Sign in -> Failed';\nexport const SIGNOUT = '[User] Sign out';\nexport const UPDATEINFO = '[User] Update info';\nexport const GETINFO = '[User] Get info';\nexport const GETINFO_SUCCESS = '[User] Get info -> Success';\nexport const GETINFO_FAILED = '[User] Get info -> Failed';\nexport const EDITINFO = '[User] EditInfo';\nexport const EDITINFO_SUCCESS = '[User] EditInfo -> Success';\nexport const EDITINFO_FAILED = '[User] EditInfo -> Failed';\nexport const FORGOT_PASSWORD = '[User] Forgot password';\nexport const FORGOT_PASSWORD_SENT_SUCCESS = '[User] Forgot password -> Sent Success';\nexport const FORGOT_PASSWORD_SENT_FAILED = '[User] Forgot password -> Sent Failed';\nexport const INIT_INFO = '[User] Init information';\nexport const UPDATE_CREDIT = '[User] Update credit';\nexport const UPDATE_CREDIT_SUCCESS = \"[User] Update credit -> Success\";\nexport const UPDATE_CREDIT_FAILED = \"[User] Update credit -> Failed\";\nexport const PAY_CREDITS = '[User] Pay credits';\nexport const PAY_CREDITS_SUCCESS = '[User] Pay credits -> Success';\nexport const REMOVE_CREDITS = '[User] Remove credits';\nexport const NO_MORE_CREDITS = '[User] No more credits';\nexport const UPDATE_LOG = \"[User] Update log\";\nexport const UPDATE_LOG_SUCCESS = \"[User] Update log -> Success\";\nexport const UPDATE_LOG_FAILED = \"[User] Update log -> Failed\";\n\n\nexport class Login implements Action {\n    readonly type = LOGIN;\n    constructor(public payload: { email: string, password: string }) { }\n}\n\nexport class LoginSuccess implements Action {\n    readonly type = LOGIN_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginFailed implements Action {\n    readonly type = LOGIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class LoginG implements Action {\n    readonly type = LOGIN_G;\n    constructor() { }\n}\n\nexport class LoginGSuccess implements Action {\n    readonly type = LOGIN_G_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginGFailed implements Action {\n    readonly type = LOGIN_G_FAILED;\n}\n\nexport class SignOut implements Action {\n    readonly type = SIGNOUT;\n    constructor() { }\n}\n\nexport class SignIn implements Action {\n    readonly type = SIGNIN;\n    constructor(public payload: { email: string, password: string, retypePassword: string, agreeTerm: boolean }) { }\n}\n\nexport class SignInSuccess implements Action {\n    readonly type = SIGNIN_SUCCESS;\n    constructor() { }\n}\n\nexport class SignInFailed implements Action {\n    readonly type = SIGNIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class UpdateInfo implements Action {\n    readonly type = UPDATEINFO;\n    constructor(public payload: { name: string, address: string, phone: string }) { }\n}\n\nexport class GetInfo implements Action {\n    readonly type = GETINFO;\n    constructor(public payload: { email: string, annonymous: boolean }) { }\n}\n\nexport class GetInfoSuccess implements Action {\n    readonly type = GETINFO_SUCCESS;\n    constructor(public payload: { data: any }) { }\n}\n\nexport class GetInfoFailed implements Action {\n    readonly type = GETINFO_FAILED;\n    constructor() { }\n}\n\nexport class EditInfo implements Action {\n    readonly type = EDITINFO;\n    constructor(public payload: { newName: string, newPhone: string }) { }\n}\n\nexport class EditInfoSuccess implements Action {\n    readonly type = EDITINFO_SUCCESS;\n    constructor() { }\n}\n\nexport class EditInfoFailed implements Action {\n    readonly type = EDITINFO_FAILED;\n    constructor() { }\n}\n\nexport class ForgotPassword implements Action {\n    readonly type = FORGOT_PASSWORD;\n    constructor(public payload: { email: string }) { }\n}\n\nexport class ForgotPasswordSentSuccess implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_SUCCESS;\n    constructor() { }\n}\n\nexport class ForgotPasswordSentFailed implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_FAILED;\n    constructor() { }\n}\n\nexport class InitInfo implements Action {\n    readonly type = INIT_INFO;\n    constructor(public payload: { userEmail: string }) { }\n}\n\nexport class UpdateCredit implements Action {\n    readonly type = UPDATE_CREDIT;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class UpdateCreditSuccess implements Action {\n    readonly type = UPDATE_CREDIT_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateCreditFailed implements Action {\n    readonly type = UPDATE_CREDIT_FAILED;\n    constructor() { }\n}\n\nexport class PayCredits implements Action {\n    readonly type = PAY_CREDITS;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class PayCreditsSuccess implements Action {\n    readonly type = PAY_CREDITS_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLog implements Action {\n    readonly type = UPDATE_LOG;\n    constructor(public payload: { data: any, timestamp: any, log: any }) { }\n}\n\nexport class UpdateLogSuccess implements Action {\n    readonly type = UPDATE_LOG_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLogFailed implements Action {\n    readonly type = UPDATE_LOG_FAILED;\n    constructor() { }\n}\n\n\nexport type All\n    = Login\n    | LoginSuccess\n    | LoginFailed\n    | LoginG\n    | LoginGSuccess\n    | LoginGFailed\n    | UpdateInfo\n    | GetInfo\n    | GetInfoSuccess\n    | GetInfoFailed\n    | EditInfo\n    | EditInfoSuccess\n    | EditInfoFailed\n    | SignIn\n    | SignInSuccess\n    | SignInFailed\n    | SignOut\n    | ForgotPassword\n    | ForgotPasswordSentSuccess\n    | ForgotPasswordSentFailed\n    | InitInfo\n    | UpdateCredit\n    | UpdateCreditSuccess\n    | UpdateCreditFailed\n    | PayCredits\n    | PayCreditsSuccess\n    | UpdateLog\n    | UpdateLogSuccess\n    | UpdateLogFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/OnFinishTestGuard.html":{"url":"guards/OnFinishTestGuard.html","title":"guard - OnFinishTestGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    OnFinishTestGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/on-finish-test.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Protect the router: Deny user go back to test room after they finish it\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/on-finish-test.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/on-finish-test.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { DataService } from '../data.service';\n\n/**\n * Protect the router: Deny user go back to test room after they finish it\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class OnFinishTestGuard implements CanActivate {\n  constructor(private dataService: DataService) { }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    return !this.dataService.navState['testFinish'];\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PayCredits.html":{"url":"classes/PayCredits.html","title":"class - PayCredits","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PayCredits\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/user.actions.ts:157\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:158\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : PAY_CREDITS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:157\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[User] Login';\nexport const LOGIN_SUCCESS = '[User] Login -> Success';\nexport const LOGIN_FAILED = '[User] Login -> Failed';\nexport const LOGIN_G = '[User] Login Google';\nexport const LOGIN_G_SUCCESS = '[User] Login Google -> Success';\nexport const LOGIN_G_FAILED = '[User] Login Google -> Failed';\nexport const SIGNIN = '[User] SignIn';\nexport const SIGNIN_SUCCESS = '[User] Sign in -> Success';\nexport const SIGNIN_FAILED = '[User] Sign in -> Failed';\nexport const SIGNOUT = '[User] Sign out';\nexport const UPDATEINFO = '[User] Update info';\nexport const GETINFO = '[User] Get info';\nexport const GETINFO_SUCCESS = '[User] Get info -> Success';\nexport const GETINFO_FAILED = '[User] Get info -> Failed';\nexport const EDITINFO = '[User] EditInfo';\nexport const EDITINFO_SUCCESS = '[User] EditInfo -> Success';\nexport const EDITINFO_FAILED = '[User] EditInfo -> Failed';\nexport const FORGOT_PASSWORD = '[User] Forgot password';\nexport const FORGOT_PASSWORD_SENT_SUCCESS = '[User] Forgot password -> Sent Success';\nexport const FORGOT_PASSWORD_SENT_FAILED = '[User] Forgot password -> Sent Failed';\nexport const INIT_INFO = '[User] Init information';\nexport const UPDATE_CREDIT = '[User] Update credit';\nexport const UPDATE_CREDIT_SUCCESS = \"[User] Update credit -> Success\";\nexport const UPDATE_CREDIT_FAILED = \"[User] Update credit -> Failed\";\nexport const PAY_CREDITS = '[User] Pay credits';\nexport const PAY_CREDITS_SUCCESS = '[User] Pay credits -> Success';\nexport const REMOVE_CREDITS = '[User] Remove credits';\nexport const NO_MORE_CREDITS = '[User] No more credits';\nexport const UPDATE_LOG = \"[User] Update log\";\nexport const UPDATE_LOG_SUCCESS = \"[User] Update log -> Success\";\nexport const UPDATE_LOG_FAILED = \"[User] Update log -> Failed\";\n\n\nexport class Login implements Action {\n    readonly type = LOGIN;\n    constructor(public payload: { email: string, password: string }) { }\n}\n\nexport class LoginSuccess implements Action {\n    readonly type = LOGIN_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginFailed implements Action {\n    readonly type = LOGIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class LoginG implements Action {\n    readonly type = LOGIN_G;\n    constructor() { }\n}\n\nexport class LoginGSuccess implements Action {\n    readonly type = LOGIN_G_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginGFailed implements Action {\n    readonly type = LOGIN_G_FAILED;\n}\n\nexport class SignOut implements Action {\n    readonly type = SIGNOUT;\n    constructor() { }\n}\n\nexport class SignIn implements Action {\n    readonly type = SIGNIN;\n    constructor(public payload: { email: string, password: string, retypePassword: string, agreeTerm: boolean }) { }\n}\n\nexport class SignInSuccess implements Action {\n    readonly type = SIGNIN_SUCCESS;\n    constructor() { }\n}\n\nexport class SignInFailed implements Action {\n    readonly type = SIGNIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class UpdateInfo implements Action {\n    readonly type = UPDATEINFO;\n    constructor(public payload: { name: string, address: string, phone: string }) { }\n}\n\nexport class GetInfo implements Action {\n    readonly type = GETINFO;\n    constructor(public payload: { email: string, annonymous: boolean }) { }\n}\n\nexport class GetInfoSuccess implements Action {\n    readonly type = GETINFO_SUCCESS;\n    constructor(public payload: { data: any }) { }\n}\n\nexport class GetInfoFailed implements Action {\n    readonly type = GETINFO_FAILED;\n    constructor() { }\n}\n\nexport class EditInfo implements Action {\n    readonly type = EDITINFO;\n    constructor(public payload: { newName: string, newPhone: string }) { }\n}\n\nexport class EditInfoSuccess implements Action {\n    readonly type = EDITINFO_SUCCESS;\n    constructor() { }\n}\n\nexport class EditInfoFailed implements Action {\n    readonly type = EDITINFO_FAILED;\n    constructor() { }\n}\n\nexport class ForgotPassword implements Action {\n    readonly type = FORGOT_PASSWORD;\n    constructor(public payload: { email: string }) { }\n}\n\nexport class ForgotPasswordSentSuccess implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_SUCCESS;\n    constructor() { }\n}\n\nexport class ForgotPasswordSentFailed implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_FAILED;\n    constructor() { }\n}\n\nexport class InitInfo implements Action {\n    readonly type = INIT_INFO;\n    constructor(public payload: { userEmail: string }) { }\n}\n\nexport class UpdateCredit implements Action {\n    readonly type = UPDATE_CREDIT;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class UpdateCreditSuccess implements Action {\n    readonly type = UPDATE_CREDIT_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateCreditFailed implements Action {\n    readonly type = UPDATE_CREDIT_FAILED;\n    constructor() { }\n}\n\nexport class PayCredits implements Action {\n    readonly type = PAY_CREDITS;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class PayCreditsSuccess implements Action {\n    readonly type = PAY_CREDITS_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLog implements Action {\n    readonly type = UPDATE_LOG;\n    constructor(public payload: { data: any, timestamp: any, log: any }) { }\n}\n\nexport class UpdateLogSuccess implements Action {\n    readonly type = UPDATE_LOG_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLogFailed implements Action {\n    readonly type = UPDATE_LOG_FAILED;\n    constructor() { }\n}\n\n\nexport type All\n    = Login\n    | LoginSuccess\n    | LoginFailed\n    | LoginG\n    | LoginGSuccess\n    | LoginGFailed\n    | UpdateInfo\n    | GetInfo\n    | GetInfoSuccess\n    | GetInfoFailed\n    | EditInfo\n    | EditInfoSuccess\n    | EditInfoFailed\n    | SignIn\n    | SignInSuccess\n    | SignInFailed\n    | SignOut\n    | ForgotPassword\n    | ForgotPasswordSentSuccess\n    | ForgotPasswordSentFailed\n    | InitInfo\n    | UpdateCredit\n    | UpdateCreditSuccess\n    | UpdateCreditFailed\n    | PayCredits\n    | PayCreditsSuccess\n    | UpdateLog\n    | UpdateLogSuccess\n    | UpdateLogFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PayCreditsSuccess.html":{"url":"classes/PayCreditsSuccess.html","title":"class - PayCreditsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PayCreditsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/user.actions.ts:162\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : PAY_CREDITS_SUCCESS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:162\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[User] Login';\nexport const LOGIN_SUCCESS = '[User] Login -> Success';\nexport const LOGIN_FAILED = '[User] Login -> Failed';\nexport const LOGIN_G = '[User] Login Google';\nexport const LOGIN_G_SUCCESS = '[User] Login Google -> Success';\nexport const LOGIN_G_FAILED = '[User] Login Google -> Failed';\nexport const SIGNIN = '[User] SignIn';\nexport const SIGNIN_SUCCESS = '[User] Sign in -> Success';\nexport const SIGNIN_FAILED = '[User] Sign in -> Failed';\nexport const SIGNOUT = '[User] Sign out';\nexport const UPDATEINFO = '[User] Update info';\nexport const GETINFO = '[User] Get info';\nexport const GETINFO_SUCCESS = '[User] Get info -> Success';\nexport const GETINFO_FAILED = '[User] Get info -> Failed';\nexport const EDITINFO = '[User] EditInfo';\nexport const EDITINFO_SUCCESS = '[User] EditInfo -> Success';\nexport const EDITINFO_FAILED = '[User] EditInfo -> Failed';\nexport const FORGOT_PASSWORD = '[User] Forgot password';\nexport const FORGOT_PASSWORD_SENT_SUCCESS = '[User] Forgot password -> Sent Success';\nexport const FORGOT_PASSWORD_SENT_FAILED = '[User] Forgot password -> Sent Failed';\nexport const INIT_INFO = '[User] Init information';\nexport const UPDATE_CREDIT = '[User] Update credit';\nexport const UPDATE_CREDIT_SUCCESS = \"[User] Update credit -> Success\";\nexport const UPDATE_CREDIT_FAILED = \"[User] Update credit -> Failed\";\nexport const PAY_CREDITS = '[User] Pay credits';\nexport const PAY_CREDITS_SUCCESS = '[User] Pay credits -> Success';\nexport const REMOVE_CREDITS = '[User] Remove credits';\nexport const NO_MORE_CREDITS = '[User] No more credits';\nexport const UPDATE_LOG = \"[User] Update log\";\nexport const UPDATE_LOG_SUCCESS = \"[User] Update log -> Success\";\nexport const UPDATE_LOG_FAILED = \"[User] Update log -> Failed\";\n\n\nexport class Login implements Action {\n    readonly type = LOGIN;\n    constructor(public payload: { email: string, password: string }) { }\n}\n\nexport class LoginSuccess implements Action {\n    readonly type = LOGIN_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginFailed implements Action {\n    readonly type = LOGIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class LoginG implements Action {\n    readonly type = LOGIN_G;\n    constructor() { }\n}\n\nexport class LoginGSuccess implements Action {\n    readonly type = LOGIN_G_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginGFailed implements Action {\n    readonly type = LOGIN_G_FAILED;\n}\n\nexport class SignOut implements Action {\n    readonly type = SIGNOUT;\n    constructor() { }\n}\n\nexport class SignIn implements Action {\n    readonly type = SIGNIN;\n    constructor(public payload: { email: string, password: string, retypePassword: string, agreeTerm: boolean }) { }\n}\n\nexport class SignInSuccess implements Action {\n    readonly type = SIGNIN_SUCCESS;\n    constructor() { }\n}\n\nexport class SignInFailed implements Action {\n    readonly type = SIGNIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class UpdateInfo implements Action {\n    readonly type = UPDATEINFO;\n    constructor(public payload: { name: string, address: string, phone: string }) { }\n}\n\nexport class GetInfo implements Action {\n    readonly type = GETINFO;\n    constructor(public payload: { email: string, annonymous: boolean }) { }\n}\n\nexport class GetInfoSuccess implements Action {\n    readonly type = GETINFO_SUCCESS;\n    constructor(public payload: { data: any }) { }\n}\n\nexport class GetInfoFailed implements Action {\n    readonly type = GETINFO_FAILED;\n    constructor() { }\n}\n\nexport class EditInfo implements Action {\n    readonly type = EDITINFO;\n    constructor(public payload: { newName: string, newPhone: string }) { }\n}\n\nexport class EditInfoSuccess implements Action {\n    readonly type = EDITINFO_SUCCESS;\n    constructor() { }\n}\n\nexport class EditInfoFailed implements Action {\n    readonly type = EDITINFO_FAILED;\n    constructor() { }\n}\n\nexport class ForgotPassword implements Action {\n    readonly type = FORGOT_PASSWORD;\n    constructor(public payload: { email: string }) { }\n}\n\nexport class ForgotPasswordSentSuccess implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_SUCCESS;\n    constructor() { }\n}\n\nexport class ForgotPasswordSentFailed implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_FAILED;\n    constructor() { }\n}\n\nexport class InitInfo implements Action {\n    readonly type = INIT_INFO;\n    constructor(public payload: { userEmail: string }) { }\n}\n\nexport class UpdateCredit implements Action {\n    readonly type = UPDATE_CREDIT;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class UpdateCreditSuccess implements Action {\n    readonly type = UPDATE_CREDIT_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateCreditFailed implements Action {\n    readonly type = UPDATE_CREDIT_FAILED;\n    constructor() { }\n}\n\nexport class PayCredits implements Action {\n    readonly type = PAY_CREDITS;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class PayCreditsSuccess implements Action {\n    readonly type = PAY_CREDITS_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLog implements Action {\n    readonly type = UPDATE_LOG;\n    constructor(public payload: { data: any, timestamp: any, log: any }) { }\n}\n\nexport class UpdateLogSuccess implements Action {\n    readonly type = UPDATE_LOG_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLogFailed implements Action {\n    readonly type = UPDATE_LOG_FAILED;\n    constructor() { }\n}\n\n\nexport type All\n    = Login\n    | LoginSuccess\n    | LoginFailed\n    | LoginG\n    | LoginGSuccess\n    | LoginGFailed\n    | UpdateInfo\n    | GetInfo\n    | GetInfoSuccess\n    | GetInfoFailed\n    | EditInfo\n    | EditInfoSuccess\n    | EditInfoFailed\n    | SignIn\n    | SignInSuccess\n    | SignInFailed\n    | SignOut\n    | ForgotPassword\n    | ForgotPasswordSentSuccess\n    | ForgotPasswordSentFailed\n    | InitInfo\n    | UpdateCredit\n    | UpdateCreditSuccess\n    | UpdateCreditFailed\n    | PayCredits\n    | PayCreditsSuccess\n    | UpdateLog\n    | UpdateLogSuccess\n    | UpdateLogFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Question.html":{"url":"interfaces/Question.html","title":"interface - Question","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Question\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/models/question.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        list\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface Question {\n    list: any;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuestionEffects.html":{"url":"injectables/QuestionEffects.html","title":"injectable - QuestionEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuestionEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/effects/question.effect.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fetch\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(action: Actions, db: AngularFireDatabase)\n                    \n                \n                        \n                            \n                                Defined in src/app/states/effects/question.effect.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fetch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.action.pipe(\n        ofType(QuestionAction.FETCH),\n        switchMap(() => this.db.list('questions/').snapshotChanges()),\n        map((changes) => {\n            let question = changes.map((value) => ({ key: value.key, payload: value.payload.val() }));\n            let questionList = {};\n            let cat = Object.keys(question);\n            for (let i = 0; i \n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/effects/question.effect.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import * as QuestionAction from '../actions/question.action';\nimport { Injectable } from \"@angular/core\";\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { Effect, ofType } from '@ngrx/effects';\nimport { Observable } from 'rxjs';\nimport { Actions } from '@ngrx/effects';\nimport { switchMap, map } from 'rxjs/operators';\n\nexport type Action = QuestionAction.All;\n\n@Injectable()\nexport class QuestionEffects {\n    constructor(private action: Actions, private db: AngularFireDatabase) { }\n\n    @Effect()\n    fetch: Observable = this.action.pipe(\n        ofType(QuestionAction.FETCH),\n        switchMap(() => this.db.list('questions/').snapshotChanges()),\n        map((changes) => {\n            let question = changes.map((value) => ({ key: value.key, payload: value.payload.val() }));\n            let questionList = {};\n            let cat = Object.keys(question);\n            for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuestionService.html":{"url":"injectables/QuestionService.html","title":"injectable - QuestionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuestionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/question.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                question\n                            \n                            \n                                question$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/question.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            question\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Question\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/question.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            question$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/question.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport Question from '../states/models/question.model';\nimport { Store } from '@ngrx/store';\nimport IAppState from '../IAppState';\n\nimport * as QuestionAction from '../states/actions/question.action';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionService {\n\n  question$: Observable;\n  question: Question;\n  constructor(private store: Store) {\n    this.question$ = store.select('question');\n    this.store.dispatch(new QuestionAction.Fetch());\n    this.question$.subscribe((payload) => {\n      this.question = payload;\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignIn.html":{"url":"classes/SignIn.html","title":"class - SignIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/user.actions.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SIGNIN\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:72\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[User] Login';\nexport const LOGIN_SUCCESS = '[User] Login -> Success';\nexport const LOGIN_FAILED = '[User] Login -> Failed';\nexport const LOGIN_G = '[User] Login Google';\nexport const LOGIN_G_SUCCESS = '[User] Login Google -> Success';\nexport const LOGIN_G_FAILED = '[User] Login Google -> Failed';\nexport const SIGNIN = '[User] SignIn';\nexport const SIGNIN_SUCCESS = '[User] Sign in -> Success';\nexport const SIGNIN_FAILED = '[User] Sign in -> Failed';\nexport const SIGNOUT = '[User] Sign out';\nexport const UPDATEINFO = '[User] Update info';\nexport const GETINFO = '[User] Get info';\nexport const GETINFO_SUCCESS = '[User] Get info -> Success';\nexport const GETINFO_FAILED = '[User] Get info -> Failed';\nexport const EDITINFO = '[User] EditInfo';\nexport const EDITINFO_SUCCESS = '[User] EditInfo -> Success';\nexport const EDITINFO_FAILED = '[User] EditInfo -> Failed';\nexport const FORGOT_PASSWORD = '[User] Forgot password';\nexport const FORGOT_PASSWORD_SENT_SUCCESS = '[User] Forgot password -> Sent Success';\nexport const FORGOT_PASSWORD_SENT_FAILED = '[User] Forgot password -> Sent Failed';\nexport const INIT_INFO = '[User] Init information';\nexport const UPDATE_CREDIT = '[User] Update credit';\nexport const UPDATE_CREDIT_SUCCESS = \"[User] Update credit -> Success\";\nexport const UPDATE_CREDIT_FAILED = \"[User] Update credit -> Failed\";\nexport const PAY_CREDITS = '[User] Pay credits';\nexport const PAY_CREDITS_SUCCESS = '[User] Pay credits -> Success';\nexport const REMOVE_CREDITS = '[User] Remove credits';\nexport const NO_MORE_CREDITS = '[User] No more credits';\nexport const UPDATE_LOG = \"[User] Update log\";\nexport const UPDATE_LOG_SUCCESS = \"[User] Update log -> Success\";\nexport const UPDATE_LOG_FAILED = \"[User] Update log -> Failed\";\n\n\nexport class Login implements Action {\n    readonly type = LOGIN;\n    constructor(public payload: { email: string, password: string }) { }\n}\n\nexport class LoginSuccess implements Action {\n    readonly type = LOGIN_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginFailed implements Action {\n    readonly type = LOGIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class LoginG implements Action {\n    readonly type = LOGIN_G;\n    constructor() { }\n}\n\nexport class LoginGSuccess implements Action {\n    readonly type = LOGIN_G_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginGFailed implements Action {\n    readonly type = LOGIN_G_FAILED;\n}\n\nexport class SignOut implements Action {\n    readonly type = SIGNOUT;\n    constructor() { }\n}\n\nexport class SignIn implements Action {\n    readonly type = SIGNIN;\n    constructor(public payload: { email: string, password: string, retypePassword: string, agreeTerm: boolean }) { }\n}\n\nexport class SignInSuccess implements Action {\n    readonly type = SIGNIN_SUCCESS;\n    constructor() { }\n}\n\nexport class SignInFailed implements Action {\n    readonly type = SIGNIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class UpdateInfo implements Action {\n    readonly type = UPDATEINFO;\n    constructor(public payload: { name: string, address: string, phone: string }) { }\n}\n\nexport class GetInfo implements Action {\n    readonly type = GETINFO;\n    constructor(public payload: { email: string, annonymous: boolean }) { }\n}\n\nexport class GetInfoSuccess implements Action {\n    readonly type = GETINFO_SUCCESS;\n    constructor(public payload: { data: any }) { }\n}\n\nexport class GetInfoFailed implements Action {\n    readonly type = GETINFO_FAILED;\n    constructor() { }\n}\n\nexport class EditInfo implements Action {\n    readonly type = EDITINFO;\n    constructor(public payload: { newName: string, newPhone: string }) { }\n}\n\nexport class EditInfoSuccess implements Action {\n    readonly type = EDITINFO_SUCCESS;\n    constructor() { }\n}\n\nexport class EditInfoFailed implements Action {\n    readonly type = EDITINFO_FAILED;\n    constructor() { }\n}\n\nexport class ForgotPassword implements Action {\n    readonly type = FORGOT_PASSWORD;\n    constructor(public payload: { email: string }) { }\n}\n\nexport class ForgotPasswordSentSuccess implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_SUCCESS;\n    constructor() { }\n}\n\nexport class ForgotPasswordSentFailed implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_FAILED;\n    constructor() { }\n}\n\nexport class InitInfo implements Action {\n    readonly type = INIT_INFO;\n    constructor(public payload: { userEmail: string }) { }\n}\n\nexport class UpdateCredit implements Action {\n    readonly type = UPDATE_CREDIT;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class UpdateCreditSuccess implements Action {\n    readonly type = UPDATE_CREDIT_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateCreditFailed implements Action {\n    readonly type = UPDATE_CREDIT_FAILED;\n    constructor() { }\n}\n\nexport class PayCredits implements Action {\n    readonly type = PAY_CREDITS;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class PayCreditsSuccess implements Action {\n    readonly type = PAY_CREDITS_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLog implements Action {\n    readonly type = UPDATE_LOG;\n    constructor(public payload: { data: any, timestamp: any, log: any }) { }\n}\n\nexport class UpdateLogSuccess implements Action {\n    readonly type = UPDATE_LOG_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLogFailed implements Action {\n    readonly type = UPDATE_LOG_FAILED;\n    constructor() { }\n}\n\n\nexport type All\n    = Login\n    | LoginSuccess\n    | LoginFailed\n    | LoginG\n    | LoginGSuccess\n    | LoginGFailed\n    | UpdateInfo\n    | GetInfo\n    | GetInfoSuccess\n    | GetInfoFailed\n    | EditInfo\n    | EditInfoSuccess\n    | EditInfoFailed\n    | SignIn\n    | SignInSuccess\n    | SignInFailed\n    | SignOut\n    | ForgotPassword\n    | ForgotPasswordSentSuccess\n    | ForgotPasswordSentFailed\n    | InitInfo\n    | UpdateCredit\n    | UpdateCreditSuccess\n    | UpdateCreditFailed\n    | PayCredits\n    | PayCreditsSuccess\n    | UpdateLog\n    | UpdateLogSuccess\n    | UpdateLogFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInFailed.html":{"url":"classes/SignInFailed.html","title":"class - SignInFailed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInFailed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/user.actions.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SIGNIN_FAILED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:82\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[User] Login';\nexport const LOGIN_SUCCESS = '[User] Login -> Success';\nexport const LOGIN_FAILED = '[User] Login -> Failed';\nexport const LOGIN_G = '[User] Login Google';\nexport const LOGIN_G_SUCCESS = '[User] Login Google -> Success';\nexport const LOGIN_G_FAILED = '[User] Login Google -> Failed';\nexport const SIGNIN = '[User] SignIn';\nexport const SIGNIN_SUCCESS = '[User] Sign in -> Success';\nexport const SIGNIN_FAILED = '[User] Sign in -> Failed';\nexport const SIGNOUT = '[User] Sign out';\nexport const UPDATEINFO = '[User] Update info';\nexport const GETINFO = '[User] Get info';\nexport const GETINFO_SUCCESS = '[User] Get info -> Success';\nexport const GETINFO_FAILED = '[User] Get info -> Failed';\nexport const EDITINFO = '[User] EditInfo';\nexport const EDITINFO_SUCCESS = '[User] EditInfo -> Success';\nexport const EDITINFO_FAILED = '[User] EditInfo -> Failed';\nexport const FORGOT_PASSWORD = '[User] Forgot password';\nexport const FORGOT_PASSWORD_SENT_SUCCESS = '[User] Forgot password -> Sent Success';\nexport const FORGOT_PASSWORD_SENT_FAILED = '[User] Forgot password -> Sent Failed';\nexport const INIT_INFO = '[User] Init information';\nexport const UPDATE_CREDIT = '[User] Update credit';\nexport const UPDATE_CREDIT_SUCCESS = \"[User] Update credit -> Success\";\nexport const UPDATE_CREDIT_FAILED = \"[User] Update credit -> Failed\";\nexport const PAY_CREDITS = '[User] Pay credits';\nexport const PAY_CREDITS_SUCCESS = '[User] Pay credits -> Success';\nexport const REMOVE_CREDITS = '[User] Remove credits';\nexport const NO_MORE_CREDITS = '[User] No more credits';\nexport const UPDATE_LOG = \"[User] Update log\";\nexport const UPDATE_LOG_SUCCESS = \"[User] Update log -> Success\";\nexport const UPDATE_LOG_FAILED = \"[User] Update log -> Failed\";\n\n\nexport class Login implements Action {\n    readonly type = LOGIN;\n    constructor(public payload: { email: string, password: string }) { }\n}\n\nexport class LoginSuccess implements Action {\n    readonly type = LOGIN_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginFailed implements Action {\n    readonly type = LOGIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class LoginG implements Action {\n    readonly type = LOGIN_G;\n    constructor() { }\n}\n\nexport class LoginGSuccess implements Action {\n    readonly type = LOGIN_G_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginGFailed implements Action {\n    readonly type = LOGIN_G_FAILED;\n}\n\nexport class SignOut implements Action {\n    readonly type = SIGNOUT;\n    constructor() { }\n}\n\nexport class SignIn implements Action {\n    readonly type = SIGNIN;\n    constructor(public payload: { email: string, password: string, retypePassword: string, agreeTerm: boolean }) { }\n}\n\nexport class SignInSuccess implements Action {\n    readonly type = SIGNIN_SUCCESS;\n    constructor() { }\n}\n\nexport class SignInFailed implements Action {\n    readonly type = SIGNIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class UpdateInfo implements Action {\n    readonly type = UPDATEINFO;\n    constructor(public payload: { name: string, address: string, phone: string }) { }\n}\n\nexport class GetInfo implements Action {\n    readonly type = GETINFO;\n    constructor(public payload: { email: string, annonymous: boolean }) { }\n}\n\nexport class GetInfoSuccess implements Action {\n    readonly type = GETINFO_SUCCESS;\n    constructor(public payload: { data: any }) { }\n}\n\nexport class GetInfoFailed implements Action {\n    readonly type = GETINFO_FAILED;\n    constructor() { }\n}\n\nexport class EditInfo implements Action {\n    readonly type = EDITINFO;\n    constructor(public payload: { newName: string, newPhone: string }) { }\n}\n\nexport class EditInfoSuccess implements Action {\n    readonly type = EDITINFO_SUCCESS;\n    constructor() { }\n}\n\nexport class EditInfoFailed implements Action {\n    readonly type = EDITINFO_FAILED;\n    constructor() { }\n}\n\nexport class ForgotPassword implements Action {\n    readonly type = FORGOT_PASSWORD;\n    constructor(public payload: { email: string }) { }\n}\n\nexport class ForgotPasswordSentSuccess implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_SUCCESS;\n    constructor() { }\n}\n\nexport class ForgotPasswordSentFailed implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_FAILED;\n    constructor() { }\n}\n\nexport class InitInfo implements Action {\n    readonly type = INIT_INFO;\n    constructor(public payload: { userEmail: string }) { }\n}\n\nexport class UpdateCredit implements Action {\n    readonly type = UPDATE_CREDIT;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class UpdateCreditSuccess implements Action {\n    readonly type = UPDATE_CREDIT_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateCreditFailed implements Action {\n    readonly type = UPDATE_CREDIT_FAILED;\n    constructor() { }\n}\n\nexport class PayCredits implements Action {\n    readonly type = PAY_CREDITS;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class PayCreditsSuccess implements Action {\n    readonly type = PAY_CREDITS_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLog implements Action {\n    readonly type = UPDATE_LOG;\n    constructor(public payload: { data: any, timestamp: any, log: any }) { }\n}\n\nexport class UpdateLogSuccess implements Action {\n    readonly type = UPDATE_LOG_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLogFailed implements Action {\n    readonly type = UPDATE_LOG_FAILED;\n    constructor() { }\n}\n\n\nexport type All\n    = Login\n    | LoginSuccess\n    | LoginFailed\n    | LoginG\n    | LoginGSuccess\n    | LoginGFailed\n    | UpdateInfo\n    | GetInfo\n    | GetInfoSuccess\n    | GetInfoFailed\n    | EditInfo\n    | EditInfoSuccess\n    | EditInfoFailed\n    | SignIn\n    | SignInSuccess\n    | SignInFailed\n    | SignOut\n    | ForgotPassword\n    | ForgotPasswordSentSuccess\n    | ForgotPasswordSentFailed\n    | InitInfo\n    | UpdateCredit\n    | UpdateCreditSuccess\n    | UpdateCreditFailed\n    | PayCredits\n    | PayCreditsSuccess\n    | UpdateLog\n    | UpdateLogSuccess\n    | UpdateLogFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInSuccess.html":{"url":"classes/SignInSuccess.html","title":"class - SignInSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/user.actions.ts:77\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SIGNIN_SUCCESS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:77\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[User] Login';\nexport const LOGIN_SUCCESS = '[User] Login -> Success';\nexport const LOGIN_FAILED = '[User] Login -> Failed';\nexport const LOGIN_G = '[User] Login Google';\nexport const LOGIN_G_SUCCESS = '[User] Login Google -> Success';\nexport const LOGIN_G_FAILED = '[User] Login Google -> Failed';\nexport const SIGNIN = '[User] SignIn';\nexport const SIGNIN_SUCCESS = '[User] Sign in -> Success';\nexport const SIGNIN_FAILED = '[User] Sign in -> Failed';\nexport const SIGNOUT = '[User] Sign out';\nexport const UPDATEINFO = '[User] Update info';\nexport const GETINFO = '[User] Get info';\nexport const GETINFO_SUCCESS = '[User] Get info -> Success';\nexport const GETINFO_FAILED = '[User] Get info -> Failed';\nexport const EDITINFO = '[User] EditInfo';\nexport const EDITINFO_SUCCESS = '[User] EditInfo -> Success';\nexport const EDITINFO_FAILED = '[User] EditInfo -> Failed';\nexport const FORGOT_PASSWORD = '[User] Forgot password';\nexport const FORGOT_PASSWORD_SENT_SUCCESS = '[User] Forgot password -> Sent Success';\nexport const FORGOT_PASSWORD_SENT_FAILED = '[User] Forgot password -> Sent Failed';\nexport const INIT_INFO = '[User] Init information';\nexport const UPDATE_CREDIT = '[User] Update credit';\nexport const UPDATE_CREDIT_SUCCESS = \"[User] Update credit -> Success\";\nexport const UPDATE_CREDIT_FAILED = \"[User] Update credit -> Failed\";\nexport const PAY_CREDITS = '[User] Pay credits';\nexport const PAY_CREDITS_SUCCESS = '[User] Pay credits -> Success';\nexport const REMOVE_CREDITS = '[User] Remove credits';\nexport const NO_MORE_CREDITS = '[User] No more credits';\nexport const UPDATE_LOG = \"[User] Update log\";\nexport const UPDATE_LOG_SUCCESS = \"[User] Update log -> Success\";\nexport const UPDATE_LOG_FAILED = \"[User] Update log -> Failed\";\n\n\nexport class Login implements Action {\n    readonly type = LOGIN;\n    constructor(public payload: { email: string, password: string }) { }\n}\n\nexport class LoginSuccess implements Action {\n    readonly type = LOGIN_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginFailed implements Action {\n    readonly type = LOGIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class LoginG implements Action {\n    readonly type = LOGIN_G;\n    constructor() { }\n}\n\nexport class LoginGSuccess implements Action {\n    readonly type = LOGIN_G_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginGFailed implements Action {\n    readonly type = LOGIN_G_FAILED;\n}\n\nexport class SignOut implements Action {\n    readonly type = SIGNOUT;\n    constructor() { }\n}\n\nexport class SignIn implements Action {\n    readonly type = SIGNIN;\n    constructor(public payload: { email: string, password: string, retypePassword: string, agreeTerm: boolean }) { }\n}\n\nexport class SignInSuccess implements Action {\n    readonly type = SIGNIN_SUCCESS;\n    constructor() { }\n}\n\nexport class SignInFailed implements Action {\n    readonly type = SIGNIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class UpdateInfo implements Action {\n    readonly type = UPDATEINFO;\n    constructor(public payload: { name: string, address: string, phone: string }) { }\n}\n\nexport class GetInfo implements Action {\n    readonly type = GETINFO;\n    constructor(public payload: { email: string, annonymous: boolean }) { }\n}\n\nexport class GetInfoSuccess implements Action {\n    readonly type = GETINFO_SUCCESS;\n    constructor(public payload: { data: any }) { }\n}\n\nexport class GetInfoFailed implements Action {\n    readonly type = GETINFO_FAILED;\n    constructor() { }\n}\n\nexport class EditInfo implements Action {\n    readonly type = EDITINFO;\n    constructor(public payload: { newName: string, newPhone: string }) { }\n}\n\nexport class EditInfoSuccess implements Action {\n    readonly type = EDITINFO_SUCCESS;\n    constructor() { }\n}\n\nexport class EditInfoFailed implements Action {\n    readonly type = EDITINFO_FAILED;\n    constructor() { }\n}\n\nexport class ForgotPassword implements Action {\n    readonly type = FORGOT_PASSWORD;\n    constructor(public payload: { email: string }) { }\n}\n\nexport class ForgotPasswordSentSuccess implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_SUCCESS;\n    constructor() { }\n}\n\nexport class ForgotPasswordSentFailed implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_FAILED;\n    constructor() { }\n}\n\nexport class InitInfo implements Action {\n    readonly type = INIT_INFO;\n    constructor(public payload: { userEmail: string }) { }\n}\n\nexport class UpdateCredit implements Action {\n    readonly type = UPDATE_CREDIT;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class UpdateCreditSuccess implements Action {\n    readonly type = UPDATE_CREDIT_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateCreditFailed implements Action {\n    readonly type = UPDATE_CREDIT_FAILED;\n    constructor() { }\n}\n\nexport class PayCredits implements Action {\n    readonly type = PAY_CREDITS;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class PayCreditsSuccess implements Action {\n    readonly type = PAY_CREDITS_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLog implements Action {\n    readonly type = UPDATE_LOG;\n    constructor(public payload: { data: any, timestamp: any, log: any }) { }\n}\n\nexport class UpdateLogSuccess implements Action {\n    readonly type = UPDATE_LOG_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLogFailed implements Action {\n    readonly type = UPDATE_LOG_FAILED;\n    constructor() { }\n}\n\n\nexport type All\n    = Login\n    | LoginSuccess\n    | LoginFailed\n    | LoginG\n    | LoginGSuccess\n    | LoginGFailed\n    | UpdateInfo\n    | GetInfo\n    | GetInfoSuccess\n    | GetInfoFailed\n    | EditInfo\n    | EditInfoSuccess\n    | EditInfoFailed\n    | SignIn\n    | SignInSuccess\n    | SignInFailed\n    | SignOut\n    | ForgotPassword\n    | ForgotPasswordSentSuccess\n    | ForgotPasswordSentFailed\n    | InitInfo\n    | UpdateCredit\n    | UpdateCreditSuccess\n    | UpdateCreditFailed\n    | PayCredits\n    | PayCreditsSuccess\n    | UpdateLog\n    | UpdateLogSuccess\n    | UpdateLogFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignOut.html":{"url":"classes/SignOut.html","title":"class - SignOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/user.actions.ts:67\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SIGNOUT\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:67\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[User] Login';\nexport const LOGIN_SUCCESS = '[User] Login -> Success';\nexport const LOGIN_FAILED = '[User] Login -> Failed';\nexport const LOGIN_G = '[User] Login Google';\nexport const LOGIN_G_SUCCESS = '[User] Login Google -> Success';\nexport const LOGIN_G_FAILED = '[User] Login Google -> Failed';\nexport const SIGNIN = '[User] SignIn';\nexport const SIGNIN_SUCCESS = '[User] Sign in -> Success';\nexport const SIGNIN_FAILED = '[User] Sign in -> Failed';\nexport const SIGNOUT = '[User] Sign out';\nexport const UPDATEINFO = '[User] Update info';\nexport const GETINFO = '[User] Get info';\nexport const GETINFO_SUCCESS = '[User] Get info -> Success';\nexport const GETINFO_FAILED = '[User] Get info -> Failed';\nexport const EDITINFO = '[User] EditInfo';\nexport const EDITINFO_SUCCESS = '[User] EditInfo -> Success';\nexport const EDITINFO_FAILED = '[User] EditInfo -> Failed';\nexport const FORGOT_PASSWORD = '[User] Forgot password';\nexport const FORGOT_PASSWORD_SENT_SUCCESS = '[User] Forgot password -> Sent Success';\nexport const FORGOT_PASSWORD_SENT_FAILED = '[User] Forgot password -> Sent Failed';\nexport const INIT_INFO = '[User] Init information';\nexport const UPDATE_CREDIT = '[User] Update credit';\nexport const UPDATE_CREDIT_SUCCESS = \"[User] Update credit -> Success\";\nexport const UPDATE_CREDIT_FAILED = \"[User] Update credit -> Failed\";\nexport const PAY_CREDITS = '[User] Pay credits';\nexport const PAY_CREDITS_SUCCESS = '[User] Pay credits -> Success';\nexport const REMOVE_CREDITS = '[User] Remove credits';\nexport const NO_MORE_CREDITS = '[User] No more credits';\nexport const UPDATE_LOG = \"[User] Update log\";\nexport const UPDATE_LOG_SUCCESS = \"[User] Update log -> Success\";\nexport const UPDATE_LOG_FAILED = \"[User] Update log -> Failed\";\n\n\nexport class Login implements Action {\n    readonly type = LOGIN;\n    constructor(public payload: { email: string, password: string }) { }\n}\n\nexport class LoginSuccess implements Action {\n    readonly type = LOGIN_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginFailed implements Action {\n    readonly type = LOGIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class LoginG implements Action {\n    readonly type = LOGIN_G;\n    constructor() { }\n}\n\nexport class LoginGSuccess implements Action {\n    readonly type = LOGIN_G_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginGFailed implements Action {\n    readonly type = LOGIN_G_FAILED;\n}\n\nexport class SignOut implements Action {\n    readonly type = SIGNOUT;\n    constructor() { }\n}\n\nexport class SignIn implements Action {\n    readonly type = SIGNIN;\n    constructor(public payload: { email: string, password: string, retypePassword: string, agreeTerm: boolean }) { }\n}\n\nexport class SignInSuccess implements Action {\n    readonly type = SIGNIN_SUCCESS;\n    constructor() { }\n}\n\nexport class SignInFailed implements Action {\n    readonly type = SIGNIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class UpdateInfo implements Action {\n    readonly type = UPDATEINFO;\n    constructor(public payload: { name: string, address: string, phone: string }) { }\n}\n\nexport class GetInfo implements Action {\n    readonly type = GETINFO;\n    constructor(public payload: { email: string, annonymous: boolean }) { }\n}\n\nexport class GetInfoSuccess implements Action {\n    readonly type = GETINFO_SUCCESS;\n    constructor(public payload: { data: any }) { }\n}\n\nexport class GetInfoFailed implements Action {\n    readonly type = GETINFO_FAILED;\n    constructor() { }\n}\n\nexport class EditInfo implements Action {\n    readonly type = EDITINFO;\n    constructor(public payload: { newName: string, newPhone: string }) { }\n}\n\nexport class EditInfoSuccess implements Action {\n    readonly type = EDITINFO_SUCCESS;\n    constructor() { }\n}\n\nexport class EditInfoFailed implements Action {\n    readonly type = EDITINFO_FAILED;\n    constructor() { }\n}\n\nexport class ForgotPassword implements Action {\n    readonly type = FORGOT_PASSWORD;\n    constructor(public payload: { email: string }) { }\n}\n\nexport class ForgotPasswordSentSuccess implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_SUCCESS;\n    constructor() { }\n}\n\nexport class ForgotPasswordSentFailed implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_FAILED;\n    constructor() { }\n}\n\nexport class InitInfo implements Action {\n    readonly type = INIT_INFO;\n    constructor(public payload: { userEmail: string }) { }\n}\n\nexport class UpdateCredit implements Action {\n    readonly type = UPDATE_CREDIT;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class UpdateCreditSuccess implements Action {\n    readonly type = UPDATE_CREDIT_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateCreditFailed implements Action {\n    readonly type = UPDATE_CREDIT_FAILED;\n    constructor() { }\n}\n\nexport class PayCredits implements Action {\n    readonly type = PAY_CREDITS;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class PayCreditsSuccess implements Action {\n    readonly type = PAY_CREDITS_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLog implements Action {\n    readonly type = UPDATE_LOG;\n    constructor(public payload: { data: any, timestamp: any, log: any }) { }\n}\n\nexport class UpdateLogSuccess implements Action {\n    readonly type = UPDATE_LOG_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLogFailed implements Action {\n    readonly type = UPDATE_LOG_FAILED;\n    constructor() { }\n}\n\n\nexport type All\n    = Login\n    | LoginSuccess\n    | LoginFailed\n    | LoginG\n    | LoginGSuccess\n    | LoginGFailed\n    | UpdateInfo\n    | GetInfo\n    | GetInfoSuccess\n    | GetInfoFailed\n    | EditInfo\n    | EditInfoSuccess\n    | EditInfoFailed\n    | SignIn\n    | SignInSuccess\n    | SignInFailed\n    | SignOut\n    | ForgotPassword\n    | ForgotPasswordSentSuccess\n    | ForgotPasswordSentFailed\n    | InitInfo\n    | UpdateCredit\n    | UpdateCreditSuccess\n    | UpdateCreditFailed\n    | PayCredits\n    | PayCreditsSuccess\n    | UpdateLog\n    | UpdateLogSuccess\n    | UpdateLogFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpPage.html":{"url":"components/SignUpPage.html","title":"component - SignUpPage","body":"\n                   \n\n\n\n\n\n  Components\n  SignUpPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sign-up/sign-up.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-up\n            \n\n            \n                styleUrls\n                ./sign-up.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./sign-up.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                afAuth\n                            \n                            \n                                checkTerms\n                            \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                retypePassword\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                toastController\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentToast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth, router: Router, toastController: ToastController, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/sign-up/sign-up.page.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/sign-up/sign-up.page.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/sign-up/sign-up.page.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentToast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentToast(message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/sign-up/sign-up.page.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            afAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AngularFireAuth\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sign-up/sign-up.page.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkTerms\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/sign-up/sign-up.page.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/sign-up/sign-up.page.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/sign-up/sign-up.page.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            retypePassword\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/sign-up/sign-up.page.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sign-up/sign-up.page.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toastController\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ToastController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sign-up/sign-up.page.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sign-up/sign-up.page.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\nimport { Router, RouterModule } from '@angular/router';\nimport { AngularFireAuthModule, AngularFireAuth } from '@angular/fire/auth';\nimport { Store } from '@ngrx/store';\nimport IAppState from '../IAppState';\nimport { Observable } from 'rxjs';\nimport { User } from '../states/models/user.model';\nimport * as UserAction from '../states/actions/user.actions';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.page.html',\n  styleUrls: ['./sign-up.page.scss']\n})\nexport class SignUpPage implements OnInit {\n\n  constructor(\n    public afAuth: AngularFireAuth,\n    public router: Router,\n    public toastController: ToastController,\n    private store: Store) {\n    this.user = store.select('user');\n  }\n\n  ngOnInit() {\n  }\n\n  email;\n  password;\n  retypePassword;\n  checkTerms;\n\n  user: Observable;\n\n  async presentToast(message) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000\n    });\n    toast.present();\n  }\n\n\n  create() {\n    this.email = this.email.trim();\n    this.store.dispatch(new UserAction.SignIn(\n      {\n        email: this.email,\n        password: this.password,\n        retypePassword: this.retypePassword,\n        agreeTerm: this.checkTerms\n      }));\n\n    this.user.subscribe((payload) => {\n      if (!payload.registration.hasError) {\n        this.router.navigate(['/verify-email']);\n      }\n      else {\n        this.presentToast(payload.registration.message);\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    Create new account\n    \n      \n        Back\n      \n    \n  \n\n\n\n\n  \n    \n      \n      Join with us\n    \n\n    \n      \n        \n          \n          Email\n        \n        \n      \n      \n        \n          \n          Password\n        \n        \n      \n      \n        \n          \n          Retype Password\n        \n        \n      \n      \n        \n        \n           I have read and accept the terms and conditions\n        \n\n      \n      \n        \n          \n            \n              Create\n            \n          \n        \n      \n\n    \n  \n\n\n    \n\n    \n                \n                    ./sign-up.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Create new account                  Back                              Join with us                                          Email                                                        Password                                                        Retype Password                                                       I have read and accept the terms and conditions                                                                Create                                          '\n    var COMPONENTS = [{'name': 'AccountPage', 'selector': 'app-account'},{'name': 'AdPagePage', 'selector': 'app-ad-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BeforeStartPage', 'selector': 'app-before-start'},{'name': 'CatInfoModalPage', 'selector': 'app-cat-info-modal'},{'name': 'ChallengePage', 'selector': 'app-challenge'},{'name': 'EditProfileModalPage', 'selector': 'app-edit-profile-modal'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'SignUpPage', 'selector': 'app-sign-up'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TestResultPage', 'selector': 'app-test-result'},{'name': 'TestRoomPage', 'selector': 'app-test-room'},{'name': 'TrainingPage', 'selector': 'app-training'},{'name': 'VerifyEmailPage', 'selector': 'app-verify-email'},{'name': 'WelcomePage', 'selector': 'app-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignUpPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SignUpPageModule.html":{"url":"modules/SignUpPageModule.html","title":"module - SignUpPageModule","body":"\n                   \n\n\n\n\n    Modules\n    SignUpPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SignUpPageModule\n\n\n\ncluster_SignUpPageModule_declarations\n\n\n\n\nSignUpPage\n\nSignUpPage\n\n\n\nSignUpPageModule\n\nSignUpPageModule\n\nSignUpPageModule -->\n\nSignUpPage->SignUpPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/sign-up/sign-up.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SignUpPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SignUpPage } from './sign-up.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignUpPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n\n  ],\n  declarations: [SignUpPage]\n})\nexport class SignUpPageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SysLog.html":{"url":"interfaces/SysLog.html","title":"interface - SysLog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SysLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/models/syslog.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        log\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        log\n                                    \n                                \n                                \n                                    \n                                        log:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface SysLog {\n    log: {}\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SysLogEffects.html":{"url":"injectables/SysLogEffects.html","title":"injectable - SysLogEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SysLogEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/effects/syslog.effect.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                write\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions: Actions, db: AngularFireDatabase, afAuth: AngularFireAuth)\n                    \n                \n                        \n                            \n                                Defined in src/app/states/effects/syslog.effect.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            write\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions.pipe(\n        ofType(SysLogAction.WRITE),\n        map((action: SysLogAction.Write) => {\n            from(this.db.list('syslog/').push({\n                \"date\": Date.now(),\n                \"user\": this.afAuth.auth.currentUser.uid,\n                \"content\": action.payload.message\n            })).pipe(\n                map(respone => new SysLogAction.WriteSuccess()),\n                catchError(err => of(new SysLogAction.WriteFailed()))\n            )\n            return new SysLogAction.WriteSuccess();\n        }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/effects/syslog.effect.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import * as SysLogAction from '../actions/syslog.actions';\nimport { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of, from } from 'rxjs';\nimport { switchMap, map, catchError, mergeMap } from 'rxjs/operators';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\nexport type Action = SysLogAction.All;\n\n@Injectable()\nexport class SysLogEffects {\n    constructor(private actions: Actions, private db: AngularFireDatabase, private afAuth: AngularFireAuth) { }\n\n    @Effect()\n    write: Observable = this.actions.pipe(\n        ofType(SysLogAction.WRITE),\n        map((action: SysLogAction.Write) => {\n            from(this.db.list('syslog/').push({\n                \"date\": Date.now(),\n                \"user\": this.afAuth.auth.currentUser.uid,\n                \"content\": action.payload.message\n            })).pipe(\n                map(respone => new SysLogAction.WriteSuccess()),\n                catchError(err => of(new SysLogAction.WriteFailed()))\n            )\n            return new SysLogAction.WriteSuccess();\n        }));\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SyslogService.html":{"url":"injectables/SyslogService.html","title":"injectable - SyslogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SyslogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/syslog.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                write\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/syslog.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            write\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    write(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/syslog.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport IAppState from '../IAppState';\nimport * as SysLogActions from '../states/actions/syslog.actions';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SyslogService {\n  constructor(private store: Store) {\n\n  }\n\n  public write(message: string) {\n    this.store.dispatch(new SysLogActions.Write({ message: message }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Tab1Page.html":{"url":"components/Tab1Page.html","title":"component - Tab1Page","body":"\n                   \n\n\n\n\n\n  Components\n  Tab1Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tab1/tab1.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tab1\n            \n\n            \n                styleUrls\n                tab1.page.scss\n            \n\n\n\n            \n                templateUrl\n                tab1.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-tab1',\n  templateUrl: 'tab1.page.html',\n  styleUrls: ['tab1.page.scss']\n})\nexport class Tab1Page {}\n\n    \n\n    \n        \n  \n    \n      Tab One\n    \n  \n\n\n\n    \n      \n      \n        Get Started\n        Welcome to Ionic\n      \n      \n        Now that your app has been created, you'll want to start building out features and components. Check out some of the resources below for next steps.\n      \n    \n    \n      \n        Resources\n      \n      \n        \n        Ionic Documentation\n      \n      \n        \n        Scaffold Out Your App\n      \n      \n        \n        Change Your App Layout\n      \n      \n        \n        Theme Your App\n      \n    \n\n\n    \n\n    \n                \n                    tab1.page.scss\n                \n                .welcome-card ion-img {\n  max-height: 35vh;\n  overflow: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Tab One                              Get Started        Welcome to Ionic                    Now that your app has been created, you\\'ll want to start building out features and components. Check out some of the resources below for next steps.                            Resources                            Ionic Documentation                            Scaffold Out Your App                            Change Your App Layout                            Theme Your App          '\n    var COMPONENTS = [{'name': 'AccountPage', 'selector': 'app-account'},{'name': 'AdPagePage', 'selector': 'app-ad-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BeforeStartPage', 'selector': 'app-before-start'},{'name': 'CatInfoModalPage', 'selector': 'app-cat-info-modal'},{'name': 'ChallengePage', 'selector': 'app-challenge'},{'name': 'EditProfileModalPage', 'selector': 'app-edit-profile-modal'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'SignUpPage', 'selector': 'app-sign-up'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TestResultPage', 'selector': 'app-test-result'},{'name': 'TestRoomPage', 'selector': 'app-test-room'},{'name': 'TrainingPage', 'selector': 'app-training'},{'name': 'VerifyEmailPage', 'selector': 'app-verify-email'},{'name': 'WelcomePage', 'selector': 'app-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Tab1Page'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/Tab1PageModule.html":{"url":"modules/Tab1PageModule.html","title":"module - Tab1PageModule","body":"\n                   \n\n\n\n\n    Modules\n    Tab1PageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_Tab1PageModule\n\n\n\ncluster_Tab1PageModule_declarations\n\n\n\n\nTab1Page\n\nTab1Page\n\n\n\nTab1PageModule\n\nTab1PageModule\n\nTab1PageModule -->\n\nTab1Page->Tab1PageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tab1/tab1.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            Tab1Page\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab1Page } from './tab1.page';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: Tab1Page }])\n  ],\n  declarations: [Tab1Page]\n})\nexport class Tab1PageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Tab2Page.html":{"url":"components/Tab2Page.html","title":"component - Tab2Page","body":"\n                   \n\n\n\n\n\n  Components\n  Tab2Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tab2/tab2.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tab2\n            \n\n            \n                styleUrls\n                tab2.page.scss\n            \n\n\n\n            \n                templateUrl\n                tab2.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-tab2',\n  templateUrl: 'tab2.page.html',\n  styleUrls: ['tab2.page.scss']\n})\nexport class Tab2Page {}\n\n    \n\n    \n        \n  \n    \n      Tab Two\n    \n  \n\n\n\n\n    \n\n    \n                \n                    tab2.page.scss\n                \n                \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Tab Two      '\n    var COMPONENTS = [{'name': 'AccountPage', 'selector': 'app-account'},{'name': 'AdPagePage', 'selector': 'app-ad-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BeforeStartPage', 'selector': 'app-before-start'},{'name': 'CatInfoModalPage', 'selector': 'app-cat-info-modal'},{'name': 'ChallengePage', 'selector': 'app-challenge'},{'name': 'EditProfileModalPage', 'selector': 'app-edit-profile-modal'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'SignUpPage', 'selector': 'app-sign-up'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TestResultPage', 'selector': 'app-test-result'},{'name': 'TestRoomPage', 'selector': 'app-test-room'},{'name': 'TrainingPage', 'selector': 'app-training'},{'name': 'VerifyEmailPage', 'selector': 'app-verify-email'},{'name': 'WelcomePage', 'selector': 'app-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Tab2Page'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/Tab2PageModule.html":{"url":"modules/Tab2PageModule.html","title":"module - Tab2PageModule","body":"\n                   \n\n\n\n\n    Modules\n    Tab2PageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_Tab2PageModule\n\n\n\ncluster_Tab2PageModule_declarations\n\n\n\n\nTab2Page\n\nTab2Page\n\n\n\nTab2PageModule\n\nTab2PageModule\n\nTab2PageModule -->\n\nTab2Page->Tab2PageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tab2/tab2.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            Tab2Page\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab2Page } from './tab2.page';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: Tab2Page }])\n  ],\n  declarations: [Tab2Page]\n})\nexport class Tab2PageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Tab3Page.html":{"url":"components/Tab3Page.html","title":"component - Tab3Page","body":"\n                   \n\n\n\n\n\n  Components\n  Tab3Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tab3/tab3.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tab3\n            \n\n            \n                styleUrls\n                tab3.page.scss\n            \n\n\n\n            \n                templateUrl\n                tab3.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-tab3',\n  templateUrl: 'tab3.page.html',\n  styleUrls: ['tab3.page.scss']\n})\nexport class Tab3Page {}\n\n    \n\n    \n        \n  \n    \n      Tab Three\n    \n  \n\n\n\n\n    \n\n    \n                \n                    tab3.page.scss\n                \n                \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Tab Three      '\n    var COMPONENTS = [{'name': 'AccountPage', 'selector': 'app-account'},{'name': 'AdPagePage', 'selector': 'app-ad-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BeforeStartPage', 'selector': 'app-before-start'},{'name': 'CatInfoModalPage', 'selector': 'app-cat-info-modal'},{'name': 'ChallengePage', 'selector': 'app-challenge'},{'name': 'EditProfileModalPage', 'selector': 'app-edit-profile-modal'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'SignUpPage', 'selector': 'app-sign-up'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TestResultPage', 'selector': 'app-test-result'},{'name': 'TestRoomPage', 'selector': 'app-test-room'},{'name': 'TrainingPage', 'selector': 'app-training'},{'name': 'VerifyEmailPage', 'selector': 'app-verify-email'},{'name': 'WelcomePage', 'selector': 'app-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Tab3Page'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/Tab3PageModule.html":{"url":"modules/Tab3PageModule.html","title":"module - Tab3PageModule","body":"\n                   \n\n\n\n\n    Modules\n    Tab3PageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_Tab3PageModule\n\n\n\ncluster_Tab3PageModule_declarations\n\n\n\n\nTab3Page\n\nTab3Page\n\n\n\nTab3PageModule\n\nTab3PageModule\n\nTab3PageModule -->\n\nTab3Page->Tab3PageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tab3/tab3.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            Tab3Page\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab3Page } from './tab3.page';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: Tab3Page }])\n  ],\n  declarations: [Tab3Page]\n})\nexport class Tab3PageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsPage.html":{"url":"components/TabsPage.html","title":"component - TabsPage","body":"\n                   \n\n\n\n\n\n  Components\n  TabsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tabs/tabs.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabs\n            \n\n            \n                styleUrls\n                tabs.page.scss\n            \n\n\n\n            \n                templateUrl\n                tabs.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isInactivated\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tabs/tabs.page.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isInactivated\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isInactivated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tabs/tabs.page.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { UserService } from '../services/user.service';\nimport { UserType } from '../UserType';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: 'tabs.page.html',\n  styleUrls: ['tabs.page.scss']\n})\nexport class TabsPage {\n  constructor(private userService: UserService) { }\n  public isInactivated() {\n    if (this.userService.getRole() != undefined) {\n      return this.userService.getRole() == UserType.INACTIVATED;\n    }\n    return true;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n      Welcome\n    \n    \n      \n      Account\n    \n\n    \n      \n      Training\n    \n\n\n    \n      \n      Challenge\n    \n\n  \n\n\n    \n\n    \n                \n                    tabs.page.scss\n                \n                \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Welcome                    Account                    Training                    Challenge      '\n    var COMPONENTS = [{'name': 'AccountPage', 'selector': 'app-account'},{'name': 'AdPagePage', 'selector': 'app-ad-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BeforeStartPage', 'selector': 'app-before-start'},{'name': 'CatInfoModalPage', 'selector': 'app-cat-info-modal'},{'name': 'ChallengePage', 'selector': 'app-challenge'},{'name': 'EditProfileModalPage', 'selector': 'app-edit-profile-modal'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'SignUpPage', 'selector': 'app-sign-up'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TestResultPage', 'selector': 'app-test-result'},{'name': 'TestRoomPage', 'selector': 'app-test-room'},{'name': 'TrainingPage', 'selector': 'app-training'},{'name': 'VerifyEmailPage', 'selector': 'app-verify-email'},{'name': 'WelcomePage', 'selector': 'app-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabsPageModule.html":{"url":"modules/TabsPageModule.html","title":"module - TabsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TabsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TabsPageModule\n\n\n\ncluster_TabsPageModule_declarations\n\n\n\ncluster_TabsPageModule_imports\n\n\n\n\nTabsPage\n\nTabsPage\n\n\n\nTabsPageModule\n\nTabsPageModule\n\nTabsPageModule -->\n\nTabsPage->TabsPageModule\n\n\n\n\n\nTabsPageRoutingModule\n\nTabsPageRoutingModule\n\nTabsPageModule -->\n\nTabsPageRoutingModule->TabsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tabs/tabs.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TabsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TabsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { TabsPageRoutingModule } from './tabs.router.module';\n\nimport { TabsPage } from './tabs.page';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    TabsPageRoutingModule\n  ],\n  declarations: [TabsPage]\n})\nexport class TabsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabsPageRoutingModule.html":{"url":"modules/TabsPageRoutingModule.html","title":"module - TabsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TabsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tabs/tabs.router.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { TabsPage } from './tabs.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TabsPage,\n    children: [\n      {\n        path: 'welcome',\n        children: [\n          {\n            path: '',\n            loadChildren: '../welcome/welcome.module#WelcomePageModule'\n          }\n        ]\n      },\n      {\n        path: 'account',\n        children: [\n          {\n            path: '',\n            loadChildren: '../account/account.module#AccountPageModule'\n          }\n        ]\n      },\n      {\n        path: 'training',\n        children: [\n          {\n            path: '',\n            loadChildren: '../training/training.module#TrainingPageModule'\n          }\n        ]\n      },\n      {\n        path: 'challenge',\n        children: [\n          {\n            path: '',\n            loadChildren: '../challenge/challenge.module#ChallengePageModule'\n          }\n        ]\n      },\n      {\n        path: 'tab3',\n        children: [\n          {\n            path: '',\n            loadChildren: '../tab3/tab3.module#Tab3PageModule'\n          }\n        ]\n      },\n      {\n        path: '',\n        redirectTo: '/tabs/account',\n        pathMatch: 'full'\n      }\n    ]\n  },\n  {\n    path: '',\n    redirectTo: '/main/account',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TabsPageRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TestResultPage.html":{"url":"components/TestResultPage.html","title":"component - TestResultPage","body":"\n                   \n\n\n\n\n\n  Components\n  TestResultPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/test-result/test-result.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-test-result\n            \n\n            \n                styleUrls\n                ./test-result.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./test-result.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                percent\n                            \n                            \n                                resultList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/test-result/test-result.page.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goBack\n                        \n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n            \n                \n                    Defined in src/app/test-result/test-result.page.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/test-result/test-result.page.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            percent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/test-result/test-result.page.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resultList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/test-result/test-result.page.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-test-result',\n  templateUrl: './test-result.page.html',\n  styleUrls: ['./test-result.page.scss'],\n})\nexport class TestResultPage implements OnInit {\n\n  constructor(private dataService: DataService, private router: Router) { }\n\n  percent = 0;\n  resultList: Array;\n\n  goBack() {\n    this.router.navigate(['main/account']);\n  }\n\n  ngOnInit() {\n    this.resultList = new Array();\n    for (let i = 0; i  value.correct).length;\n    this.percent = correctNum / this.dataService.selectedQuestions.length * 100;\n  }\n\n}\n\n    \n\n    \n        \n  \n    Result: {{percent}} %\n\n    \n      \n      Back\n    \n\n  \n\n\n\n  \n    \n\n      \n        \n        \n      \n\n      #{{i+1}}\n      {{result.question['Title']}}\n\n\n    \n  \n\n    \n\n    \n                \n                    ./test-result.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Result: {{percent}} %                Back                                              #{{i+1}}      {{result.question[\\'Title\\']}}      '\n    var COMPONENTS = [{'name': 'AccountPage', 'selector': 'app-account'},{'name': 'AdPagePage', 'selector': 'app-ad-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BeforeStartPage', 'selector': 'app-before-start'},{'name': 'CatInfoModalPage', 'selector': 'app-cat-info-modal'},{'name': 'ChallengePage', 'selector': 'app-challenge'},{'name': 'EditProfileModalPage', 'selector': 'app-edit-profile-modal'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'SignUpPage', 'selector': 'app-sign-up'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TestResultPage', 'selector': 'app-test-result'},{'name': 'TestRoomPage', 'selector': 'app-test-room'},{'name': 'TrainingPage', 'selector': 'app-training'},{'name': 'VerifyEmailPage', 'selector': 'app-verify-email'},{'name': 'WelcomePage', 'selector': 'app-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TestResultPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TestResultPageModule.html":{"url":"modules/TestResultPageModule.html","title":"module - TestResultPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TestResultPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TestResultPageModule\n\n\n\ncluster_TestResultPageModule_declarations\n\n\n\n\nTestResultPage\n\nTestResultPage\n\n\n\nTestResultPageModule\n\nTestResultPageModule\n\nTestResultPageModule -->\n\nTestResultPage->TestResultPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/test-result/test-result.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TestResultPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TestResultPage } from './test-result.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TestResultPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [TestResultPage]\n})\nexport class TestResultPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TestRoomPage.html":{"url":"components/TestRoomPage.html","title":"component - TestRoomPage","body":"\n                   \n\n\n\n\n\n  Components\n  TestRoomPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/test-room/test-room.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-test-room\n            \n\n            \n                styleUrls\n                ./test-room.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./test-room.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answers\n                            \n                            \n                                currentIndex\n                            \n                            \n                                numOfQuestion\n                            \n                            \n                                questionList\n                            \n                            \n                                show_title\n                            \n                            \n                                slideOpts\n                            \n                            \n                                slides\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                imageMapping\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectAnswer\n                            \n                            \n                                    Async\n                                showToast\n                            \n                            \n                                slideChanged\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, toastController: ToastController, router: Router, historyService: HistoryService, timeService: TimeService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/test-room/test-room.page.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        historyService\n                                                  \n                                                        \n                                                                        HistoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            imageMapping\n                        \n                        \n                    \n                \n            \n            \n                \nimageMapping()\n                \n            \n\n\n            \n                \n                    Defined in src/app/test-room/test-room.page.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/test-room/test-room.page.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectAnswer\n                        \n                        \n                    \n                \n            \n            \n                \nselectAnswer(index, value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/test-room/test-room.page.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            showToast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showToast(text)\n                \n            \n\n\n            \n                \n                    Defined in src/app/test-room/test-room.page.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            slideChanged\n                        \n                        \n                    \n                \n            \n            \n                \nslideChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/test-room/test-room.page.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/test-room/test-room.page.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            answers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/test-room/test-room.page.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/test-room/test-room.page.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numOfQuestion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in src/app/test-room/test-room.page.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/test-room/test-room.page.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show_title\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/test-room/test-room.page.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slideOpts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    effect: 'flip'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/test-room/test-room.page.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slides\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IonSlides\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(IonSlides)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/test-room/test-room.page.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { IonSlides, ToastController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { TimeService } from '../services/time.service';\nimport { UserService } from '../services/user.service';\nimport { HistoryService } from '../services/history.service';\n\n\n@Component({\n  selector: 'app-test-room',\n  templateUrl: './test-room.page.html',\n  styleUrls: ['./test-room.page.scss'],\n})\nexport class TestRoomPage implements OnInit {\n\n  constructor(private dataService: DataService,\n    private toastController: ToastController,\n    private router: Router,\n    private historyService: HistoryService,\n    private timeService: TimeService,\n    private userService: UserService) {\n    this.numOfQuestion = this.dataService.quesGenOption.maximum_question;\n    this.show_title = this.dataService.quesGenOption.show_title;\n    this.answers = new Array();\n    for (let i = 0; i  Math.random() - 0.5);\n    this.questionList = this.questionList.slice(0, this.numOfQuestion);\n    this.dataService.selectedQuestions = this.questionList;\n    this.imageMapping();\n  }\n\n\n  @ViewChild(IonSlides) slides: IonSlides;\n\n  slideOpts = {\n    effect: 'flip'\n  };\n\n  questionList: Array;\n\n  currentIndex = 0;\n\n  numOfQuestion = 10;\n\n  show_title = true;\n  answers: Array;\n\n  ngOnInit() {\n\n  }\n\n  slideChanged() {\n    this.slides.getActiveIndex().then((value) => {\n      this.currentIndex = value;\n    });\n  }\n\n  submit() {\n    this.dataService.navState['testing'] = false;\n    this.dataService.navState['testFinish'] = true;\n    this.dataService.testResult = this.answers;\n    this.timeService.stopTimer();\n    let correct = {}\n    let incorrect = {}\n    for (let i = 0; i  50) {\n      const toast = await this.toastController.create({\n        message: text,\n        position: 'top',\n        animated: true,\n        duration: 3000\n      });\n      toast.present();\n    }\n  }\n\n  imageMapping() {\n    let re = /img__(.*)jpg/gm\n    for (let i = 0; i  {\n            return value.name === raw[i].slice(5, raw[i].length).replace(/[^a-zA-Z0-9._]*/gm, '');\n          })\n          if (image != undefined) {\n            content = content.replace(raw[i], \" ![](\" + image.link + \") \");\n          }\n        }\n\n        this.questionList[i]['Question'] = content;\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    Question {{currentIndex+1}}\n    \n      \n        \n        Feedback\n      \n      \n        \n        Submit\n      \n    \n  \n  \n    {{questionList[currentIndex]['Title']}}\n  \n  \n\n\n\n  \n    \n      \n        \n      \n    \n  \n\n\n\n\n  \n    \n      \n        \n          {{questionList[currentIndex]['A']}}\n          \n        \n\n      \n      \n        \n          {{questionList[currentIndex]['B']}}\n          \n        \n\n      \n      \n        \n          {{questionList[currentIndex]['C']}}\n          \n        \n\n      \n      \n        \n          {{questionList[currentIndex]['D']}}\n          \n        \n\n      \n    \n  \n\n    \n\n    \n                \n                    ./test-room.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Question {{currentIndex+1}}                          Feedback                            Submit                  {{questionList[currentIndex][\\'Title\\']}}                                                                  {{questionList[currentIndex][\\'A\\']}}                                                {{questionList[currentIndex][\\'B\\']}}                                                {{questionList[currentIndex][\\'C\\']}}                                                {{questionList[currentIndex][\\'D\\']}}                              '\n    var COMPONENTS = [{'name': 'AccountPage', 'selector': 'app-account'},{'name': 'AdPagePage', 'selector': 'app-ad-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BeforeStartPage', 'selector': 'app-before-start'},{'name': 'CatInfoModalPage', 'selector': 'app-cat-info-modal'},{'name': 'ChallengePage', 'selector': 'app-challenge'},{'name': 'EditProfileModalPage', 'selector': 'app-edit-profile-modal'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'SignUpPage', 'selector': 'app-sign-up'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TestResultPage', 'selector': 'app-test-result'},{'name': 'TestRoomPage', 'selector': 'app-test-room'},{'name': 'TrainingPage', 'selector': 'app-training'},{'name': 'VerifyEmailPage', 'selector': 'app-verify-email'},{'name': 'WelcomePage', 'selector': 'app-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TestRoomPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TestRoomPageModule.html":{"url":"modules/TestRoomPageModule.html","title":"module - TestRoomPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TestRoomPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TestRoomPageModule\n\n\n\ncluster_TestRoomPageModule_declarations\n\n\n\n\nTestRoomPage\n\nTestRoomPage\n\n\n\nTestRoomPageModule\n\nTestRoomPageModule\n\nTestRoomPageModule -->\n\nTestRoomPage->TestRoomPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/test-room/test-room.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TestRoomPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TestRoomPage } from './test-room.page';\nimport { MarkdownModule } from 'ngx-markdown';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TestRoomPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MarkdownModule.forChild(),\n    RouterModule.forChild(routes)\n  ],\n  declarations: [TestRoomPage]\n})\nexport class TestRoomPageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeService.html":{"url":"injectables/TimeService.html","title":"injectable - TimeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/time.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elapsedTime\n                            \n                            \n                                    Private\n                                interval\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getTime\n                            \n                            \n                                    Public\n                                resetTimer\n                            \n                            \n                                    Public\n                                startTimer\n                            \n                            \n                                    Public\n                                stopTimer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/time.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/time.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resetTimer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetTimer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/time.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            startTimer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startTimer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/time.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stopTimer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stopTimer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/time.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            elapsedTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/time.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            interval\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/services/time.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimeService {\n\n  constructor() { }\n  private elapsedTime = 0;\n  private interval;\n  public startTimer() {\n    this.interval = setInterval(() => {\n      this.elapsedTime++;\n    }, 1000);\n  }\n  public stopTimer() {\n    clearInterval(this.interval);\n  }\n  public resetTimer() {\n    this.elapsedTime = 0;\n  }\n  public getTime(): number {\n    return this.elapsedTime;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrainingPage.html":{"url":"components/TrainingPage.html","title":"component - TrainingPage","body":"\n                   \n\n\n\n\n\n  Components\n  TrainingPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/training/training.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-training\n            \n\n            \n                styleUrls\n                ./training.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./training.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allowStart\n                            \n                            \n                                catTree\n                            \n                            \n                                currentImage\n                            \n                            \n                                imageLink\n                            \n                            \n                                loadingPercent\n                            \n                            \n                                majorCatList\n                            \n                            \n                                majorCatRef\n                            \n                            \n                                maxImage\n                            \n                            \n                                minorCatList\n                            \n                            \n                                minorCatRef\n                            \n                            \n                                questionList\n                            \n                            \n                                questions\n                            \n                            \n                                selectedQuestion\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getQuestionForFE\n                            \n                            \n                                getQuestionForIP\n                            \n                            \n                                loadImageURL\n                            \n                            \n                                loadQuestion\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onSelected\n                            \n                            \n                                    Async\n                                openInfo\n                            \n                            \n                                prepareStart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(db: AngularFireDatabase, storage: AngularFireStorage, router: Router, modalController: ModalController, dataService: DataService, categoryService: CategoryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/training/training.page.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    AngularFireStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getQuestionForFE\n                        \n                        \n                    \n                \n            \n            \n                \ngetQuestionForFE(major, minor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/training/training.page.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    major\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    minor\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getQuestionForIP\n                        \n                        \n                    \n                \n            \n            \n                \ngetQuestionForIP(major, minor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/training/training.page.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    major\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    minor\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadImageURL\n                        \n                        \n                    \n                \n            \n            \n                \nloadImageURL()\n                \n            \n\n\n            \n                \n                    Defined in src/app/training/training.page.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadQuestion\n                        \n                        \n                    \n                \n            \n            \n                \nloadQuestion()\n                \n            \n\n\n            \n                \n                    Defined in src/app/training/training.page.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/training/training.page.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \nonSelected()\n                \n            \n\n\n            \n                \n                    Defined in src/app/training/training.page.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            openInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openInfo(i)\n                \n            \n\n\n            \n                \n                    Defined in src/app/training/training.page.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            prepareStart\n                        \n                        \n                    \n                \n            \n            \n                \nprepareStart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/training/training.page.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allowStart\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/training/training.page.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            catTree\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/training/training.page.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/training/training.page.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/training/training.page.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingPercent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/training/training.page.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            majorCatList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/training/training.page.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            majorCatRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AngularFireList\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/training/training.page.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/training/training.page.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minorCatList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/training/training.page.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minorCatRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/training/training.page.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/training/training.page.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/training/training.page.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedQuestion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/training/training.page.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\nimport { Observable, ObjectUnsubscribedError } from 'rxjs';\nimport { map } from 'rxjs/operators'\nimport { AngularFireStorage } from '@angular/fire/storage';\nimport { DataService } from '../data.service';\nimport { Router } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { CategoryService } from '../services/category.service';\nimport { CatInfoModalPage } from '../cat-info-modal/cat-info-modal.page';\n\n@Component({\n  selector: 'app-training',\n  templateUrl: './training.page.html',\n  styleUrls: ['./training.page.scss'],\n})\nexport class TrainingPage implements OnInit {\n\n  constructor(private db: AngularFireDatabase,\n    private storage: AngularFireStorage,\n    private router: Router,\n    private modalController: ModalController,\n    private dataService: DataService,\n    //private questionService: QuestionService,\n    private categoryService: CategoryService\n  ) { }\n\n  majorCatRef: AngularFireList;\n  majorCatList: Observable;\n\n  minorCatRef: Array>;\n  minorCatList: Array>;\n\n  questionList: Observable;\n  questions: any;\n  selectedQuestion: Array;\n\n  imageLink: Array;\n\n  allowStart = false;\n  loadingPercent = 0;\n  maxImage = 0;\n  currentImage = 0;\n\n  catTree: Array>;\n\n  async ngOnInit() {\n    this.majorCatRef = this.db.list('titles');\n    this.majorCatList = this.majorCatRef.snapshotChanges().pipe(\n      map(changes =>\n        changes.map(c => ({ key: c.payload.key, ...c.payload.val() }))\n      )\n    );\n\n    this.majorCatList.subscribe(snapshot => {\n      this.minorCatRef = new Array>();\n      this.minorCatList = new Array>();\n      this.catTree = new Array>();\n      snapshot.forEach(value => {\n        const ref = this.db.list('titles/' + value.key);\n        const val = ref.snapshotChanges().pipe(\n          map(changes =>\n            changes.map(c => ({ ...c.payload.val() }))\n          )\n        );\n        this.minorCatRef.push(ref);\n        this.minorCatList.push(val);\n\n        let newArr = new Array();\n        for (let i = 0; i ();\n    this.loadImageURL();\n    this.loadQuestion();\n\n  }\n\n  loadImageURL() {\n    this.imageLink = new Array();\n    this.db.list('imgs/').snapshotChanges().subscribe((snapshot) => {\n      this.maxImage = snapshot.length;\n      let cur = 0;\n      snapshot.forEach((value) => {\n        this.storage.ref('ip_imgs/' + value.payload.val()).getDownloadURL().subscribe((val) => {\n          this.imageLink.push({ name: value.payload.val(), link: val });\n          cur++;\n          this.loadingPercent = cur / this.maxImage;\n          this.dataService.imageLink = this.imageLink;\n        });\n      });\n    })\n  }\n\n  loadQuestion() {\n    this.questionList = this.db.list('questions/').snapshotChanges().pipe(\n      map(changes =>\n        changes.map(c => ({ key: c.payload.key, ...c.payload.val() }))\n      )\n    );\n\n    this.questionList.subscribe((value) => {\n      this.questions = value;\n      console.log(this.questions);\n    })\n\n\n  }\n\n  onSelected() {\n    this.dataService.catMatrix = this.catTree;\n    this.selectedQuestion.splice(0, this.selectedQuestion.length);\n    for (let i = 0; i  10 && this.loadingPercent == 1;\n    this.dataService.selectedQuestions = this.selectedQuestion;\n  }\n\n  getQuestionForFE(major, minor) {\n    let questList = new Array();\n    let majorKeys = Object.keys(this.questions);\n    let minorKeys = Object.keys(this.questions[majorKeys[major]]);\n    let subKey = Object.keys(this.questions[majorKeys[major]][minorKeys[minor]]);\n    console.log(majorKeys);\n    console.log(minorKeys);\n    console.log(subKey);\n    if (subKey != undefined) {\n      for (let i = 0; i ();\n    let majorKeys = Object.keys(this.questions);\n    let minorKeys = Object.keys(this.questions[majorKeys[major]]);\n    let subKey = Object.keys(this.questions[major][minorKeys[minor]]);\n\n    if (subKey != undefined) {\n      for (let i = 0; i \n    \n\n    \n        \n  \n    Training\n    Start\n  \n  \n\n\n\n  \n    \n    \n      {{majorCat.title}}\n    \n\n    \n      Info\n      Progress\n    \n\n    \n      \n        \n          \n            \n              {{minorCat.title}}\n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./training.page.scss\n                \n                .cat-card ion-img {\n  max-height: 35vh;\n  overflow: hidden;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Training    Start                    {{majorCat.title}}              Info      Progress                                                          {{minorCat.title}}                                                        '\n    var COMPONENTS = [{'name': 'AccountPage', 'selector': 'app-account'},{'name': 'AdPagePage', 'selector': 'app-ad-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BeforeStartPage', 'selector': 'app-before-start'},{'name': 'CatInfoModalPage', 'selector': 'app-cat-info-modal'},{'name': 'ChallengePage', 'selector': 'app-challenge'},{'name': 'EditProfileModalPage', 'selector': 'app-edit-profile-modal'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'SignUpPage', 'selector': 'app-sign-up'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TestResultPage', 'selector': 'app-test-result'},{'name': 'TestRoomPage', 'selector': 'app-test-room'},{'name': 'TrainingPage', 'selector': 'app-training'},{'name': 'VerifyEmailPage', 'selector': 'app-verify-email'},{'name': 'WelcomePage', 'selector': 'app-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TrainingPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrainingPageModule.html":{"url":"modules/TrainingPageModule.html","title":"module - TrainingPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TrainingPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TrainingPageModule\n\n\n\ncluster_TrainingPageModule_declarations\n\n\n\n\nTrainingPage\n\nTrainingPage\n\n\n\nTrainingPageModule\n\nTrainingPageModule\n\nTrainingPageModule -->\n\nTrainingPage->TrainingPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/training/training.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TrainingPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TrainingPage } from './training.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TrainingPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [TrainingPage]\n})\nexport class TrainingPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCredit.html":{"url":"classes/UpdateCredit.html","title":"class - UpdateCredit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCredit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/user.actions.ts:142\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:143\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UPDATE_CREDIT\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:142\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[User] Login';\nexport const LOGIN_SUCCESS = '[User] Login -> Success';\nexport const LOGIN_FAILED = '[User] Login -> Failed';\nexport const LOGIN_G = '[User] Login Google';\nexport const LOGIN_G_SUCCESS = '[User] Login Google -> Success';\nexport const LOGIN_G_FAILED = '[User] Login Google -> Failed';\nexport const SIGNIN = '[User] SignIn';\nexport const SIGNIN_SUCCESS = '[User] Sign in -> Success';\nexport const SIGNIN_FAILED = '[User] Sign in -> Failed';\nexport const SIGNOUT = '[User] Sign out';\nexport const UPDATEINFO = '[User] Update info';\nexport const GETINFO = '[User] Get info';\nexport const GETINFO_SUCCESS = '[User] Get info -> Success';\nexport const GETINFO_FAILED = '[User] Get info -> Failed';\nexport const EDITINFO = '[User] EditInfo';\nexport const EDITINFO_SUCCESS = '[User] EditInfo -> Success';\nexport const EDITINFO_FAILED = '[User] EditInfo -> Failed';\nexport const FORGOT_PASSWORD = '[User] Forgot password';\nexport const FORGOT_PASSWORD_SENT_SUCCESS = '[User] Forgot password -> Sent Success';\nexport const FORGOT_PASSWORD_SENT_FAILED = '[User] Forgot password -> Sent Failed';\nexport const INIT_INFO = '[User] Init information';\nexport const UPDATE_CREDIT = '[User] Update credit';\nexport const UPDATE_CREDIT_SUCCESS = \"[User] Update credit -> Success\";\nexport const UPDATE_CREDIT_FAILED = \"[User] Update credit -> Failed\";\nexport const PAY_CREDITS = '[User] Pay credits';\nexport const PAY_CREDITS_SUCCESS = '[User] Pay credits -> Success';\nexport const REMOVE_CREDITS = '[User] Remove credits';\nexport const NO_MORE_CREDITS = '[User] No more credits';\nexport const UPDATE_LOG = \"[User] Update log\";\nexport const UPDATE_LOG_SUCCESS = \"[User] Update log -> Success\";\nexport const UPDATE_LOG_FAILED = \"[User] Update log -> Failed\";\n\n\nexport class Login implements Action {\n    readonly type = LOGIN;\n    constructor(public payload: { email: string, password: string }) { }\n}\n\nexport class LoginSuccess implements Action {\n    readonly type = LOGIN_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginFailed implements Action {\n    readonly type = LOGIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class LoginG implements Action {\n    readonly type = LOGIN_G;\n    constructor() { }\n}\n\nexport class LoginGSuccess implements Action {\n    readonly type = LOGIN_G_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginGFailed implements Action {\n    readonly type = LOGIN_G_FAILED;\n}\n\nexport class SignOut implements Action {\n    readonly type = SIGNOUT;\n    constructor() { }\n}\n\nexport class SignIn implements Action {\n    readonly type = SIGNIN;\n    constructor(public payload: { email: string, password: string, retypePassword: string, agreeTerm: boolean }) { }\n}\n\nexport class SignInSuccess implements Action {\n    readonly type = SIGNIN_SUCCESS;\n    constructor() { }\n}\n\nexport class SignInFailed implements Action {\n    readonly type = SIGNIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class UpdateInfo implements Action {\n    readonly type = UPDATEINFO;\n    constructor(public payload: { name: string, address: string, phone: string }) { }\n}\n\nexport class GetInfo implements Action {\n    readonly type = GETINFO;\n    constructor(public payload: { email: string, annonymous: boolean }) { }\n}\n\nexport class GetInfoSuccess implements Action {\n    readonly type = GETINFO_SUCCESS;\n    constructor(public payload: { data: any }) { }\n}\n\nexport class GetInfoFailed implements Action {\n    readonly type = GETINFO_FAILED;\n    constructor() { }\n}\n\nexport class EditInfo implements Action {\n    readonly type = EDITINFO;\n    constructor(public payload: { newName: string, newPhone: string }) { }\n}\n\nexport class EditInfoSuccess implements Action {\n    readonly type = EDITINFO_SUCCESS;\n    constructor() { }\n}\n\nexport class EditInfoFailed implements Action {\n    readonly type = EDITINFO_FAILED;\n    constructor() { }\n}\n\nexport class ForgotPassword implements Action {\n    readonly type = FORGOT_PASSWORD;\n    constructor(public payload: { email: string }) { }\n}\n\nexport class ForgotPasswordSentSuccess implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_SUCCESS;\n    constructor() { }\n}\n\nexport class ForgotPasswordSentFailed implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_FAILED;\n    constructor() { }\n}\n\nexport class InitInfo implements Action {\n    readonly type = INIT_INFO;\n    constructor(public payload: { userEmail: string }) { }\n}\n\nexport class UpdateCredit implements Action {\n    readonly type = UPDATE_CREDIT;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class UpdateCreditSuccess implements Action {\n    readonly type = UPDATE_CREDIT_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateCreditFailed implements Action {\n    readonly type = UPDATE_CREDIT_FAILED;\n    constructor() { }\n}\n\nexport class PayCredits implements Action {\n    readonly type = PAY_CREDITS;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class PayCreditsSuccess implements Action {\n    readonly type = PAY_CREDITS_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLog implements Action {\n    readonly type = UPDATE_LOG;\n    constructor(public payload: { data: any, timestamp: any, log: any }) { }\n}\n\nexport class UpdateLogSuccess implements Action {\n    readonly type = UPDATE_LOG_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLogFailed implements Action {\n    readonly type = UPDATE_LOG_FAILED;\n    constructor() { }\n}\n\n\nexport type All\n    = Login\n    | LoginSuccess\n    | LoginFailed\n    | LoginG\n    | LoginGSuccess\n    | LoginGFailed\n    | UpdateInfo\n    | GetInfo\n    | GetInfoSuccess\n    | GetInfoFailed\n    | EditInfo\n    | EditInfoSuccess\n    | EditInfoFailed\n    | SignIn\n    | SignInSuccess\n    | SignInFailed\n    | SignOut\n    | ForgotPassword\n    | ForgotPasswordSentSuccess\n    | ForgotPasswordSentFailed\n    | InitInfo\n    | UpdateCredit\n    | UpdateCreditSuccess\n    | UpdateCreditFailed\n    | PayCredits\n    | PayCreditsSuccess\n    | UpdateLog\n    | UpdateLogSuccess\n    | UpdateLogFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCreditFailed.html":{"url":"classes/UpdateCreditFailed.html","title":"class - UpdateCreditFailed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCreditFailed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/user.actions.ts:152\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UPDATE_CREDIT_FAILED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:152\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[User] Login';\nexport const LOGIN_SUCCESS = '[User] Login -> Success';\nexport const LOGIN_FAILED = '[User] Login -> Failed';\nexport const LOGIN_G = '[User] Login Google';\nexport const LOGIN_G_SUCCESS = '[User] Login Google -> Success';\nexport const LOGIN_G_FAILED = '[User] Login Google -> Failed';\nexport const SIGNIN = '[User] SignIn';\nexport const SIGNIN_SUCCESS = '[User] Sign in -> Success';\nexport const SIGNIN_FAILED = '[User] Sign in -> Failed';\nexport const SIGNOUT = '[User] Sign out';\nexport const UPDATEINFO = '[User] Update info';\nexport const GETINFO = '[User] Get info';\nexport const GETINFO_SUCCESS = '[User] Get info -> Success';\nexport const GETINFO_FAILED = '[User] Get info -> Failed';\nexport const EDITINFO = '[User] EditInfo';\nexport const EDITINFO_SUCCESS = '[User] EditInfo -> Success';\nexport const EDITINFO_FAILED = '[User] EditInfo -> Failed';\nexport const FORGOT_PASSWORD = '[User] Forgot password';\nexport const FORGOT_PASSWORD_SENT_SUCCESS = '[User] Forgot password -> Sent Success';\nexport const FORGOT_PASSWORD_SENT_FAILED = '[User] Forgot password -> Sent Failed';\nexport const INIT_INFO = '[User] Init information';\nexport const UPDATE_CREDIT = '[User] Update credit';\nexport const UPDATE_CREDIT_SUCCESS = \"[User] Update credit -> Success\";\nexport const UPDATE_CREDIT_FAILED = \"[User] Update credit -> Failed\";\nexport const PAY_CREDITS = '[User] Pay credits';\nexport const PAY_CREDITS_SUCCESS = '[User] Pay credits -> Success';\nexport const REMOVE_CREDITS = '[User] Remove credits';\nexport const NO_MORE_CREDITS = '[User] No more credits';\nexport const UPDATE_LOG = \"[User] Update log\";\nexport const UPDATE_LOG_SUCCESS = \"[User] Update log -> Success\";\nexport const UPDATE_LOG_FAILED = \"[User] Update log -> Failed\";\n\n\nexport class Login implements Action {\n    readonly type = LOGIN;\n    constructor(public payload: { email: string, password: string }) { }\n}\n\nexport class LoginSuccess implements Action {\n    readonly type = LOGIN_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginFailed implements Action {\n    readonly type = LOGIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class LoginG implements Action {\n    readonly type = LOGIN_G;\n    constructor() { }\n}\n\nexport class LoginGSuccess implements Action {\n    readonly type = LOGIN_G_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginGFailed implements Action {\n    readonly type = LOGIN_G_FAILED;\n}\n\nexport class SignOut implements Action {\n    readonly type = SIGNOUT;\n    constructor() { }\n}\n\nexport class SignIn implements Action {\n    readonly type = SIGNIN;\n    constructor(public payload: { email: string, password: string, retypePassword: string, agreeTerm: boolean }) { }\n}\n\nexport class SignInSuccess implements Action {\n    readonly type = SIGNIN_SUCCESS;\n    constructor() { }\n}\n\nexport class SignInFailed implements Action {\n    readonly type = SIGNIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class UpdateInfo implements Action {\n    readonly type = UPDATEINFO;\n    constructor(public payload: { name: string, address: string, phone: string }) { }\n}\n\nexport class GetInfo implements Action {\n    readonly type = GETINFO;\n    constructor(public payload: { email: string, annonymous: boolean }) { }\n}\n\nexport class GetInfoSuccess implements Action {\n    readonly type = GETINFO_SUCCESS;\n    constructor(public payload: { data: any }) { }\n}\n\nexport class GetInfoFailed implements Action {\n    readonly type = GETINFO_FAILED;\n    constructor() { }\n}\n\nexport class EditInfo implements Action {\n    readonly type = EDITINFO;\n    constructor(public payload: { newName: string, newPhone: string }) { }\n}\n\nexport class EditInfoSuccess implements Action {\n    readonly type = EDITINFO_SUCCESS;\n    constructor() { }\n}\n\nexport class EditInfoFailed implements Action {\n    readonly type = EDITINFO_FAILED;\n    constructor() { }\n}\n\nexport class ForgotPassword implements Action {\n    readonly type = FORGOT_PASSWORD;\n    constructor(public payload: { email: string }) { }\n}\n\nexport class ForgotPasswordSentSuccess implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_SUCCESS;\n    constructor() { }\n}\n\nexport class ForgotPasswordSentFailed implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_FAILED;\n    constructor() { }\n}\n\nexport class InitInfo implements Action {\n    readonly type = INIT_INFO;\n    constructor(public payload: { userEmail: string }) { }\n}\n\nexport class UpdateCredit implements Action {\n    readonly type = UPDATE_CREDIT;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class UpdateCreditSuccess implements Action {\n    readonly type = UPDATE_CREDIT_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateCreditFailed implements Action {\n    readonly type = UPDATE_CREDIT_FAILED;\n    constructor() { }\n}\n\nexport class PayCredits implements Action {\n    readonly type = PAY_CREDITS;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class PayCreditsSuccess implements Action {\n    readonly type = PAY_CREDITS_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLog implements Action {\n    readonly type = UPDATE_LOG;\n    constructor(public payload: { data: any, timestamp: any, log: any }) { }\n}\n\nexport class UpdateLogSuccess implements Action {\n    readonly type = UPDATE_LOG_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLogFailed implements Action {\n    readonly type = UPDATE_LOG_FAILED;\n    constructor() { }\n}\n\n\nexport type All\n    = Login\n    | LoginSuccess\n    | LoginFailed\n    | LoginG\n    | LoginGSuccess\n    | LoginGFailed\n    | UpdateInfo\n    | GetInfo\n    | GetInfoSuccess\n    | GetInfoFailed\n    | EditInfo\n    | EditInfoSuccess\n    | EditInfoFailed\n    | SignIn\n    | SignInSuccess\n    | SignInFailed\n    | SignOut\n    | ForgotPassword\n    | ForgotPasswordSentSuccess\n    | ForgotPasswordSentFailed\n    | InitInfo\n    | UpdateCredit\n    | UpdateCreditSuccess\n    | UpdateCreditFailed\n    | PayCredits\n    | PayCreditsSuccess\n    | UpdateLog\n    | UpdateLogSuccess\n    | UpdateLogFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCreditSuccess.html":{"url":"classes/UpdateCreditSuccess.html","title":"class - UpdateCreditSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCreditSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/user.actions.ts:147\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UPDATE_CREDIT_SUCCESS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:147\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[User] Login';\nexport const LOGIN_SUCCESS = '[User] Login -> Success';\nexport const LOGIN_FAILED = '[User] Login -> Failed';\nexport const LOGIN_G = '[User] Login Google';\nexport const LOGIN_G_SUCCESS = '[User] Login Google -> Success';\nexport const LOGIN_G_FAILED = '[User] Login Google -> Failed';\nexport const SIGNIN = '[User] SignIn';\nexport const SIGNIN_SUCCESS = '[User] Sign in -> Success';\nexport const SIGNIN_FAILED = '[User] Sign in -> Failed';\nexport const SIGNOUT = '[User] Sign out';\nexport const UPDATEINFO = '[User] Update info';\nexport const GETINFO = '[User] Get info';\nexport const GETINFO_SUCCESS = '[User] Get info -> Success';\nexport const GETINFO_FAILED = '[User] Get info -> Failed';\nexport const EDITINFO = '[User] EditInfo';\nexport const EDITINFO_SUCCESS = '[User] EditInfo -> Success';\nexport const EDITINFO_FAILED = '[User] EditInfo -> Failed';\nexport const FORGOT_PASSWORD = '[User] Forgot password';\nexport const FORGOT_PASSWORD_SENT_SUCCESS = '[User] Forgot password -> Sent Success';\nexport const FORGOT_PASSWORD_SENT_FAILED = '[User] Forgot password -> Sent Failed';\nexport const INIT_INFO = '[User] Init information';\nexport const UPDATE_CREDIT = '[User] Update credit';\nexport const UPDATE_CREDIT_SUCCESS = \"[User] Update credit -> Success\";\nexport const UPDATE_CREDIT_FAILED = \"[User] Update credit -> Failed\";\nexport const PAY_CREDITS = '[User] Pay credits';\nexport const PAY_CREDITS_SUCCESS = '[User] Pay credits -> Success';\nexport const REMOVE_CREDITS = '[User] Remove credits';\nexport const NO_MORE_CREDITS = '[User] No more credits';\nexport const UPDATE_LOG = \"[User] Update log\";\nexport const UPDATE_LOG_SUCCESS = \"[User] Update log -> Success\";\nexport const UPDATE_LOG_FAILED = \"[User] Update log -> Failed\";\n\n\nexport class Login implements Action {\n    readonly type = LOGIN;\n    constructor(public payload: { email: string, password: string }) { }\n}\n\nexport class LoginSuccess implements Action {\n    readonly type = LOGIN_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginFailed implements Action {\n    readonly type = LOGIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class LoginG implements Action {\n    readonly type = LOGIN_G;\n    constructor() { }\n}\n\nexport class LoginGSuccess implements Action {\n    readonly type = LOGIN_G_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginGFailed implements Action {\n    readonly type = LOGIN_G_FAILED;\n}\n\nexport class SignOut implements Action {\n    readonly type = SIGNOUT;\n    constructor() { }\n}\n\nexport class SignIn implements Action {\n    readonly type = SIGNIN;\n    constructor(public payload: { email: string, password: string, retypePassword: string, agreeTerm: boolean }) { }\n}\n\nexport class SignInSuccess implements Action {\n    readonly type = SIGNIN_SUCCESS;\n    constructor() { }\n}\n\nexport class SignInFailed implements Action {\n    readonly type = SIGNIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class UpdateInfo implements Action {\n    readonly type = UPDATEINFO;\n    constructor(public payload: { name: string, address: string, phone: string }) { }\n}\n\nexport class GetInfo implements Action {\n    readonly type = GETINFO;\n    constructor(public payload: { email: string, annonymous: boolean }) { }\n}\n\nexport class GetInfoSuccess implements Action {\n    readonly type = GETINFO_SUCCESS;\n    constructor(public payload: { data: any }) { }\n}\n\nexport class GetInfoFailed implements Action {\n    readonly type = GETINFO_FAILED;\n    constructor() { }\n}\n\nexport class EditInfo implements Action {\n    readonly type = EDITINFO;\n    constructor(public payload: { newName: string, newPhone: string }) { }\n}\n\nexport class EditInfoSuccess implements Action {\n    readonly type = EDITINFO_SUCCESS;\n    constructor() { }\n}\n\nexport class EditInfoFailed implements Action {\n    readonly type = EDITINFO_FAILED;\n    constructor() { }\n}\n\nexport class ForgotPassword implements Action {\n    readonly type = FORGOT_PASSWORD;\n    constructor(public payload: { email: string }) { }\n}\n\nexport class ForgotPasswordSentSuccess implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_SUCCESS;\n    constructor() { }\n}\n\nexport class ForgotPasswordSentFailed implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_FAILED;\n    constructor() { }\n}\n\nexport class InitInfo implements Action {\n    readonly type = INIT_INFO;\n    constructor(public payload: { userEmail: string }) { }\n}\n\nexport class UpdateCredit implements Action {\n    readonly type = UPDATE_CREDIT;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class UpdateCreditSuccess implements Action {\n    readonly type = UPDATE_CREDIT_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateCreditFailed implements Action {\n    readonly type = UPDATE_CREDIT_FAILED;\n    constructor() { }\n}\n\nexport class PayCredits implements Action {\n    readonly type = PAY_CREDITS;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class PayCreditsSuccess implements Action {\n    readonly type = PAY_CREDITS_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLog implements Action {\n    readonly type = UPDATE_LOG;\n    constructor(public payload: { data: any, timestamp: any, log: any }) { }\n}\n\nexport class UpdateLogSuccess implements Action {\n    readonly type = UPDATE_LOG_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLogFailed implements Action {\n    readonly type = UPDATE_LOG_FAILED;\n    constructor() { }\n}\n\n\nexport type All\n    = Login\n    | LoginSuccess\n    | LoginFailed\n    | LoginG\n    | LoginGSuccess\n    | LoginGFailed\n    | UpdateInfo\n    | GetInfo\n    | GetInfoSuccess\n    | GetInfoFailed\n    | EditInfo\n    | EditInfoSuccess\n    | EditInfoFailed\n    | SignIn\n    | SignInSuccess\n    | SignInFailed\n    | SignOut\n    | ForgotPassword\n    | ForgotPasswordSentSuccess\n    | ForgotPasswordSentFailed\n    | InitInfo\n    | UpdateCredit\n    | UpdateCreditSuccess\n    | UpdateCreditFailed\n    | PayCredits\n    | PayCreditsSuccess\n    | UpdateLog\n    | UpdateLogSuccess\n    | UpdateLogFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateGeneratedLog.html":{"url":"classes/UpdateGeneratedLog.html","title":"class - UpdateGeneratedLog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateGeneratedLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/history.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/history.action.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/history.action.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UPDATE_GENERATED_LOG\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/history.action.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const FETCH = \"[History] Fetch\";\nexport const FETCH_SUCCESS = \"[History] Fetch Success\";\nexport const FETCH_GENERATED_LOG = \"[History] Fetch generated log\";\nexport const FETCH_GENERATED_LOG_SUCCESS = \"[History] Fetch generated log -> Success\";\nexport const UPDATE_GENERATED_LOG = \"[History] Update generated log\";\nexport const UPDATE_GENERATED_LOG_SUCCESS = \"[History] Update generated log -> Success\";\nexport const UPDATE_GENERATED_LOG_FAILED = \"[History] Update generated log -> Failed\";\n\nexport class Fetch implements Action {\n    readonly type = FETCH;\n    constructor() { }\n}\n\nexport class FetchSuccess implements Action {\n    readonly type = FETCH_SUCCESS;\n    constructor(public payload: { log: any }) { }\n}\n\nexport class FetchGeneratedLog implements Action {\n    readonly type = FETCH_GENERATED_LOG;\n    constructor() { }\n}\n\nexport class FetchGeneratedLogSuccess implements Action {\n    readonly type = FETCH_GENERATED_LOG_SUCCESS;\n    constructor(public payload: { generated: any }) { }\n}\n\nexport class UpdateGeneratedLog implements Action {\n    readonly type = UPDATE_GENERATED_LOG;\n    constructor(public payload: { major: number, minor: number, questionID: string }) { }\n}\n\nexport class UpdateGeneratedLogSuccess implements Action {\n    readonly type = UPDATE_GENERATED_LOG_SUCCESS;\n    constructor() { }\n}\n\n\nexport type All = Fetch\n    | FetchSuccess\n    | FetchGeneratedLog\n    | FetchGeneratedLogSuccess\n    | UpdateGeneratedLog\n    | UpdateGeneratedLogSuccess;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateGeneratedLogSuccess.html":{"url":"classes/UpdateGeneratedLogSuccess.html","title":"class - UpdateGeneratedLogSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateGeneratedLogSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/history.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/history.action.ts:37\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UPDATE_GENERATED_LOG_SUCCESS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/history.action.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const FETCH = \"[History] Fetch\";\nexport const FETCH_SUCCESS = \"[History] Fetch Success\";\nexport const FETCH_GENERATED_LOG = \"[History] Fetch generated log\";\nexport const FETCH_GENERATED_LOG_SUCCESS = \"[History] Fetch generated log -> Success\";\nexport const UPDATE_GENERATED_LOG = \"[History] Update generated log\";\nexport const UPDATE_GENERATED_LOG_SUCCESS = \"[History] Update generated log -> Success\";\nexport const UPDATE_GENERATED_LOG_FAILED = \"[History] Update generated log -> Failed\";\n\nexport class Fetch implements Action {\n    readonly type = FETCH;\n    constructor() { }\n}\n\nexport class FetchSuccess implements Action {\n    readonly type = FETCH_SUCCESS;\n    constructor(public payload: { log: any }) { }\n}\n\nexport class FetchGeneratedLog implements Action {\n    readonly type = FETCH_GENERATED_LOG;\n    constructor() { }\n}\n\nexport class FetchGeneratedLogSuccess implements Action {\n    readonly type = FETCH_GENERATED_LOG_SUCCESS;\n    constructor(public payload: { generated: any }) { }\n}\n\nexport class UpdateGeneratedLog implements Action {\n    readonly type = UPDATE_GENERATED_LOG;\n    constructor(public payload: { major: number, minor: number, questionID: string }) { }\n}\n\nexport class UpdateGeneratedLogSuccess implements Action {\n    readonly type = UPDATE_GENERATED_LOG_SUCCESS;\n    constructor() { }\n}\n\n\nexport type All = Fetch\n    | FetchSuccess\n    | FetchGeneratedLog\n    | FetchGeneratedLogSuccess\n    | UpdateGeneratedLog\n    | UpdateGeneratedLogSuccess;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateInfo.html":{"url":"classes/UpdateInfo.html","title":"class - UpdateInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/user.actions.ts:87\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UPDATEINFO\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:87\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[User] Login';\nexport const LOGIN_SUCCESS = '[User] Login -> Success';\nexport const LOGIN_FAILED = '[User] Login -> Failed';\nexport const LOGIN_G = '[User] Login Google';\nexport const LOGIN_G_SUCCESS = '[User] Login Google -> Success';\nexport const LOGIN_G_FAILED = '[User] Login Google -> Failed';\nexport const SIGNIN = '[User] SignIn';\nexport const SIGNIN_SUCCESS = '[User] Sign in -> Success';\nexport const SIGNIN_FAILED = '[User] Sign in -> Failed';\nexport const SIGNOUT = '[User] Sign out';\nexport const UPDATEINFO = '[User] Update info';\nexport const GETINFO = '[User] Get info';\nexport const GETINFO_SUCCESS = '[User] Get info -> Success';\nexport const GETINFO_FAILED = '[User] Get info -> Failed';\nexport const EDITINFO = '[User] EditInfo';\nexport const EDITINFO_SUCCESS = '[User] EditInfo -> Success';\nexport const EDITINFO_FAILED = '[User] EditInfo -> Failed';\nexport const FORGOT_PASSWORD = '[User] Forgot password';\nexport const FORGOT_PASSWORD_SENT_SUCCESS = '[User] Forgot password -> Sent Success';\nexport const FORGOT_PASSWORD_SENT_FAILED = '[User] Forgot password -> Sent Failed';\nexport const INIT_INFO = '[User] Init information';\nexport const UPDATE_CREDIT = '[User] Update credit';\nexport const UPDATE_CREDIT_SUCCESS = \"[User] Update credit -> Success\";\nexport const UPDATE_CREDIT_FAILED = \"[User] Update credit -> Failed\";\nexport const PAY_CREDITS = '[User] Pay credits';\nexport const PAY_CREDITS_SUCCESS = '[User] Pay credits -> Success';\nexport const REMOVE_CREDITS = '[User] Remove credits';\nexport const NO_MORE_CREDITS = '[User] No more credits';\nexport const UPDATE_LOG = \"[User] Update log\";\nexport const UPDATE_LOG_SUCCESS = \"[User] Update log -> Success\";\nexport const UPDATE_LOG_FAILED = \"[User] Update log -> Failed\";\n\n\nexport class Login implements Action {\n    readonly type = LOGIN;\n    constructor(public payload: { email: string, password: string }) { }\n}\n\nexport class LoginSuccess implements Action {\n    readonly type = LOGIN_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginFailed implements Action {\n    readonly type = LOGIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class LoginG implements Action {\n    readonly type = LOGIN_G;\n    constructor() { }\n}\n\nexport class LoginGSuccess implements Action {\n    readonly type = LOGIN_G_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginGFailed implements Action {\n    readonly type = LOGIN_G_FAILED;\n}\n\nexport class SignOut implements Action {\n    readonly type = SIGNOUT;\n    constructor() { }\n}\n\nexport class SignIn implements Action {\n    readonly type = SIGNIN;\n    constructor(public payload: { email: string, password: string, retypePassword: string, agreeTerm: boolean }) { }\n}\n\nexport class SignInSuccess implements Action {\n    readonly type = SIGNIN_SUCCESS;\n    constructor() { }\n}\n\nexport class SignInFailed implements Action {\n    readonly type = SIGNIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class UpdateInfo implements Action {\n    readonly type = UPDATEINFO;\n    constructor(public payload: { name: string, address: string, phone: string }) { }\n}\n\nexport class GetInfo implements Action {\n    readonly type = GETINFO;\n    constructor(public payload: { email: string, annonymous: boolean }) { }\n}\n\nexport class GetInfoSuccess implements Action {\n    readonly type = GETINFO_SUCCESS;\n    constructor(public payload: { data: any }) { }\n}\n\nexport class GetInfoFailed implements Action {\n    readonly type = GETINFO_FAILED;\n    constructor() { }\n}\n\nexport class EditInfo implements Action {\n    readonly type = EDITINFO;\n    constructor(public payload: { newName: string, newPhone: string }) { }\n}\n\nexport class EditInfoSuccess implements Action {\n    readonly type = EDITINFO_SUCCESS;\n    constructor() { }\n}\n\nexport class EditInfoFailed implements Action {\n    readonly type = EDITINFO_FAILED;\n    constructor() { }\n}\n\nexport class ForgotPassword implements Action {\n    readonly type = FORGOT_PASSWORD;\n    constructor(public payload: { email: string }) { }\n}\n\nexport class ForgotPasswordSentSuccess implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_SUCCESS;\n    constructor() { }\n}\n\nexport class ForgotPasswordSentFailed implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_FAILED;\n    constructor() { }\n}\n\nexport class InitInfo implements Action {\n    readonly type = INIT_INFO;\n    constructor(public payload: { userEmail: string }) { }\n}\n\nexport class UpdateCredit implements Action {\n    readonly type = UPDATE_CREDIT;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class UpdateCreditSuccess implements Action {\n    readonly type = UPDATE_CREDIT_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateCreditFailed implements Action {\n    readonly type = UPDATE_CREDIT_FAILED;\n    constructor() { }\n}\n\nexport class PayCredits implements Action {\n    readonly type = PAY_CREDITS;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class PayCreditsSuccess implements Action {\n    readonly type = PAY_CREDITS_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLog implements Action {\n    readonly type = UPDATE_LOG;\n    constructor(public payload: { data: any, timestamp: any, log: any }) { }\n}\n\nexport class UpdateLogSuccess implements Action {\n    readonly type = UPDATE_LOG_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLogFailed implements Action {\n    readonly type = UPDATE_LOG_FAILED;\n    constructor() { }\n}\n\n\nexport type All\n    = Login\n    | LoginSuccess\n    | LoginFailed\n    | LoginG\n    | LoginGSuccess\n    | LoginGFailed\n    | UpdateInfo\n    | GetInfo\n    | GetInfoSuccess\n    | GetInfoFailed\n    | EditInfo\n    | EditInfoSuccess\n    | EditInfoFailed\n    | SignIn\n    | SignInSuccess\n    | SignInFailed\n    | SignOut\n    | ForgotPassword\n    | ForgotPasswordSentSuccess\n    | ForgotPasswordSentFailed\n    | InitInfo\n    | UpdateCredit\n    | UpdateCreditSuccess\n    | UpdateCreditFailed\n    | PayCredits\n    | PayCreditsSuccess\n    | UpdateLog\n    | UpdateLogSuccess\n    | UpdateLogFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateLog.html":{"url":"classes/UpdateLog.html","title":"class - UpdateLog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/user.actions.ts:167\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:168\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UPDATE_LOG\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:167\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[User] Login';\nexport const LOGIN_SUCCESS = '[User] Login -> Success';\nexport const LOGIN_FAILED = '[User] Login -> Failed';\nexport const LOGIN_G = '[User] Login Google';\nexport const LOGIN_G_SUCCESS = '[User] Login Google -> Success';\nexport const LOGIN_G_FAILED = '[User] Login Google -> Failed';\nexport const SIGNIN = '[User] SignIn';\nexport const SIGNIN_SUCCESS = '[User] Sign in -> Success';\nexport const SIGNIN_FAILED = '[User] Sign in -> Failed';\nexport const SIGNOUT = '[User] Sign out';\nexport const UPDATEINFO = '[User] Update info';\nexport const GETINFO = '[User] Get info';\nexport const GETINFO_SUCCESS = '[User] Get info -> Success';\nexport const GETINFO_FAILED = '[User] Get info -> Failed';\nexport const EDITINFO = '[User] EditInfo';\nexport const EDITINFO_SUCCESS = '[User] EditInfo -> Success';\nexport const EDITINFO_FAILED = '[User] EditInfo -> Failed';\nexport const FORGOT_PASSWORD = '[User] Forgot password';\nexport const FORGOT_PASSWORD_SENT_SUCCESS = '[User] Forgot password -> Sent Success';\nexport const FORGOT_PASSWORD_SENT_FAILED = '[User] Forgot password -> Sent Failed';\nexport const INIT_INFO = '[User] Init information';\nexport const UPDATE_CREDIT = '[User] Update credit';\nexport const UPDATE_CREDIT_SUCCESS = \"[User] Update credit -> Success\";\nexport const UPDATE_CREDIT_FAILED = \"[User] Update credit -> Failed\";\nexport const PAY_CREDITS = '[User] Pay credits';\nexport const PAY_CREDITS_SUCCESS = '[User] Pay credits -> Success';\nexport const REMOVE_CREDITS = '[User] Remove credits';\nexport const NO_MORE_CREDITS = '[User] No more credits';\nexport const UPDATE_LOG = \"[User] Update log\";\nexport const UPDATE_LOG_SUCCESS = \"[User] Update log -> Success\";\nexport const UPDATE_LOG_FAILED = \"[User] Update log -> Failed\";\n\n\nexport class Login implements Action {\n    readonly type = LOGIN;\n    constructor(public payload: { email: string, password: string }) { }\n}\n\nexport class LoginSuccess implements Action {\n    readonly type = LOGIN_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginFailed implements Action {\n    readonly type = LOGIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class LoginG implements Action {\n    readonly type = LOGIN_G;\n    constructor() { }\n}\n\nexport class LoginGSuccess implements Action {\n    readonly type = LOGIN_G_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginGFailed implements Action {\n    readonly type = LOGIN_G_FAILED;\n}\n\nexport class SignOut implements Action {\n    readonly type = SIGNOUT;\n    constructor() { }\n}\n\nexport class SignIn implements Action {\n    readonly type = SIGNIN;\n    constructor(public payload: { email: string, password: string, retypePassword: string, agreeTerm: boolean }) { }\n}\n\nexport class SignInSuccess implements Action {\n    readonly type = SIGNIN_SUCCESS;\n    constructor() { }\n}\n\nexport class SignInFailed implements Action {\n    readonly type = SIGNIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class UpdateInfo implements Action {\n    readonly type = UPDATEINFO;\n    constructor(public payload: { name: string, address: string, phone: string }) { }\n}\n\nexport class GetInfo implements Action {\n    readonly type = GETINFO;\n    constructor(public payload: { email: string, annonymous: boolean }) { }\n}\n\nexport class GetInfoSuccess implements Action {\n    readonly type = GETINFO_SUCCESS;\n    constructor(public payload: { data: any }) { }\n}\n\nexport class GetInfoFailed implements Action {\n    readonly type = GETINFO_FAILED;\n    constructor() { }\n}\n\nexport class EditInfo implements Action {\n    readonly type = EDITINFO;\n    constructor(public payload: { newName: string, newPhone: string }) { }\n}\n\nexport class EditInfoSuccess implements Action {\n    readonly type = EDITINFO_SUCCESS;\n    constructor() { }\n}\n\nexport class EditInfoFailed implements Action {\n    readonly type = EDITINFO_FAILED;\n    constructor() { }\n}\n\nexport class ForgotPassword implements Action {\n    readonly type = FORGOT_PASSWORD;\n    constructor(public payload: { email: string }) { }\n}\n\nexport class ForgotPasswordSentSuccess implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_SUCCESS;\n    constructor() { }\n}\n\nexport class ForgotPasswordSentFailed implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_FAILED;\n    constructor() { }\n}\n\nexport class InitInfo implements Action {\n    readonly type = INIT_INFO;\n    constructor(public payload: { userEmail: string }) { }\n}\n\nexport class UpdateCredit implements Action {\n    readonly type = UPDATE_CREDIT;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class UpdateCreditSuccess implements Action {\n    readonly type = UPDATE_CREDIT_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateCreditFailed implements Action {\n    readonly type = UPDATE_CREDIT_FAILED;\n    constructor() { }\n}\n\nexport class PayCredits implements Action {\n    readonly type = PAY_CREDITS;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class PayCreditsSuccess implements Action {\n    readonly type = PAY_CREDITS_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLog implements Action {\n    readonly type = UPDATE_LOG;\n    constructor(public payload: { data: any, timestamp: any, log: any }) { }\n}\n\nexport class UpdateLogSuccess implements Action {\n    readonly type = UPDATE_LOG_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLogFailed implements Action {\n    readonly type = UPDATE_LOG_FAILED;\n    constructor() { }\n}\n\n\nexport type All\n    = Login\n    | LoginSuccess\n    | LoginFailed\n    | LoginG\n    | LoginGSuccess\n    | LoginGFailed\n    | UpdateInfo\n    | GetInfo\n    | GetInfoSuccess\n    | GetInfoFailed\n    | EditInfo\n    | EditInfoSuccess\n    | EditInfoFailed\n    | SignIn\n    | SignInSuccess\n    | SignInFailed\n    | SignOut\n    | ForgotPassword\n    | ForgotPasswordSentSuccess\n    | ForgotPasswordSentFailed\n    | InitInfo\n    | UpdateCredit\n    | UpdateCreditSuccess\n    | UpdateCreditFailed\n    | PayCredits\n    | PayCreditsSuccess\n    | UpdateLog\n    | UpdateLogSuccess\n    | UpdateLogFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateLogFailed.html":{"url":"classes/UpdateLogFailed.html","title":"class - UpdateLogFailed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateLogFailed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/user.actions.ts:177\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UPDATE_LOG_FAILED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:177\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[User] Login';\nexport const LOGIN_SUCCESS = '[User] Login -> Success';\nexport const LOGIN_FAILED = '[User] Login -> Failed';\nexport const LOGIN_G = '[User] Login Google';\nexport const LOGIN_G_SUCCESS = '[User] Login Google -> Success';\nexport const LOGIN_G_FAILED = '[User] Login Google -> Failed';\nexport const SIGNIN = '[User] SignIn';\nexport const SIGNIN_SUCCESS = '[User] Sign in -> Success';\nexport const SIGNIN_FAILED = '[User] Sign in -> Failed';\nexport const SIGNOUT = '[User] Sign out';\nexport const UPDATEINFO = '[User] Update info';\nexport const GETINFO = '[User] Get info';\nexport const GETINFO_SUCCESS = '[User] Get info -> Success';\nexport const GETINFO_FAILED = '[User] Get info -> Failed';\nexport const EDITINFO = '[User] EditInfo';\nexport const EDITINFO_SUCCESS = '[User] EditInfo -> Success';\nexport const EDITINFO_FAILED = '[User] EditInfo -> Failed';\nexport const FORGOT_PASSWORD = '[User] Forgot password';\nexport const FORGOT_PASSWORD_SENT_SUCCESS = '[User] Forgot password -> Sent Success';\nexport const FORGOT_PASSWORD_SENT_FAILED = '[User] Forgot password -> Sent Failed';\nexport const INIT_INFO = '[User] Init information';\nexport const UPDATE_CREDIT = '[User] Update credit';\nexport const UPDATE_CREDIT_SUCCESS = \"[User] Update credit -> Success\";\nexport const UPDATE_CREDIT_FAILED = \"[User] Update credit -> Failed\";\nexport const PAY_CREDITS = '[User] Pay credits';\nexport const PAY_CREDITS_SUCCESS = '[User] Pay credits -> Success';\nexport const REMOVE_CREDITS = '[User] Remove credits';\nexport const NO_MORE_CREDITS = '[User] No more credits';\nexport const UPDATE_LOG = \"[User] Update log\";\nexport const UPDATE_LOG_SUCCESS = \"[User] Update log -> Success\";\nexport const UPDATE_LOG_FAILED = \"[User] Update log -> Failed\";\n\n\nexport class Login implements Action {\n    readonly type = LOGIN;\n    constructor(public payload: { email: string, password: string }) { }\n}\n\nexport class LoginSuccess implements Action {\n    readonly type = LOGIN_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginFailed implements Action {\n    readonly type = LOGIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class LoginG implements Action {\n    readonly type = LOGIN_G;\n    constructor() { }\n}\n\nexport class LoginGSuccess implements Action {\n    readonly type = LOGIN_G_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginGFailed implements Action {\n    readonly type = LOGIN_G_FAILED;\n}\n\nexport class SignOut implements Action {\n    readonly type = SIGNOUT;\n    constructor() { }\n}\n\nexport class SignIn implements Action {\n    readonly type = SIGNIN;\n    constructor(public payload: { email: string, password: string, retypePassword: string, agreeTerm: boolean }) { }\n}\n\nexport class SignInSuccess implements Action {\n    readonly type = SIGNIN_SUCCESS;\n    constructor() { }\n}\n\nexport class SignInFailed implements Action {\n    readonly type = SIGNIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class UpdateInfo implements Action {\n    readonly type = UPDATEINFO;\n    constructor(public payload: { name: string, address: string, phone: string }) { }\n}\n\nexport class GetInfo implements Action {\n    readonly type = GETINFO;\n    constructor(public payload: { email: string, annonymous: boolean }) { }\n}\n\nexport class GetInfoSuccess implements Action {\n    readonly type = GETINFO_SUCCESS;\n    constructor(public payload: { data: any }) { }\n}\n\nexport class GetInfoFailed implements Action {\n    readonly type = GETINFO_FAILED;\n    constructor() { }\n}\n\nexport class EditInfo implements Action {\n    readonly type = EDITINFO;\n    constructor(public payload: { newName: string, newPhone: string }) { }\n}\n\nexport class EditInfoSuccess implements Action {\n    readonly type = EDITINFO_SUCCESS;\n    constructor() { }\n}\n\nexport class EditInfoFailed implements Action {\n    readonly type = EDITINFO_FAILED;\n    constructor() { }\n}\n\nexport class ForgotPassword implements Action {\n    readonly type = FORGOT_PASSWORD;\n    constructor(public payload: { email: string }) { }\n}\n\nexport class ForgotPasswordSentSuccess implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_SUCCESS;\n    constructor() { }\n}\n\nexport class ForgotPasswordSentFailed implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_FAILED;\n    constructor() { }\n}\n\nexport class InitInfo implements Action {\n    readonly type = INIT_INFO;\n    constructor(public payload: { userEmail: string }) { }\n}\n\nexport class UpdateCredit implements Action {\n    readonly type = UPDATE_CREDIT;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class UpdateCreditSuccess implements Action {\n    readonly type = UPDATE_CREDIT_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateCreditFailed implements Action {\n    readonly type = UPDATE_CREDIT_FAILED;\n    constructor() { }\n}\n\nexport class PayCredits implements Action {\n    readonly type = PAY_CREDITS;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class PayCreditsSuccess implements Action {\n    readonly type = PAY_CREDITS_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLog implements Action {\n    readonly type = UPDATE_LOG;\n    constructor(public payload: { data: any, timestamp: any, log: any }) { }\n}\n\nexport class UpdateLogSuccess implements Action {\n    readonly type = UPDATE_LOG_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLogFailed implements Action {\n    readonly type = UPDATE_LOG_FAILED;\n    constructor() { }\n}\n\n\nexport type All\n    = Login\n    | LoginSuccess\n    | LoginFailed\n    | LoginG\n    | LoginGSuccess\n    | LoginGFailed\n    | UpdateInfo\n    | GetInfo\n    | GetInfoSuccess\n    | GetInfoFailed\n    | EditInfo\n    | EditInfoSuccess\n    | EditInfoFailed\n    | SignIn\n    | SignInSuccess\n    | SignInFailed\n    | SignOut\n    | ForgotPassword\n    | ForgotPasswordSentSuccess\n    | ForgotPasswordSentFailed\n    | InitInfo\n    | UpdateCredit\n    | UpdateCreditSuccess\n    | UpdateCreditFailed\n    | PayCredits\n    | PayCreditsSuccess\n    | UpdateLog\n    | UpdateLogSuccess\n    | UpdateLogFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateLogSuccess.html":{"url":"classes/UpdateLogSuccess.html","title":"class - UpdateLogSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateLogSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/user.actions.ts:172\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UPDATE_LOG_SUCCESS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/user.actions.ts:172\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOGIN = '[User] Login';\nexport const LOGIN_SUCCESS = '[User] Login -> Success';\nexport const LOGIN_FAILED = '[User] Login -> Failed';\nexport const LOGIN_G = '[User] Login Google';\nexport const LOGIN_G_SUCCESS = '[User] Login Google -> Success';\nexport const LOGIN_G_FAILED = '[User] Login Google -> Failed';\nexport const SIGNIN = '[User] SignIn';\nexport const SIGNIN_SUCCESS = '[User] Sign in -> Success';\nexport const SIGNIN_FAILED = '[User] Sign in -> Failed';\nexport const SIGNOUT = '[User] Sign out';\nexport const UPDATEINFO = '[User] Update info';\nexport const GETINFO = '[User] Get info';\nexport const GETINFO_SUCCESS = '[User] Get info -> Success';\nexport const GETINFO_FAILED = '[User] Get info -> Failed';\nexport const EDITINFO = '[User] EditInfo';\nexport const EDITINFO_SUCCESS = '[User] EditInfo -> Success';\nexport const EDITINFO_FAILED = '[User] EditInfo -> Failed';\nexport const FORGOT_PASSWORD = '[User] Forgot password';\nexport const FORGOT_PASSWORD_SENT_SUCCESS = '[User] Forgot password -> Sent Success';\nexport const FORGOT_PASSWORD_SENT_FAILED = '[User] Forgot password -> Sent Failed';\nexport const INIT_INFO = '[User] Init information';\nexport const UPDATE_CREDIT = '[User] Update credit';\nexport const UPDATE_CREDIT_SUCCESS = \"[User] Update credit -> Success\";\nexport const UPDATE_CREDIT_FAILED = \"[User] Update credit -> Failed\";\nexport const PAY_CREDITS = '[User] Pay credits';\nexport const PAY_CREDITS_SUCCESS = '[User] Pay credits -> Success';\nexport const REMOVE_CREDITS = '[User] Remove credits';\nexport const NO_MORE_CREDITS = '[User] No more credits';\nexport const UPDATE_LOG = \"[User] Update log\";\nexport const UPDATE_LOG_SUCCESS = \"[User] Update log -> Success\";\nexport const UPDATE_LOG_FAILED = \"[User] Update log -> Failed\";\n\n\nexport class Login implements Action {\n    readonly type = LOGIN;\n    constructor(public payload: { email: string, password: string }) { }\n}\n\nexport class LoginSuccess implements Action {\n    readonly type = LOGIN_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginFailed implements Action {\n    readonly type = LOGIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class LoginG implements Action {\n    readonly type = LOGIN_G;\n    constructor() { }\n}\n\nexport class LoginGSuccess implements Action {\n    readonly type = LOGIN_G_SUCCESS;\n    constructor(public payload: { currentUser: any }) { }\n}\n\nexport class LoginGFailed implements Action {\n    readonly type = LOGIN_G_FAILED;\n}\n\nexport class SignOut implements Action {\n    readonly type = SIGNOUT;\n    constructor() { }\n}\n\nexport class SignIn implements Action {\n    readonly type = SIGNIN;\n    constructor(public payload: { email: string, password: string, retypePassword: string, agreeTerm: boolean }) { }\n}\n\nexport class SignInSuccess implements Action {\n    readonly type = SIGNIN_SUCCESS;\n    constructor() { }\n}\n\nexport class SignInFailed implements Action {\n    readonly type = SIGNIN_FAILED;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class UpdateInfo implements Action {\n    readonly type = UPDATEINFO;\n    constructor(public payload: { name: string, address: string, phone: string }) { }\n}\n\nexport class GetInfo implements Action {\n    readonly type = GETINFO;\n    constructor(public payload: { email: string, annonymous: boolean }) { }\n}\n\nexport class GetInfoSuccess implements Action {\n    readonly type = GETINFO_SUCCESS;\n    constructor(public payload: { data: any }) { }\n}\n\nexport class GetInfoFailed implements Action {\n    readonly type = GETINFO_FAILED;\n    constructor() { }\n}\n\nexport class EditInfo implements Action {\n    readonly type = EDITINFO;\n    constructor(public payload: { newName: string, newPhone: string }) { }\n}\n\nexport class EditInfoSuccess implements Action {\n    readonly type = EDITINFO_SUCCESS;\n    constructor() { }\n}\n\nexport class EditInfoFailed implements Action {\n    readonly type = EDITINFO_FAILED;\n    constructor() { }\n}\n\nexport class ForgotPassword implements Action {\n    readonly type = FORGOT_PASSWORD;\n    constructor(public payload: { email: string }) { }\n}\n\nexport class ForgotPasswordSentSuccess implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_SUCCESS;\n    constructor() { }\n}\n\nexport class ForgotPasswordSentFailed implements Action {\n    readonly type = FORGOT_PASSWORD_SENT_FAILED;\n    constructor() { }\n}\n\nexport class InitInfo implements Action {\n    readonly type = INIT_INFO;\n    constructor(public payload: { userEmail: string }) { }\n}\n\nexport class UpdateCredit implements Action {\n    readonly type = UPDATE_CREDIT;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class UpdateCreditSuccess implements Action {\n    readonly type = UPDATE_CREDIT_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateCreditFailed implements Action {\n    readonly type = UPDATE_CREDIT_FAILED;\n    constructor() { }\n}\n\nexport class PayCredits implements Action {\n    readonly type = PAY_CREDITS;\n    constructor(public payload: { data: any, email: string, amount: number }) { }\n}\n\nexport class PayCreditsSuccess implements Action {\n    readonly type = PAY_CREDITS_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLog implements Action {\n    readonly type = UPDATE_LOG;\n    constructor(public payload: { data: any, timestamp: any, log: any }) { }\n}\n\nexport class UpdateLogSuccess implements Action {\n    readonly type = UPDATE_LOG_SUCCESS;\n    constructor() { }\n}\n\nexport class UpdateLogFailed implements Action {\n    readonly type = UPDATE_LOG_FAILED;\n    constructor() { }\n}\n\n\nexport type All\n    = Login\n    | LoginSuccess\n    | LoginFailed\n    | LoginG\n    | LoginGSuccess\n    | LoginGFailed\n    | UpdateInfo\n    | GetInfo\n    | GetInfoSuccess\n    | GetInfoFailed\n    | EditInfo\n    | EditInfoSuccess\n    | EditInfoFailed\n    | SignIn\n    | SignInSuccess\n    | SignInFailed\n    | SignOut\n    | ForgotPassword\n    | ForgotPasswordSentSuccess\n    | ForgotPasswordSentFailed\n    | InitInfo\n    | UpdateCredit\n    | UpdateCreditSuccess\n    | UpdateCreditFailed\n    | PayCredits\n    | PayCreditsSuccess\n    | UpdateLog\n    | UpdateLogSuccess\n    | UpdateLogFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currentUser\n                                \n                                \n                                        data\n                                \n                                \n                                        error\n                                \n                                \n                                        registration\n                                \n                                \n                                        signing\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentUser\n                                    \n                                \n                                \n                                    \n                                        currentUser:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registration\n                                    \n                                \n                                \n                                    \n                                        registration:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        signing\n                                    \n                                \n                                \n                                    \n                                        signing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n    currentUser: any;\n    error: boolean;\n    signing: boolean;\n    registration: { hasError: boolean, message: string };\n    data: any;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserEffects.html":{"url":"injectables/UserEffects.html","title":"injectable - UserEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/effects/user.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editInfo\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                getInfo\n                            \n                            \n                                login\n                            \n                            \n                                loginG\n                            \n                            \n                                loginSuccess\n                            \n                            \n                                signIn\n                            \n                            \n                                signOut\n                            \n                            \n                                updateCredit\n                            \n                            \n                                updateLog\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions: Actions, afAuth: AngularFireAuth, dataService: DataService, userService: UserService, db: AngularFireDatabase, log: SyslogService, gplus: GooglePlus, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/states/effects/user.effects.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        log\n                                                  \n                                                        \n                                                                        SyslogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gplus\n                                                  \n                                                        \n                                                                    GooglePlus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editInfo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions.pipe(\n        ofType(UserAction.EDITINFO),\n        map((action: UserAction.EditInfo) => action.payload),\n        mergeMap((payload) =>\n            from(this.afAuth.auth.currentUser.updateProfile({ displayName: payload.newName, photoURL: '' })\n            ).pipe(\n                map(respone => new UserAction.EditInfoSuccess()),\n                catchError(err => of(new UserAction.EditInfoFailed()))\n            )\n        )\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/effects/user.effects.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            forgotPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions.pipe(\n        ofType(UserAction.FORGOT_PASSWORD),\n        map((action: UserAction.ForgotPassword) => action.payload),\n        switchMap((payload) => from(this.afAuth.auth.sendPasswordResetEmail(payload.email))\n            .pipe(\n                map(respone => new UserAction.ForgotPasswordSentSuccess()),\n                catchError(err => of(new UserAction.ForgotPasswordSentFailed()))\n            )\n        )\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/effects/user.effects.ts:121\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getInfo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions.pipe(\n        ofType(UserAction.GETINFO),\n        map((action: UserAction.GetInfo) => action.payload),\n        switchMap((payload) => from(this.db.list('users/' + payload.email.replace(/\\./g, '&') + '/').snapshotChanges())\n            .pipe(\n                map((changes) => {\n                    console.log(changes);\n                    if (changes.length !== 0) {\n                        let data = {};\n                        for (let i = 0; i  {\n                    return of(new GetInfoFailed())\n                })\n            ))\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/effects/user.effects.ts:133\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions.pipe(\n        ofType(UserAction.LOGIN),\n        map((action: UserAction.Login) => action.payload),\n        mergeMap((payload) =>\n            from(this.afAuth.auth.signInWithEmailAndPassword(payload.email, payload.password))\n                .pipe(\n                    map(respone => {\n                        this.log.write(\"Login -> Success\");\n                        return new UserAction.LoginSuccess({ currentUser: this.afAuth.auth.currentUser })\n                    }),\n                    catchError((err) => {\n                        this.router.navigate([\"/\"]);\n                        this.log.write(\"Login -> Failed\");\n                        return of(new UserAction.LoginFailed(err))\n                    }\n                    )\n                )\n        )\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/effects/user.effects.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions.pipe(\n        ofType(UserAction.LOGIN_G),\n        mergeMap(async () => {\n\n            const gplusUser = await this.gplus.login({\n                'webClientId': '772496616432-rt7ogdkjl6mh1mc8qlmppfqs419l45nh.apps.googleusercontent.com',\n                'offline': true,\n                'scopes': 'profile email'\n            })\n            return from(this.afAuth.auth.signInWithCredential(auth.GoogleAuthProvider.credential(gplusUser)));\n        }),\n        map((credential) => {\n            return new LoginGSuccess({ currentUser: this.afAuth.auth.currentUser });\n        }),\n        catchError(err => of(new UserAction.LoginGFailed()))\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/effects/user.effects.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions.pipe(\n        ofType(UserAction.LOGIN_SUCCESS),\n        map((action: UserAction.LoginSuccess) => new UserAction.GetInfo({ email: action.payload.currentUser.email, annonymous: this.dataService.config['annonymous_mode'] }))\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/effects/user.effects.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions.pipe(\n        ofType(UserAction.SIGNIN),\n        map((action: UserAction.SignIn) => action.payload),\n        mergeMap((payload) => {\n            if (payload.password === payload.retypePassword && payload.password != undefined) {\n                if (payload.agreeTerm) {\n                    return from(this.afAuth.auth.createUserWithEmailAndPassword(payload.email, payload.password))\n                        .pipe(\n                            map(respone => new UserAction.SignInSuccess()),\n                            catchError(err => of(new UserAction.SignInFailed({ message: 'Cannot create new account' })))\n                        )\n                }\n                return of(new UserAction.SignInFailed({ message: 'Please read and agree with terms and conditions' }));\n            }\n            return of(new UserAction.SignInFailed({ message: 'Your password is incorrect' }));\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/effects/user.effects.ts:102\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions.pipe(\n        ofType(UserAction.SIGNOUT),\n        tap(() => {\n            this.router.navigate([\"/\"]);\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/effects/user.effects.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateCredit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions.pipe(\n        ofType(UserAction.UPDATE_CREDIT),\n        map((action: UserAction.UpdateCredit) => action.payload),\n        switchMap((payload) => this.db.object('users/' + payload.email.replace(/\\./g, '&')).update(payload.data)),\n        mergeMap(() => {\n            if (this.userService.getPayType() == this.userService.PAY_FOR_QUESTION) {\n                this.log.write(\"Used credit(s) for questions\");\n                this.router.navigate(['/test-room']);\n            }\n            return of(new UserAction.UpdateCreditSuccess())\n        }),\n        catchError(() => of(new UserAction.UpdateCreditFailed()))\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/effects/user.effects.ts:164\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateLog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions.pipe(\n        ofType(UserAction.UPDATE_LOG),\n        map((action: UserAction.UpdateLog) => action.payload),\n        switchMap((payload) => this.db.object('users/' + this.afAuth.auth.currentUser.email.replace(/\\./g, '&')).update(payload.data)),\n        map(() => {\n            this.router.navigate(['/test-result']);\n            return new UserAction.UpdateLogSuccess()\n        }),\n        catchError(() => of(new UserAction.UpdateLogFailed()))\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/effects/user.effects.ts:179\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Effect, Actions, ofType } from '@ngrx/effects';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\nimport { Observable, of, from } from 'rxjs';\n\nimport * as UserAction from '../actions/user.actions';\nimport { catchError, map, mergeMap, switchMap, tap, exhaustMap, concatMap } from 'rxjs/operators';\nimport { DataService } from '../../data.service';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../services/user.service';\nimport { UserType } from '../../UserType';\nimport { User } from '../models/user.model';\nimport { GetInfoFailed, LoginGSuccess } from '../actions/user.actions';\nimport { SyslogService } from '../../services/syslog.service';\nimport { auth } from 'firebase';\nimport { GooglePlus } from '@ionic-native/google-plus/ngx';\n\nexport type Action = UserAction.All;\n\n@Injectable()\nexport class UserEffects {\n    constructor(private actions: Actions,\n        private afAuth: AngularFireAuth,\n        private dataService: DataService,\n        private userService: UserService,\n        private db: AngularFireDatabase,\n        private log: SyslogService,\n        private gplus: GooglePlus,\n        private router: Router) {\n    }\n\n    @Effect()\n    login: Observable = this.actions.pipe(\n        ofType(UserAction.LOGIN),\n        map((action: UserAction.Login) => action.payload),\n        mergeMap((payload) =>\n            from(this.afAuth.auth.signInWithEmailAndPassword(payload.email, payload.password))\n                .pipe(\n                    map(respone => {\n                        this.log.write(\"Login -> Success\");\n                        return new UserAction.LoginSuccess({ currentUser: this.afAuth.auth.currentUser })\n                    }),\n                    catchError((err) => {\n                        this.router.navigate([\"/\"]);\n                        this.log.write(\"Login -> Failed\");\n                        return of(new UserAction.LoginFailed(err))\n                    }\n                    )\n                )\n        )\n    );\n\n    @Effect()\n    loginG: Observable = this.actions.pipe(\n        ofType(UserAction.LOGIN_G),\n        mergeMap(async () => {\n\n            const gplusUser = await this.gplus.login({\n                'webClientId': '772496616432-rt7ogdkjl6mh1mc8qlmppfqs419l45nh.apps.googleusercontent.com',\n                'offline': true,\n                'scopes': 'profile email'\n            })\n            return from(this.afAuth.auth.signInWithCredential(auth.GoogleAuthProvider.credential(gplusUser)));\n        }),\n        map((credential) => {\n            return new LoginGSuccess({ currentUser: this.afAuth.auth.currentUser });\n        }),\n        catchError(err => of(new UserAction.LoginGFailed()))\n    );\n\n    @Effect()\n    loginSuccess: Observable = this.actions.pipe(\n        ofType(UserAction.LOGIN_SUCCESS),\n        map((action: UserAction.LoginSuccess) => new UserAction.GetInfo({ email: action.payload.currentUser.email, annonymous: this.dataService.config['annonymous_mode'] }))\n    )\n\n    @Effect({ dispatch: false })\n    signOut: Observable = this.actions.pipe(\n        ofType(UserAction.SIGNOUT),\n        tap(() => {\n            this.router.navigate([\"/\"]);\n        })\n    )\n\n\n    @Effect()\n    editInfo: Observable = this.actions.pipe(\n        ofType(UserAction.EDITINFO),\n        map((action: UserAction.EditInfo) => action.payload),\n        mergeMap((payload) =>\n            from(this.afAuth.auth.currentUser.updateProfile({ displayName: payload.newName, photoURL: '' })\n            ).pipe(\n                map(respone => new UserAction.EditInfoSuccess()),\n                catchError(err => of(new UserAction.EditInfoFailed()))\n            )\n        )\n    );\n\n    @Effect()\n    signIn: Observable = this.actions.pipe(\n        ofType(UserAction.SIGNIN),\n        map((action: UserAction.SignIn) => action.payload),\n        mergeMap((payload) => {\n            if (payload.password === payload.retypePassword && payload.password != undefined) {\n                if (payload.agreeTerm) {\n                    return from(this.afAuth.auth.createUserWithEmailAndPassword(payload.email, payload.password))\n                        .pipe(\n                            map(respone => new UserAction.SignInSuccess()),\n                            catchError(err => of(new UserAction.SignInFailed({ message: 'Cannot create new account' })))\n                        )\n                }\n                return of(new UserAction.SignInFailed({ message: 'Please read and agree with terms and conditions' }));\n            }\n            return of(new UserAction.SignInFailed({ message: 'Your password is incorrect' }));\n        })\n    );\n\n    @Effect()\n    forgotPassword: Observable = this.actions.pipe(\n        ofType(UserAction.FORGOT_PASSWORD),\n        map((action: UserAction.ForgotPassword) => action.payload),\n        switchMap((payload) => from(this.afAuth.auth.sendPasswordResetEmail(payload.email))\n            .pipe(\n                map(respone => new UserAction.ForgotPasswordSentSuccess()),\n                catchError(err => of(new UserAction.ForgotPasswordSentFailed()))\n            )\n        )\n    );\n\n    @Effect()\n    getInfo: Observable = this.actions.pipe(\n        ofType(UserAction.GETINFO),\n        map((action: UserAction.GetInfo) => action.payload),\n        switchMap((payload) => from(this.db.list('users/' + payload.email.replace(/\\./g, '&') + '/').snapshotChanges())\n            .pipe(\n                map((changes) => {\n                    console.log(changes);\n                    if (changes.length !== 0) {\n                        let data = {};\n                        for (let i = 0; i  {\n                    return of(new GetInfoFailed())\n                })\n            ))\n    );\n\n    @Effect()\n    updateCredit: Observable = this.actions.pipe(\n        ofType(UserAction.UPDATE_CREDIT),\n        map((action: UserAction.UpdateCredit) => action.payload),\n        switchMap((payload) => this.db.object('users/' + payload.email.replace(/\\./g, '&')).update(payload.data)),\n        mergeMap(() => {\n            if (this.userService.getPayType() == this.userService.PAY_FOR_QUESTION) {\n                this.log.write(\"Used credit(s) for questions\");\n                this.router.navigate(['/test-room']);\n            }\n            return of(new UserAction.UpdateCreditSuccess())\n        }),\n        catchError(() => of(new UserAction.UpdateCreditFailed()))\n    )\n\n    @Effect()\n    updateLog: Observable = this.actions.pipe(\n        ofType(UserAction.UPDATE_LOG),\n        map((action: UserAction.UpdateLog) => action.payload),\n        switchMap((payload) => this.db.object('users/' + this.afAuth.auth.currentUser.email.replace(/\\./g, '&')).update(payload.data)),\n        map(() => {\n            this.router.navigate(['/test-result']);\n            return new UserAction.UpdateLogSuccess()\n        }),\n        catchError(() => of(new UserAction.UpdateLogFailed()))\n    )\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ADD_MORE_CREDITS\n                            \n                            \n                                    Private\n                                historyService\n                            \n                            \n                                PAY_FOR_QUESTION\n                            \n                            \n                                    Private\n                                payType\n                            \n                            \n                                user\n                            \n                            \n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addCredits\n                            \n                            \n                                    Public\n                                getPayType\n                            \n                            \n                                    Public\n                                getRole\n                            \n                            \n                                    Public\n                                isEnoughCredit\n                            \n                            \n                                    Public\n                                setHistoryService\n                            \n                            \n                                    Public\n                                writeLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addCredits\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addCredits(amount: number, type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPayType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPayType()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRole()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isEnoughCredit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEnoughCredit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHistoryService\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHistoryService(historyService: HistoryService)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    historyService\n                                    \n                                                HistoryService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            writeLog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeLog(time, correct, incorrect)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    correct\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    incorrect\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ADD_MORE_CREDITS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"ADD MORE CREDITS\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            historyService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HistoryService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PAY_FOR_QUESTION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"PAY_FOR_QUESTION\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            payType\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport IAppState from '../IAppState';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { User } from '../states/models/user.model';\nimport * as UserAction from '../states/actions/user.actions';\nimport { DataService } from '../data.service';\nimport { HistoryService } from './history.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  user: User;\n  user$: Observable;\n\n  private historyService: HistoryService;\n\n  private payType;\n\n  PAY_FOR_QUESTION = \"PAY_FOR_QUESTION\";\n  ADD_MORE_CREDITS = \"ADD MORE CREDITS\";\n\n  constructor(\n    private store: Store,\n    private dataService: DataService) {\n    this.user$ = store.select('user');\n    this.user$.subscribe((payload) => {\n      this.user = payload;\n    })\n  }\n\n  public setHistoryService(historyService: HistoryService) {\n    this.historyService = historyService;\n  }\n\n  public getPayType() {\n    return this.payType;\n  }\n\n  public addCredits(amount: number, type: string) {\n    this.payType = type;\n    this.store.dispatch(new UserAction.UpdateCredit({\n      data: this.user.data,\n      amount: amount,\n      email: this.user.currentUser.email\n    }));\n  }\n\n  public isEnoughCredit() {\n    return this.user.data.credits >= this.dataService.config['price'];\n  }\n\n  public getRole() {\n    if (this.user.data.role != undefined) {\n      return this.user.data.role;\n    }\n    return undefined;\n  }\n\n  public writeLog(time, correct, incorrect) {\n    this.store.dispatch(new UserAction.UpdateLog({\n      data: this.user.data,\n      timestamp: Date.now(),\n      log: {\n        'time': time,\n        'correct': correct,\n        'incorrect': incorrect\n      }\n    }))\n    this.historyService.writeGeneratedLog(correct);\n    this.historyService.writeGeneratedLog(incorrect);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VerifyEmailPage.html":{"url":"components/VerifyEmailPage.html","title":"component - VerifyEmailPage","body":"\n                   \n\n\n\n\n\n  Components\n  VerifyEmailPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/verify-email/verify-email.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-verify-email\n            \n\n            \n                styleUrls\n                ./verify-email.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./verify-email.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                reSend\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth)\n                    \n                \n                        \n                            \n                                Defined in src/app/verify-email/verify-email.page.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/verify-email/verify-email.page.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reSend\n                        \n                        \n                    \n                \n            \n            \n                \nreSend()\n                \n            \n\n\n            \n                \n                    Defined in src/app/verify-email/verify-email.page.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\n@Component({\n  selector: 'app-verify-email',\n  templateUrl: './verify-email.page.html',\n  styleUrls: ['./verify-email.page.scss'],\n})\nexport class VerifyEmailPage implements OnInit {\n\n  constructor(private afAuth: AngularFireAuth) { }\n\n  ngOnInit() {\n    this.reSend();\n  }\n\n  reSend() {\n    this.afAuth.auth.currentUser.sendEmailVerification();\n  }\n\n}\n\n    \n\n    \n        \n  \n    Email Verifying...\n  \n\n\n\n  \n    \n      We have sent verification email\n      Resend\n    \n\n    \n      \n        \n          Please check mail and\n            re-login to continue\n          \n        \n\n      \n    \n  \n\n    \n\n    \n                \n                    ./verify-email.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Email Verifying...              We have sent verification email      Resend                                Please check mail and            re-login to continue                              '\n    var COMPONENTS = [{'name': 'AccountPage', 'selector': 'app-account'},{'name': 'AdPagePage', 'selector': 'app-ad-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BeforeStartPage', 'selector': 'app-before-start'},{'name': 'CatInfoModalPage', 'selector': 'app-cat-info-modal'},{'name': 'ChallengePage', 'selector': 'app-challenge'},{'name': 'EditProfileModalPage', 'selector': 'app-edit-profile-modal'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'SignUpPage', 'selector': 'app-sign-up'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TestResultPage', 'selector': 'app-test-result'},{'name': 'TestRoomPage', 'selector': 'app-test-room'},{'name': 'TrainingPage', 'selector': 'app-training'},{'name': 'VerifyEmailPage', 'selector': 'app-verify-email'},{'name': 'WelcomePage', 'selector': 'app-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VerifyEmailPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VerifyEmailPageModule.html":{"url":"modules/VerifyEmailPageModule.html","title":"module - VerifyEmailPageModule","body":"\n                   \n\n\n\n\n    Modules\n    VerifyEmailPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VerifyEmailPageModule\n\n\n\ncluster_VerifyEmailPageModule_declarations\n\n\n\n\nVerifyEmailPage\n\nVerifyEmailPage\n\n\n\nVerifyEmailPageModule\n\nVerifyEmailPageModule\n\nVerifyEmailPageModule -->\n\nVerifyEmailPage->VerifyEmailPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/verify-email/verify-email.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VerifyEmailPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { VerifyEmailPage } from './verify-email.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: VerifyEmailPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [VerifyEmailPage]\n})\nexport class VerifyEmailPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WelcomePage.html":{"url":"components/WelcomePage.html","title":"component - WelcomePage","body":"\n                   \n\n\n\n\n\n  Components\n  WelcomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/welcome/welcome.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-welcome\n            \n\n            \n                styleUrls\n                ./welcome.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./welcome.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/welcome/welcome.page.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/welcome/welcome.page.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.page.html',\n  styleUrls: ['./welcome.page.scss'],\n})\nexport class WelcomePage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    Welcome to IT Passport\n  \n\n\n\n  \n  \n    \n      \n        \n      \n      \n        \n          \n            The first step to the Information Society\n            In proof of your IT skill and knowledge\n            Gain opportunity to expand your career\n          \n        \n      \n    \n    \n      \n        \n          \n            Three domains of questions for IT Passport Examination\n          \n        \n      \n    \n    \n      \n        \n          \n            Management Area\n          \n\n          \n            Basic knowledge and features about IT Management\n            System development\n            Project management\n            and so on ...\n          \n        \n      \n      \n        \n      \n    \n    \n      \n        \n      \n      \n        \n          \n            Strategy Area\n          \n          \n            Basic knowledge and features about total management methodology\n            Finance\n            Legal\n            Management strategy\n            and so on ...\n          \n        \n      \n    \n    \n      \n        \n          \n            Technology Area\n          \n          \n            Basic technical knowledge and features about IT\n            Network\n            Security\n            Database\n            and so on ...\n          \n        \n      \n      \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./welcome.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Welcome to IT Passport                                                                  The first step to the Information Society            In proof of your IT skill and knowledge            Gain opportunity to expand your career                                                                    Three domains of questions for IT Passport Examination                                                                    Management Area                                Basic knowledge and features about IT Management            System development            Project management            and so on ...                                                                                                            Strategy Area                                Basic knowledge and features about total management methodology            Finance            Legal            Management strategy            and so on ...                                                                    Technology Area                                Basic technical knowledge and features about IT            Network            Security            Database            and so on ...                                                  '\n    var COMPONENTS = [{'name': 'AccountPage', 'selector': 'app-account'},{'name': 'AdPagePage', 'selector': 'app-ad-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BeforeStartPage', 'selector': 'app-before-start'},{'name': 'CatInfoModalPage', 'selector': 'app-cat-info-modal'},{'name': 'ChallengePage', 'selector': 'app-challenge'},{'name': 'EditProfileModalPage', 'selector': 'app-edit-profile-modal'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'SignUpPage', 'selector': 'app-sign-up'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TestResultPage', 'selector': 'app-test-result'},{'name': 'TestRoomPage', 'selector': 'app-test-room'},{'name': 'TrainingPage', 'selector': 'app-training'},{'name': 'VerifyEmailPage', 'selector': 'app-verify-email'},{'name': 'WelcomePage', 'selector': 'app-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WelcomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WelcomePageModule.html":{"url":"modules/WelcomePageModule.html","title":"module - WelcomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    WelcomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WelcomePageModule\n\n\n\ncluster_WelcomePageModule_declarations\n\n\n\n\nWelcomePage\n\nWelcomePage\n\n\n\nWelcomePageModule\n\nWelcomePageModule\n\nWelcomePageModule -->\n\nWelcomePage->WelcomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/welcome/welcome.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            WelcomePage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { WelcomePage } from './welcome.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: WelcomePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [WelcomePage]\n})\nexport class WelcomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Write.html":{"url":"classes/Write.html","title":"class - Write","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Write\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/syslog.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/syslog.actions.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/syslog.actions.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : WRITE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/syslog.actions.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const WRITE = \"[Syslog] Write\";\nexport const WRITE_SUCCESS = \"[Syslog] Write -> Success\";\nexport const WRITE_FAILED = \"[Syslog] Write -> Failed\";\n\nexport class Write implements Action {\n    readonly type = WRITE;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class WriteSuccess implements Action {\n    readonly type = WRITE_SUCCESS;\n    constructor() { }\n}\n\nexport class WriteFailed implements Action {\n    readonly type = WRITE_FAILED;\n    constructor() { }\n}\n\nexport type All = Write\n    | WriteSuccess\n    | WriteFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WriteFailed.html":{"url":"classes/WriteFailed.html","title":"class - WriteFailed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WriteFailed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/syslog.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/syslog.actions.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : WRITE_FAILED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/syslog.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const WRITE = \"[Syslog] Write\";\nexport const WRITE_SUCCESS = \"[Syslog] Write -> Success\";\nexport const WRITE_FAILED = \"[Syslog] Write -> Failed\";\n\nexport class Write implements Action {\n    readonly type = WRITE;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class WriteSuccess implements Action {\n    readonly type = WRITE_SUCCESS;\n    constructor() { }\n}\n\nexport class WriteFailed implements Action {\n    readonly type = WRITE_FAILED;\n    constructor() { }\n}\n\nexport type All = Write\n    | WriteSuccess\n    | WriteFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WriteSuccess.html":{"url":"classes/WriteSuccess.html","title":"class - WriteSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WriteSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/states/actions/syslog.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/states/actions/syslog.actions.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : WRITE_SUCCESS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/states/actions/syslog.actions.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const WRITE = \"[Syslog] Write\";\nexport const WRITE_SUCCESS = \"[Syslog] Write -> Success\";\nexport const WRITE_FAILED = \"[Syslog] Write -> Failed\";\n\nexport class Write implements Action {\n    readonly type = WRITE;\n    constructor(public payload: { message: string }) { }\n}\n\nexport class WriteSuccess implements Action {\n    readonly type = WRITE_SUCCESS;\n    constructor() { }\n}\n\nexport class WriteFailed implements Action {\n    readonly type = WRITE_FAILED;\n    constructor() { }\n}\n\nexport type All = Write\n    | WriteSuccess\n    | WriteFailed;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/IAppState.ts\n            \n            interface\n            IAppState\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/account/account.page.ts\n            \n            component\n            AccountPage\n            \n                30 %\n                (3/10)\n            \n        \n        \n            \n                \n                src/app/ad-page/ad-page.page.ts\n            \n            component\n            AdPagePage\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/before-start/before-start.page.ts\n            \n            component\n            BeforeStartPage\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/cat-info-modal/cat-info-modal.page.ts\n            \n            component\n            CatInfoModalPage\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/challenge/challenge.page.ts\n            \n            component\n            ChallengePage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/data.service.ts\n            \n            injectable\n            DataService\n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                src/app/edit-profile-modal/edit-profile-modal.page.ts\n            \n            component\n            EditProfileModalPage\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/guards/before-test.guard.ts\n            \n            guard\n            BeforeTestGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/guards/in-test.guard.ts\n            \n            guard\n            InTestGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/guards/on-finish-test.guard.ts\n            \n            guard\n            OnFinishTestGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/login/login.page.ts\n            \n            component\n            LoginPage\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/category.service.ts\n            \n            injectable\n            CategoryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/history.service.ts\n            \n            injectable\n            HistoryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/question.service.ts\n            \n            injectable\n            QuestionService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/syslog.service.ts\n            \n            injectable\n            SyslogService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/time.service.ts\n            \n            injectable\n            TimeService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/sign-up/sign-up.page.ts\n            \n            component\n            SignUpPage\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/states/actions/category.action.ts\n            \n            class\n            Fetch\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/states/actions/category.action.ts\n            \n            class\n            FetchFailed\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/states/actions/category.action.ts\n            \n            class\n            FetchSuccess\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/states/actions/category.action.ts\n            \n            variable\n            FETCH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/category.action.ts\n            \n            variable\n            FETCH_FAILED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/category.action.ts\n            \n            variable\n            FETCH_SUCCESS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/config.action.ts\n            \n            class\n            Fetch\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/states/actions/config.action.ts\n            \n            class\n            FetchFailed\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/states/actions/config.action.ts\n            \n            class\n            FetchSuccess\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/states/actions/config.action.ts\n            \n            variable\n            FETCH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/config.action.ts\n            \n            variable\n            FETCH_FAILED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/config.action.ts\n            \n            variable\n            FETCH_SUCCESS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/history.action.ts\n            \n            class\n            Fetch\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/states/actions/history.action.ts\n            \n            class\n            FetchGeneratedLog\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/states/actions/history.action.ts\n            \n            class\n            FetchGeneratedLogSuccess\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/states/actions/history.action.ts\n            \n            class\n            FetchSuccess\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/states/actions/history.action.ts\n            \n            class\n            UpdateGeneratedLog\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/states/actions/history.action.ts\n            \n            class\n            UpdateGeneratedLogSuccess\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/states/actions/history.action.ts\n            \n            variable\n            FETCH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/history.action.ts\n            \n            variable\n            FETCH_GENERATED_LOG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/history.action.ts\n            \n            variable\n            FETCH_GENERATED_LOG_SUCCESS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/history.action.ts\n            \n            variable\n            FETCH_SUCCESS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/history.action.ts\n            \n            variable\n            UPDATE_GENERATED_LOG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/history.action.ts\n            \n            variable\n            UPDATE_GENERATED_LOG_FAILED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/history.action.ts\n            \n            variable\n            UPDATE_GENERATED_LOG_SUCCESS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/question.action.ts\n            \n            class\n            Fetch\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/states/actions/question.action.ts\n            \n            class\n            FetchSuccess\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/states/actions/question.action.ts\n            \n            variable\n            FETCH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/question.action.ts\n            \n            variable\n            FETCH_SUCCESS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/syslog.actions.ts\n            \n            class\n            Write\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/states/actions/syslog.actions.ts\n            \n            class\n            WriteFailed\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/states/actions/syslog.actions.ts\n            \n            class\n            WriteSuccess\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/states/actions/syslog.actions.ts\n            \n            variable\n            WRITE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/syslog.actions.ts\n            \n            variable\n            WRITE_FAILED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/syslog.actions.ts\n            \n            variable\n            WRITE_SUCCESS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            class\n            EditInfo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            class\n            EditInfoFailed\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            class\n            EditInfoSuccess\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            class\n            ForgotPassword\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            class\n            ForgotPasswordSentFailed\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            class\n            ForgotPasswordSentSuccess\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            class\n            GetInfo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            class\n            GetInfoFailed\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            class\n            GetInfoSuccess\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            class\n            InitInfo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            class\n            Login\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            class\n            LoginFailed\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            class\n            LoginG\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            class\n            LoginGFailed\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            class\n            LoginGSuccess\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            class\n            LoginSuccess\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            class\n            PayCredits\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            class\n            PayCreditsSuccess\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            class\n            SignIn\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            class\n            SignInFailed\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            class\n            SignInSuccess\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            class\n            SignOut\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            class\n            UpdateCredit\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            class\n            UpdateCreditFailed\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            class\n            UpdateCreditSuccess\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            class\n            UpdateInfo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            class\n            UpdateLog\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            class\n            UpdateLogFailed\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            class\n            UpdateLogSuccess\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            EDITINFO\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            EDITINFO_FAILED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            EDITINFO_SUCCESS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            FORGOT_PASSWORD\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            FORGOT_PASSWORD_SENT_FAILED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            FORGOT_PASSWORD_SENT_SUCCESS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            GETINFO\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            GETINFO_FAILED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            GETINFO_SUCCESS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            INIT_INFO\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            LOGIN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            LOGIN_FAILED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            LOGIN_G\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            LOGIN_G_FAILED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            LOGIN_G_SUCCESS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            LOGIN_SUCCESS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            NO_MORE_CREDITS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            PAY_CREDITS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            PAY_CREDITS_SUCCESS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            REMOVE_CREDITS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            SIGNIN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            SIGNIN_FAILED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            SIGNIN_SUCCESS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            SIGNOUT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            UPDATE_CREDIT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            UPDATE_CREDIT_FAILED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            UPDATE_CREDIT_SUCCESS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            UPDATE_LOG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            UPDATE_LOG_FAILED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            UPDATE_LOG_SUCCESS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/actions/user.actions.ts\n            \n            variable\n            UPDATEINFO\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/effects/category.effect.ts\n            \n            injectable\n            CategoryEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/states/effects/config.effect.ts\n            \n            injectable\n            ConfigEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/states/effects/history.effect.ts\n            \n            injectable\n            HistoryEffects\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/states/effects/question.effect.ts\n            \n            injectable\n            QuestionEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/states/effects/syslog.effect.ts\n            \n            injectable\n            SysLogEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/states/effects/user.effects.ts\n            \n            injectable\n            UserEffects\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/states/models/category.model.ts\n            \n            interface\n            Category\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/states/models/config.model.ts\n            \n            interface\n            Config\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/states/models/history.model.ts\n            \n            interface\n            History\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/states/models/question.model.ts\n            \n            interface\n            Question\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/states/models/syslog.model.ts\n            \n            interface\n            SysLog\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/states/models/user.model.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/states/reducers/category.reducer.ts\n            \n            function\n            categoryReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/reducers/category.reducer.ts\n            \n            variable\n            defaultCategory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/reducers/config.reducer.ts\n            \n            function\n            configReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/reducers/config.reducer.ts\n            \n            variable\n            defaultConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/reducers/history.reducer.ts\n            \n            function\n            historyReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/reducers/history.reducer.ts\n            \n            variable\n            defaultHistory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/reducers/question.reducer.ts\n            \n            function\n            questionReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/reducers/question.reducer.ts\n            \n            variable\n            defaultQuestion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/reducers/syslog.reducer.ts\n            \n            function\n            syslogReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/reducers/syslog.reducer.ts\n            \n            variable\n            defaultSysLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/reducers/user.reducer.ts\n            \n            function\n            userReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/states/reducers/user.reducer.ts\n            \n            variable\n            defaultState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/tab1/tab1.page.ts\n            \n            component\n            Tab1Page\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/tab2/tab2.page.ts\n            \n            component\n            Tab2Page\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/tab3/tab3.page.ts\n            \n            component\n            Tab3Page\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/tabs/tabs.page.ts\n            \n            component\n            TabsPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/test-result/test-result.page.ts\n            \n            component\n            TestResultPage\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/test-room/test-room.page.ts\n            \n            component\n            TestRoomPage\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/training/training.page.ts\n            \n            component\n            TrainingPage\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/verify-email/verify-email.page.ts\n            \n            component\n            VerifyEmailPage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/welcome/welcome.page.ts\n            \n            component\n            WelcomePage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @admob-plus/ionic : ^0.19.5\n        \n            @angular/common : ~7.1.4\n        \n            @angular/core : ~7.1.4\n        \n            @angular/fire : ^5.2.1\n        \n            @angular/forms : ~7.1.4\n        \n            @angular/http : ~7.1.4\n        \n            @angular/platform-browser : ~7.1.4\n        \n            @angular/platform-browser-dynamic : ~7.1.4\n        \n            @angular/router : ~7.1.4\n        \n            @capacitor/android : ^1.1.1\n        \n            @capacitor/cli : 1.0.0-beta.13\n        \n            @capacitor/core : 1.0.0-beta.13\n        \n            @ionic-native/core : ^5.11.0\n        \n            @ionic-native/google-plus : ^5.11.0\n        \n            @ionic-native/splash-screen : 5.0.0-beta.21\n        \n            @ionic-native/status-bar : 5.0.0-beta.21\n        \n            @ionic/angular : 4.0.0-rc.0\n        \n            @ionic/pro : 2.0.4\n        \n            @ionic/storage : ^2.2.0\n        \n            @ngrx/core : ^1.2.0\n        \n            @ngrx/effects : ^7.4.0\n        \n            @ngrx/store : ^7.4.0\n        \n            @ngrx/store-devtools : ^7.4.0\n        \n            cordova-plugin-device : ^2.0.3\n        \n            cordova-plugin-googleplus : 7.0.1\n        \n            cordova-plugin-ionic-keyboard : ^2.1.3\n        \n            cordova-plugin-ionic-webview : ^2.5.1\n        \n            cordova-plugin-splashscreen : ^5.0.3\n        \n            cordova-plugin-statusbar : ^2.4.3\n        \n            cordova-plugin-whitelist : ^1.3.4\n        \n            cordova-sqlite-storage : 3.1.0\n        \n            cordova-windows : 6.0.1\n        \n            core-js : ^2.6.9\n        \n            firebase : ^5.11.1\n        \n            ionic : ^4.12.0\n        \n            ionic-long-press : ^1.5.0\n        \n            ngx-markdown : ^7.1.5\n        \n            rxjs : ~6.3.3\n        \n            rxjs-compat : ^6.5.2\n        \n            zone.js : ^0.8.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UserType   (src/.../UserType.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/UserType.ts\n    \n        \n            \n                \n                    \n                        \n                        UserType\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 EDITOR\n                            \n                        \n                        \n                            \n                                Value : editor\n                            \n                        \n                        \n                            \n                                 NORMAL\n                            \n                        \n                        \n                            \n                                Value : normal\n                            \n                        \n                        \n                            \n                                 INACTIVATED\n                            \n                        \n                        \n                            \n                                Value : inactivated\n                            \n                        \n                        \n                            \n                                 BANNED\n                            \n                        \n                        \n                            \n                                Value : banned\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            categoryReducer   (src/.../category.reducer.ts)\n                        \n                        \n                            configReducer   (src/.../config.reducer.ts)\n                        \n                        \n                            historyReducer   (src/.../history.reducer.ts)\n                        \n                        \n                            questionReducer   (src/.../question.reducer.ts)\n                        \n                        \n                            syslogReducer   (src/.../syslog.reducer.ts)\n                        \n                        \n                            userReducer   (src/.../user.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/states/reducers/category.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            categoryReducer\n                        \n                        \n                    \n                \n            \n            \n                \ncategoryReducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/states/reducers/config.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            configReducer\n                        \n                        \n                    \n                \n            \n            \n                \nconfigReducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/states/reducers/history.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            historyReducer\n                        \n                        \n                    \n                \n            \n            \n                \nhistoryReducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/states/reducers/question.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            questionReducer\n                        \n                        \n                    \n                \n            \n            \n                \nquestionReducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/states/reducers/syslog.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            syslogReducer\n                        \n                        \n                    \n                \n            \n            \n                \nsyslogReducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/states/reducers/user.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            userReducer\n                        \n                        \n                    \n                \n            \n            \n                \nuserReducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountPageModule\n\n\n\ncluster_AccountPageModule_declarations\n\n\n\ncluster_AdPagePageModule\n\n\n\ncluster_AdPagePageModule_declarations\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_BeforeStartPageModule\n\n\n\ncluster_BeforeStartPageModule_declarations\n\n\n\ncluster_CatInfoModalPageModule\n\n\n\ncluster_CatInfoModalPageModule_declarations\n\n\n\ncluster_ChallengePageModule\n\n\n\ncluster_ChallengePageModule_declarations\n\n\n\ncluster_EditProfileModalPageModule\n\n\n\ncluster_EditProfileModalPageModule_declarations\n\n\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\ncluster_SignUpPageModule\n\n\n\ncluster_SignUpPageModule_declarations\n\n\n\ncluster_Tab1PageModule\n\n\n\ncluster_Tab1PageModule_declarations\n\n\n\ncluster_Tab2PageModule\n\n\n\ncluster_Tab2PageModule_declarations\n\n\n\ncluster_Tab3PageModule\n\n\n\ncluster_Tab3PageModule_declarations\n\n\n\ncluster_TabsPageModule\n\n\n\ncluster_TabsPageModule_declarations\n\n\n\ncluster_TabsPageModule_imports\n\n\n\ncluster_TestResultPageModule\n\n\n\ncluster_TestResultPageModule_declarations\n\n\n\ncluster_TestRoomPageModule\n\n\n\ncluster_TestRoomPageModule_declarations\n\n\n\ncluster_TrainingPageModule\n\n\n\ncluster_TrainingPageModule_declarations\n\n\n\ncluster_VerifyEmailPageModule\n\n\n\ncluster_VerifyEmailPageModule_declarations\n\n\n\ncluster_WelcomePageModule\n\n\n\ncluster_WelcomePageModule_declarations\n\n\n\n\nAccountPage\n\nAccountPage\n\n\n\nAccountPageModule\n\nAccountPageModule\n\nAccountPageModule -->\n\nAccountPage->AccountPageModule\n\n\n\n\n\nAdPagePage\n\nAdPagePage\n\n\n\nAdPagePageModule\n\nAdPagePageModule\n\nAdPagePageModule -->\n\nAdPagePage->AdPagePageModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCatInfoModalPageModule\n\nCatInfoModalPageModule\n\nAppModule -->\n\nCatInfoModalPageModule->AppModule\n\n\n\n\n\nEditProfileModalPageModule\n\nEditProfileModalPageModule\n\nAppModule -->\n\nEditProfileModalPageModule->AppModule\n\n\n\n\n\nBeforeStartPage\n\nBeforeStartPage\n\n\n\nBeforeStartPageModule\n\nBeforeStartPageModule\n\nBeforeStartPageModule -->\n\nBeforeStartPage->BeforeStartPageModule\n\n\n\n\n\nCatInfoModalPage\n\nCatInfoModalPage\n\nCatInfoModalPageModule -->\n\nCatInfoModalPage->CatInfoModalPageModule\n\n\n\n\n\nChallengePage\n\nChallengePage\n\n\n\nChallengePageModule\n\nChallengePageModule\n\nChallengePageModule -->\n\nChallengePage->ChallengePageModule\n\n\n\n\n\nEditProfileModalPage\n\nEditProfileModalPage\n\nEditProfileModalPageModule -->\n\nEditProfileModalPage->EditProfileModalPageModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nSignUpPage\n\nSignUpPage\n\n\n\nSignUpPageModule\n\nSignUpPageModule\n\nSignUpPageModule -->\n\nSignUpPage->SignUpPageModule\n\n\n\n\n\nTab1Page\n\nTab1Page\n\n\n\nTab1PageModule\n\nTab1PageModule\n\nTab1PageModule -->\n\nTab1Page->Tab1PageModule\n\n\n\n\n\nTab2Page\n\nTab2Page\n\n\n\nTab2PageModule\n\nTab2PageModule\n\nTab2PageModule -->\n\nTab2Page->Tab2PageModule\n\n\n\n\n\nTab3Page\n\nTab3Page\n\n\n\nTab3PageModule\n\nTab3PageModule\n\nTab3PageModule -->\n\nTab3Page->Tab3PageModule\n\n\n\n\n\nTabsPage\n\nTabsPage\n\n\n\nTabsPageModule\n\nTabsPageModule\n\nTabsPageModule -->\n\nTabsPage->TabsPageModule\n\n\n\n\n\nTabsPageRoutingModule\n\nTabsPageRoutingModule\n\nTabsPageModule -->\n\nTabsPageRoutingModule->TabsPageModule\n\n\n\n\n\nTestResultPage\n\nTestResultPage\n\n\n\nTestResultPageModule\n\nTestResultPageModule\n\nTestResultPageModule -->\n\nTestResultPage->TestResultPageModule\n\n\n\n\n\nTestRoomPage\n\nTestRoomPage\n\n\n\nTestRoomPageModule\n\nTestRoomPageModule\n\nTestRoomPageModule -->\n\nTestRoomPage->TestRoomPageModule\n\n\n\n\n\nTrainingPage\n\nTrainingPage\n\n\n\nTrainingPageModule\n\nTrainingPageModule\n\nTrainingPageModule -->\n\nTrainingPage->TrainingPageModule\n\n\n\n\n\nVerifyEmailPage\n\nVerifyEmailPage\n\n\n\nVerifyEmailPageModule\n\nVerifyEmailPageModule\n\nVerifyEmailPageModule -->\n\nVerifyEmailPage->VerifyEmailPageModule\n\n\n\n\n\nWelcomePage\n\nWelcomePage\n\n\n\nWelcomePageModule\n\nWelcomePageModule\n\nWelcomePageModule -->\n\nWelcomePage->WelcomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        20 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    18 Components\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    46 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        67 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AccountPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AdPagePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BeforeStartPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CatInfoModalPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChallengePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EditProfileModalPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SignUpPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        Tab1PageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        Tab2PageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        Tab3PageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TestResultPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TestRoomPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrainingPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VerifyEmailPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WelcomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Action   (src/.../question.effect.ts)\n                        \n                        \n                            Action   (src/.../syslog.reducer.ts)\n                        \n                        \n                            Action   (src/.../user.reducer.ts)\n                        \n                        \n                            Action   (src/.../question.reducer.ts)\n                        \n                        \n                            Action   (src/.../history.reducer.ts)\n                        \n                        \n                            Action   (src/.../config.reducer.ts)\n                        \n                        \n                            Action   (src/.../category.effect.ts)\n                        \n                        \n                            Action   (src/.../config.effect.ts)\n                        \n                        \n                            Action   (src/.../category.reducer.ts)\n                        \n                        \n                            Action   (src/.../syslog.effect.ts)\n                        \n                        \n                            Action   (src/.../user.effects.ts)\n                        \n                        \n                            All   (src/.../category.action.ts)\n                        \n                        \n                            All   (src/.../user.actions.ts)\n                        \n                        \n                            All   (src/.../syslog.actions.ts)\n                        \n                        \n                            All   (src/.../question.action.ts)\n                        \n                        \n                            All   (src/.../history.action.ts)\n                        \n                        \n                            All   (src/.../config.action.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/states/effects/question.effect.ts\n    \n    \n        \n            \n                \n                    \n                    Action\n                \n            \n            \n                \n                            QuestionAction.All\n\n                \n            \n        \n    \n    src/app/states/reducers/syslog.reducer.ts\n    \n    \n        \n            \n                \n                    \n                    Action\n                \n            \n            \n                \n                            SysLogAction.All\n\n                \n            \n        \n    \n    src/app/states/reducers/user.reducer.ts\n    \n    \n        \n            \n                \n                    \n                    Action\n                \n            \n            \n                \n                            UserAction.All\n\n                \n            \n        \n    \n    src/app/states/reducers/question.reducer.ts\n    \n    \n        \n            \n                \n                    \n                    Action\n                \n            \n            \n                \n                            QuestionAction.All\n\n                \n            \n        \n    \n    src/app/states/reducers/history.reducer.ts\n    \n    \n        \n            \n                \n                    \n                    Action\n                \n            \n            \n                \n                            HistoryAction.All\n\n                \n            \n        \n    \n    src/app/states/reducers/config.reducer.ts\n    \n    \n        \n            \n                \n                    \n                    Action\n                \n            \n            \n                \n                            ConfigAction.All\n\n                \n            \n        \n    \n    src/app/states/effects/category.effect.ts\n    \n    \n        \n            \n                \n                    \n                    Action\n                \n            \n            \n                \n                            CategoryAction.All\n\n                \n            \n        \n    \n    src/app/states/effects/config.effect.ts\n    \n    \n        \n            \n                \n                    \n                    Action\n                \n            \n            \n                \n                            ConfigAction.All\n\n                \n            \n        \n    \n    src/app/states/reducers/category.reducer.ts\n    \n    \n        \n            \n                \n                    \n                    Action\n                \n            \n            \n                \n                            CategoryAction.All\n\n                \n            \n        \n    \n    src/app/states/effects/syslog.effect.ts\n    \n    \n        \n            \n                \n                    \n                    Action\n                \n            \n            \n                \n                            SysLogAction.All\n\n                \n            \n        \n    \n    src/app/states/effects/user.effects.ts\n    \n    \n        \n            \n                \n                    \n                    Action\n                \n            \n            \n                \n                            UserAction.All\n\n                \n            \n        \n    \n    src/app/states/actions/category.action.ts\n    \n    \n        \n            \n                \n                    \n                    All\n                \n            \n            \n                \n                        Fetch | FetchSuccess | FetchFailed\n\n                \n            \n        \n    \n    src/app/states/actions/user.actions.ts\n    \n    \n        \n            \n                \n                    \n                    All\n                \n            \n            \n                \n                        Login | LoginSuccess | LoginFailed | LoginG | LoginGSuccess | LoginGFailed | UpdateInfo | GetInfo | GetInfoSuccess | GetInfoFailed | EditInfo | EditInfoSuccess | EditInfoFailed | SignIn | SignInSuccess | SignInFailed | SignOut | ForgotPassword | ForgotPasswordSentSuccess | ForgotPasswordSentFailed | InitInfo | UpdateCredit | UpdateCreditSuccess | UpdateCreditFailed | PayCredits | PayCreditsSuccess | UpdateLog | UpdateLogSuccess | UpdateLogFailed\n\n                \n            \n        \n    \n    src/app/states/actions/syslog.actions.ts\n    \n    \n        \n            \n                \n                    \n                    All\n                \n            \n            \n                \n                        Write | WriteSuccess | WriteFailed\n\n                \n            \n        \n    \n    src/app/states/actions/question.action.ts\n    \n    \n        \n            \n                \n                    \n                    All\n                \n            \n            \n                \n                        Fetch | FetchSuccess\n\n                \n            \n        \n    \n    src/app/states/actions/history.action.ts\n    \n    \n        \n            \n                \n                    \n                    All\n                \n            \n            \n                \n                        Fetch | FetchSuccess | FetchGeneratedLog | FetchGeneratedLogSuccess | UpdateGeneratedLog | UpdateGeneratedLogSuccess\n\n                \n            \n        \n    \n    src/app/states/actions/config.action.ts\n    \n    \n        \n            \n                \n                    \n                    All\n                \n            \n            \n                \n                        Fetch | FetchSuccess | FetchFailed\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defaultCategory   (src/.../category.reducer.ts)\n                        \n                        \n                            defaultConfig   (src/.../config.reducer.ts)\n                        \n                        \n                            defaultHistory   (src/.../history.reducer.ts)\n                        \n                        \n                            defaultQuestion   (src/.../question.reducer.ts)\n                        \n                        \n                            defaultState   (src/.../user.reducer.ts)\n                        \n                        \n                            defaultSysLog   (src/.../syslog.reducer.ts)\n                        \n                        \n                            EDITINFO   (src/.../user.actions.ts)\n                        \n                        \n                            EDITINFO_FAILED   (src/.../user.actions.ts)\n                        \n                        \n                            EDITINFO_SUCCESS   (src/.../user.actions.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            FETCH   (src/.../config.action.ts)\n                        \n                        \n                            FETCH   (src/.../question.action.ts)\n                        \n                        \n                            FETCH   (src/.../category.action.ts)\n                        \n                        \n                            FETCH   (src/.../history.action.ts)\n                        \n                        \n                            FETCH_FAILED   (src/.../config.action.ts)\n                        \n                        \n                            FETCH_FAILED   (src/.../category.action.ts)\n                        \n                        \n                            FETCH_GENERATED_LOG   (src/.../history.action.ts)\n                        \n                        \n                            FETCH_GENERATED_LOG_SUCCESS   (src/.../history.action.ts)\n                        \n                        \n                            FETCH_SUCCESS   (src/.../category.action.ts)\n                        \n                        \n                            FETCH_SUCCESS   (src/.../question.action.ts)\n                        \n                        \n                            FETCH_SUCCESS   (src/.../config.action.ts)\n                        \n                        \n                            FETCH_SUCCESS   (src/.../history.action.ts)\n                        \n                        \n                            FORGOT_PASSWORD   (src/.../user.actions.ts)\n                        \n                        \n                            FORGOT_PASSWORD_SENT_FAILED   (src/.../user.actions.ts)\n                        \n                        \n                            FORGOT_PASSWORD_SENT_SUCCESS   (src/.../user.actions.ts)\n                        \n                        \n                            GETINFO   (src/.../user.actions.ts)\n                        \n                        \n                            GETINFO_FAILED   (src/.../user.actions.ts)\n                        \n                        \n                            GETINFO_SUCCESS   (src/.../user.actions.ts)\n                        \n                        \n                            INIT_INFO   (src/.../user.actions.ts)\n                        \n                        \n                            LOGIN   (src/.../user.actions.ts)\n                        \n                        \n                            LOGIN_FAILED   (src/.../user.actions.ts)\n                        \n                        \n                            LOGIN_G   (src/.../user.actions.ts)\n                        \n                        \n                            LOGIN_G_FAILED   (src/.../user.actions.ts)\n                        \n                        \n                            LOGIN_G_SUCCESS   (src/.../user.actions.ts)\n                        \n                        \n                            LOGIN_SUCCESS   (src/.../user.actions.ts)\n                        \n                        \n                            NO_MORE_CREDITS   (src/.../user.actions.ts)\n                        \n                        \n                            PAY_CREDITS   (src/.../user.actions.ts)\n                        \n                        \n                            PAY_CREDITS_SUCCESS   (src/.../user.actions.ts)\n                        \n                        \n                            REMOVE_CREDITS   (src/.../user.actions.ts)\n                        \n                        \n                            SIGNIN   (src/.../user.actions.ts)\n                        \n                        \n                            SIGNIN_FAILED   (src/.../user.actions.ts)\n                        \n                        \n                            SIGNIN_SUCCESS   (src/.../user.actions.ts)\n                        \n                        \n                            SIGNOUT   (src/.../user.actions.ts)\n                        \n                        \n                            UPDATE_CREDIT   (src/.../user.actions.ts)\n                        \n                        \n                            UPDATE_CREDIT_FAILED   (src/.../user.actions.ts)\n                        \n                        \n                            UPDATE_CREDIT_SUCCESS   (src/.../user.actions.ts)\n                        \n                        \n                            UPDATE_GENERATED_LOG   (src/.../history.action.ts)\n                        \n                        \n                            UPDATE_GENERATED_LOG_FAILED   (src/.../history.action.ts)\n                        \n                        \n                            UPDATE_GENERATED_LOG_SUCCESS   (src/.../history.action.ts)\n                        \n                        \n                            UPDATE_LOG   (src/.../user.actions.ts)\n                        \n                        \n                            UPDATE_LOG_FAILED   (src/.../user.actions.ts)\n                        \n                        \n                            UPDATE_LOG_SUCCESS   (src/.../user.actions.ts)\n                        \n                        \n                            UPDATEINFO   (src/.../user.actions.ts)\n                        \n                        \n                            WRITE   (src/.../syslog.actions.ts)\n                        \n                        \n                            WRITE_FAILED   (src/.../syslog.actions.ts)\n                        \n                        \n                            WRITE_SUCCESS   (src/.../syslog.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/states/reducers/category.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultCategory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    cat: {}\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/states/reducers/config.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    system: {}\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/states/reducers/history.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultHistory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    log: {},\n    generated: {}\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/states/reducers/question.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultQuestion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    list: {}\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/states/reducers/user.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    currentUser: {},\n    error: true,\n    signing: false,\n    registration: {\n        hasError: false,\n        message: ''\n    },\n    data: {},\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/states/reducers/syslog.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultSysLog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    log: {}\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/states/actions/user.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITINFO\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[User] EditInfo'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EDITINFO_FAILED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[User] EditInfo -> Failed'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EDITINFO_SUCCESS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[User] EditInfo -> Success'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FORGOT_PASSWORD\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[User] Forgot password'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FORGOT_PASSWORD_SENT_FAILED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[User] Forgot password -> Sent Failed'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FORGOT_PASSWORD_SENT_SUCCESS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[User] Forgot password -> Sent Success'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GETINFO\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[User] Get info'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GETINFO_FAILED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[User] Get info -> Failed'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GETINFO_SUCCESS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[User] Get info -> Success'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            INIT_INFO\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[User] Init information'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LOGIN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[User] Login'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LOGIN_FAILED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[User] Login -> Failed'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LOGIN_G\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[User] Login Google'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LOGIN_G_FAILED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[User] Login Google -> Failed'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LOGIN_G_SUCCESS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[User] Login Google -> Success'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LOGIN_SUCCESS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[User] Login -> Success'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NO_MORE_CREDITS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[User] No more credits'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PAY_CREDITS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[User] Pay credits'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PAY_CREDITS_SUCCESS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[User] Pay credits -> Success'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            REMOVE_CREDITS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[User] Remove credits'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SIGNIN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[User] SignIn'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SIGNIN_FAILED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[User] Sign in -> Failed'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SIGNIN_SUCCESS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[User] Sign in -> Success'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SIGNOUT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[User] Sign out'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UPDATE_CREDIT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[User] Update credit'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UPDATE_CREDIT_FAILED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"[User] Update credit -> Failed\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UPDATE_CREDIT_SUCCESS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"[User] Update credit -> Success\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UPDATE_LOG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"[User] Update log\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UPDATE_LOG_FAILED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"[User] Update log -> Failed\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UPDATE_LOG_SUCCESS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"[User] Update log -> Success\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UPDATEINFO\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[User] Update info'\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  firebase: {\n    apiKey: \"AIzaSyDv48k3xnscCgxKFDtKiDH9weTSXsJFAAQ\",\n    authDomain: \"itpassport-9ccc9.firebaseapp.com\",\n    databaseURL: \"https://itpassport-9ccc9.firebaseio.com\",\n    projectId: \"itpassport-9ccc9\",\n    storageBucket: \"itpassport-9ccc9.appspot.com\",\n    messagingSenderId: \"772496616432\"\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyDv48k3xnscCgxKFDtKiDH9weTSXsJFAAQ\",\n    authDomain: \"itpassport-9ccc9.firebaseapp.com\",\n    databaseURL: \"https://itpassport-9ccc9.firebaseio.com\",\n    projectId: \"itpassport-9ccc9\",\n    storageBucket: \"itpassport-9ccc9.appspot.com\",\n    messagingSenderId: \"772496616432\"\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/states/actions/config.action.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FETCH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Config] Fetch'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FETCH_FAILED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Config] Fetch -> Failed'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FETCH_SUCCESS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Config] Fetch -> Success'\n                        \n                    \n\n\n            \n        \n\n    src/app/states/actions/question.action.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FETCH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"[Question] Fetch\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FETCH_SUCCESS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Question]  Fetch -> Success'\n                        \n                    \n\n\n            \n        \n\n    src/app/states/actions/category.action.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FETCH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"[Category] Fetch\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FETCH_FAILED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"[Category] Fetch -> Failed\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FETCH_SUCCESS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"[Category] Fetch -> Success\"\n                        \n                    \n\n\n            \n        \n\n    src/app/states/actions/history.action.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FETCH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"[History] Fetch\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FETCH_GENERATED_LOG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"[History] Fetch generated log\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FETCH_GENERATED_LOG_SUCCESS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"[History] Fetch generated log -> Success\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FETCH_SUCCESS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"[History] Fetch Success\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UPDATE_GENERATED_LOG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"[History] Update generated log\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UPDATE_GENERATED_LOG_FAILED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"[History] Update generated log -> Failed\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UPDATE_GENERATED_LOG_SUCCESS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"[History] Update generated log -> Success\"\n                        \n                    \n\n\n            \n        \n\n    src/app/states/actions/syslog.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            WRITE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"[Syslog] Write\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WRITE_FAILED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"[Syslog] Write -> Failed\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WRITE_SUCCESS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"[Syslog] Write -> Success\"\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
